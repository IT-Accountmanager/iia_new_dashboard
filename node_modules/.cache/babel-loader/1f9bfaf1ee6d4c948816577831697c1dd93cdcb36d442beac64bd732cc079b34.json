{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhil.t.EIS\\\\Videos\\\\IIA_Final\\\\IIA_DASHBOARDS\\\\src\\\\Component\\\\Layout1.js\",\n  _s = $RefreshSig$();\nimport { Category } from '@mui/icons-material';\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { CloudUpload, CloudDownload, CheckCircleOutline, RemoveRedEye, Edit } from '@mui/icons-material';\nimport { Card, CardHeader, CardContent, CardActions, Button, Checkbox, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, TextField, IconButton } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Layout1 = () => {\n  _s();\n  // const datasource = [\n  //     {\n  //         SNo: '1',\n  //         Category: \"\",\n  //         Organization: \"\",\n  //         Name: 'Kumar Ravi',\n  //         contactNumber: '9876543210',\n  //         emailId: 'rcreddy2222@gmail.com',\n  //         Role: '',\n  //         Action: '',\n  //         Remarks: '',\n\n  //     },\n\n  // ];\n  const [datasource, setDatasource] = useState([]);\n  const [roles, setRoles] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [selectedRowData, setSelectedRowData] = useState(null);\n  const [selectedSubNavId, setSelectedSubNavId] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const {\n    navId: routeNavId\n  } = useParams(); // Get navId from route parameters\n  const [navId, setNavId] = useState(() => routeNavId ? Number(routeNavId) : undefined); // Initialize navId with routeNavId\n  const [isSelected, setIsSelected] = useState(false);\n  const [directoryNavId, setDirectoryNavId] = useState(null);\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [userDetails, setUserDetails] = useState({\n    organisation: \"\",\n    name: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    role: \"\",\n    categories: \"\"\n  });\n  useEffect(() => {\n    const fetchRoles = async () => {\n      try {\n        const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/enum/roles');\n        const data = await response.json();\n        setRoles(data); // Assuming API returns an array of role strings\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching roles:\", error);\n        setLoading(false);\n      }\n    };\n    fetchRoles();\n  }, []);\n  const handleRoleChange = e => {\n    setUserDetails({\n      ...userDetails,\n      role: e.target.value\n    });\n  };\n  const handleRoleChange1 = e => {\n    setSelectedRowData({\n      ...selectedRowData,\n      role: e.target.value\n    });\n  };\n  const handleCategoryChange = e => {\n    setUserDetails({\n      ...userDetails,\n      category: e.target.value\n    });\n  };\n  const handleCategoryChange1 = e => {\n    setSelectedRowData({\n      ...selectedRowData,\n      category: e.target.value\n    });\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/userData/getall'); // Replace with your API URL\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setDatasource(data); // Set fetched data to the datasource state\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/enum/categoryies');\n        const data = await response.json();\n        setCategories(data); // Assuming API returns an array of strings\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n        setLoading(false);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const AddRecord = async e => {\n    e.preventDefault(); // Prevent form from reloading the page\n    try {\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/userData/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          organisation: userDetails.organisation,\n          name: userDetails.name,\n          phoneNumber: userDetails.phoneNumber,\n          email: userDetails.emailId,\n          password: userDetails.password,\n          category: userDetails.categories\n        })\n      });\n      if (!response.ok) {\n        const errorMessage = await response.text();\n        throw new Error(errorMessage || 'Failed to register. Please try again.');\n      }\n      const contentType = response.headers.get('Content-Type');\n      if (contentType && contentType.includes('application/json')) {\n        const data = await response.json();\n        console.log('Registration successful:', data);\n        navigate('/layout1');\n        window.location.reload();\n        alert('Data Successfully Saved');\n        setIsPopupOpen(false); // Close the popup\n      } else {\n        const textResponse = await response.text();\n        console.log('Response:', textResponse);\n        throw new Error(textResponse);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      // setError(error.message || 'Something went wrong, please try again.');\n    }\n  };\n  const updateRecord = async e => {\n    e.preventDefault(); // Prevent default form submission\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/userData/${selectedRowData.newId}`, {\n        method: 'PUT',\n        // Change to PUT for updating\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(selectedRowData)\n      });\n      if (!response.ok) {\n        const errorMessage = await response.text();\n        throw new Error(errorMessage || 'Failed to update. Please try again.');\n      }\n      const updatedData = await response.json();\n      console.log('Update successful:', updatedData);\n      window.location.reload();\n      alert('Record updated successfully');\n      setIsPopupOpen1(false); // Close the popup\n      // Optionally navigate or refresh data here\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error.message || 'Something went wrong, please try again.'); // Display error message\n    }\n  };\n  const handlePopup = () => {\n    setIsPopupOpen(true);\n  };\n  const handlePopup1 = rowData => {\n    // alert(rowData)\n    setSelectedRowData(rowData);\n    setIsPopupOpen1(true);\n  };\n  const exportToExcel = () => {\n    // Convert data to a worksheet\n    const worksheet = XLSX.utils.json_to_sheet(datasource);\n\n    // Create a new workbook and append the worksheet\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\n\n    // Generate a binary Excel file\n    XLSX.writeFile(workbook, 'exported_data.xlsx');\n  };\n  const handleClick = (event, row) => {\n    const selectedIndex = selected.indexOf(row.candidateId);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, row.candidateId);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelected = datasource.map(row => row.candidateId);\n      setSelected(newSelected);\n    } else {\n      setSelected([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: '100px',\n      width: 'fit-content',\n      padding: '20px',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      style: {\n        backgroundColor: 'whitesmoke',\n        marginTop: '2%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      title: /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Filter\",\n        value: filter,\n        onChange: handleFilterChange,\n        className: \"filterAlignment\",\n        style: {\n          width: '30%',\n          height: '32px',\n          margin: 0\n        } // Adjust height here\n        ,\n        variant: \"outlined\" // Try using outlined or standard variant\n        ,\n        InputProps: {\n          style: {\n            padding: '4px 10px',\n            // Adjust padding for height\n            height: '38px' // Ensure this matches the height you want\n          },\n          inputProps: {\n            style: {\n              height: '38px'\n            } // Set the height of the input element itself\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n          style: {\n            display: 'none'\n          },\n          id: \"fileUpload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileUpload\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"extendedFab\",\n            component: \"span\",\n            style: {\n              backgroundColor: 'blue',\n              color: 'white',\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CloudDownload, {\n              style: {\n                marginRight: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this), \"Import\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"extendedFab\",\n          onClick: exportToExcel,\n          style: {\n            backgroundColor: 'blue',\n            color: 'white',\n            marginRight: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CloudUpload, {\n            style: {\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), \"Export\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"extendedFab\",\n          onClick: handlePopup,\n          style: {\n            backgroundColor: 'blue',\n            color: 'white'\n          },\n          children: \"+ Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      style: {\n        marginTop: '20px',\n        border: '1px solid rgba(0, 0, 0, 0.12)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          style: {\n            backgroundColor: 'lightblue'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                indeterminate: selected.length > 0 && selected.length < datasource.length,\n                checked: datasource.length > 0 && selected.length === datasource.length,\n                onChange: handleSelectAllClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), ['S.No', 'Category', 'Organization', 'Name', 'Contact Number', 'Email Id', 'Role', 'Remarks', 'Action'].map((heading, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: index !== 8 ? '1px solid rgba(0, 0, 0, 0.12)' : undefined\n              },\n              children: heading\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: datasource.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            onClick: event => handleClick(event, row),\n            role: \"checkbox\",\n            tabIndex: -1,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selected.indexOf(row.candidateId) !== -1,\n                onChange: () => handleClick(null, row)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: row.newId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: row.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: row.organisation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: row.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: row.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                borderRight: '1px solid rgba(0, 0, 0, 0.12)'\n              },\n              children: row.Remarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => console.log('View', row.candidateId),\n                children: /*#__PURE__*/_jsxDEV(RemoveRedEye, {\n                  style: {\n                    color: 'green'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handlePopup1(row),\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)]\n          }, row.newId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"serial-number\",\n            children: \"S No-[0]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button1\",\n            onClick: () => setIsPopupOpen(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-grid\",\n          onSubmit: AddRecord,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading categories...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              required: true,\n              value: userDetails.categories,\n              onChange: handleCategoryChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Organization\",\n              required: true,\n              onChange: e => setUserDetails({\n                ...userDetails,\n                organisation: e.target.value\n              }) // Handle input change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Name\",\n              required: true,\n              onChange: e => setUserDetails({\n                ...userDetails,\n                name: e.target.value\n              }) // Handle input change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\" // Changed to 'tel' for better contact number validation\n              ,\n              className: \"form-control\",\n              placeholder: \"Contact Number\",\n              required: true,\n              onChange: e => setUserDetails({\n                ...userDetails,\n                phoneNumber: e.target.value\n              }) // Handle input change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"Email Id\",\n              required: true,\n              onChange: e => setUserDetails({\n                ...userDetails,\n                emailId: e.target.value\n              }) // Handle input change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading roles...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              required: true,\n              value: userDetails.role,\n              onChange: handleRoleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this), roles.map((role, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role,\n                children: role\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Remarks\",\n              required: true,\n              onChange: e => setUserDetails({\n                ...userDetails,\n                remarks: e.target.value\n              }) // Handle input change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-cancel\",\n              onClick: () => setIsPopupOpen(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-save\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }, this), isPopupOpen1 && selectedRowData &&\n    /*#__PURE__*/\n    // Ensure itemData is defined before rendering\n    _jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"serial-number\",\n            children: [\"S No-\", selectedRowData.newId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"close-button1\",\n            onClick: () => setIsPopupOpen1(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-grid\",\n          onSubmit: updateRecord,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading categories...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              required: true,\n              value: selectedRowData.category,\n              onChange: handleCategoryChange1,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: selectedRowData.organisation,\n              placeholder: \"Organization\",\n              required: true,\n              onChange: e => setSelectedRowData({\n                ...selectedRowData,\n                organisation: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: selectedRowData.name,\n              placeholder: \"Name\",\n              required: true,\n              onChange: e => setSelectedRowData({\n                ...selectedRowData,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              value: selectedRowData.phoneNumber,\n              placeholder: \"Contact Number\",\n              required: true,\n              onChange: e => setSelectedRowData({\n                ...selectedRowData,\n                phoneNumber: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              value: selectedRowData.email,\n              placeholder: \"Email Id\",\n              required: true,\n              onChange: e => setSelectedRowData({\n                ...selectedRowData,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading roles...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              required: true,\n              value: selectedRowData.role,\n              onChange: handleRoleChange1,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this), roles.map((role, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role,\n                children: role\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: selectedRowData.remarks,\n              placeholder: \"Remarks\",\n              required: true,\n              onChange: e => setSelectedRowData({\n                ...selectedRowData,\n                remarks: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-cancel\",\n              onClick: () => setIsPopupOpen1(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-save\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25, 100],\n        component: \"div\",\n        count: datasource.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handlePageChange,\n        onRowsPerPageChange: handleRowsPerPageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 9\n  }, this);\n};\n_s(Layout1, \"Vu0trEKI7kEAAiw8UVWsFwtGNBE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Layout1;\nexport default Layout1;\nvar _c;\n$RefreshReg$(_c, \"Layout1\");","map":{"version":3,"names":["Category","React","useEffect","useState","useParams","Link","useLocation","useNavigate","XLSX","CloudUpload","CloudDownload","CheckCircleOutline","RemoveRedEye","Edit","Card","CardHeader","CardContent","CardActions","Button","Checkbox","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","TextField","IconButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Layout1","_s","datasource","setDatasource","roles","setRoles","filter","setFilter","isPopupOpen","setIsPopupOpen","isPopupOpen1","setIsPopupOpen1","selected","setSelected","selectedRowData","setSelectedRowData","selectedSubNavId","setSelectedSubNavId","page","setPage","rowsPerPage","setRowsPerPage","navId","routeNavId","setNavId","Number","undefined","isSelected","setIsSelected","directoryNavId","setDirectoryNavId","navigate","categories","setCategories","loading","setLoading","userDetails","setUserDetails","organisation","name","email","phoneNumber","role","fetchRoles","response","fetch","data","json","error","console","handleRoleChange","e","target","value","handleRoleChange1","handleCategoryChange","category","handleCategoryChange1","fetchData","ok","Error","fetchCategories","AddRecord","preventDefault","method","headers","body","JSON","stringify","emailId","password","errorMessage","text","contentType","get","includes","log","window","location","reload","alert","textResponse","updateRecord","newId","updatedData","message","handlePopup","handlePopup1","rowData","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","handleClick","event","row","selectedIndex","indexOf","candidateId","newSelected","concat","slice","length","handlePageChange","newPage","handleRowsPerPageChange","parseInt","handleFilterChange","handleSelectAllClick","checked","map","style","marginLeft","marginRight","width","padding","marginTop","children","backgroundColor","display","justifyContent","alignItems","title","placeholder","onChange","className","height","margin","variant","InputProps","inputProps","fileName","_jsxFileName","lineNumber","columnNumber","action","type","accept","id","htmlFor","component","color","onClick","border","borderRight","indeterminate","heading","index","align","hover","tabIndex","Remarks","onSubmit","required","disabled","remarks","class","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["C:/Users/Akhil.t.EIS/Videos/IIA_Final/IIA_DASHBOARDS/src/Component/Layout1.js"],"sourcesContent":["\r\nimport { Category } from '@mui/icons-material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, Link,useLocation  } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { CloudUpload, CloudDownload, CheckCircleOutline, RemoveRedEye, Edit } from '@mui/icons-material';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Button,\r\n    Checkbox,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TablePagination,\r\n    TextField,\r\n    IconButton,\r\n} from '@mui/material';\r\n\r\n\r\nconst Layout1 = () => {\r\n\r\n    // const datasource = [\r\n    //     {\r\n    //         SNo: '1',\r\n    //         Category: \"\",\r\n    //         Organization: \"\",\r\n    //         Name: 'Kumar Ravi',\r\n    //         contactNumber: '9876543210',\r\n    //         emailId: 'rcreddy2222@gmail.com',\r\n    //         Role: '',\r\n    //         Action: '',\r\n    //         Remarks: '',\r\n\r\n    //     },\r\n\r\n    // ];\r\n    const [datasource, setDatasource] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const [filter, setFilter] = useState('');\r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const [isPopupOpen1, setIsPopupOpen1] = useState(false);\r\n    const [selected, setSelected] = useState([]); \r\n    const [selectedRowData, setSelectedRowData] = useState(null);\r\n  const [selectedSubNavId, setSelectedSubNavId] = useState(null);\r\n  const [page, setPage] = useState(0); \r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const { navId: routeNavId } = useParams(); // Get navId from route parameters\r\n  const [navId, setNavId] = useState(() => (routeNavId ? Number(routeNavId) : undefined)); // Initialize navId with routeNavId\r\n  const [isSelected, setIsSelected] = useState(false); \r\n  const [directoryNavId, setDirectoryNavId] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [categories, setCategories] = useState([]); \r\n  const [loading, setLoading] = useState(true); \r\n  const [userDetails, setUserDetails] = useState({\r\n        organisation: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n        role: \"\",\r\n        categories: \"\"\r\n    \r\n  });\r\n\r\n\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const fetchRoles = async () => {\r\n        try {\r\n            const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/enum/roles');\r\n            const data = await response.json();\r\n            setRoles(data); // Assuming API returns an array of role strings\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error(\"Error fetching roles:\", error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    fetchRoles();\r\n}, []);\r\n\r\n\r\nconst handleRoleChange = (e) => {\r\n    setUserDetails({ ...userDetails, role: e.target.value });\r\n};\r\n\r\n\r\nconst handleRoleChange1 = (e) => {\r\n    setSelectedRowData({ ...selectedRowData, role: e.target.value });\r\n};\r\n\r\n\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setUserDetails({ ...userDetails, category: e.target.value });\r\n};\r\n\r\n\r\nconst handleCategoryChange1 = (e) => {\r\n    setSelectedRowData({ ...selectedRowData, category: e.target.value });\r\n};\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/userData/getall'); // Replace with your API URL\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            setDatasource(data); // Set fetched data to the datasource state\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n    fetchData();\r\n}, []); // Empty dependency array means this effect runs once on mount\r\n\r\n\r\nuseEffect(() => {\r\n    const fetchCategories = async () => {\r\n        try {\r\n            const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/enum/categoryies');\r\n            const data = await response.json();\r\n            setCategories(data); // Assuming API returns an array of strings\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error(\"Error fetching categories:\", error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    fetchCategories();\r\n}, []);\r\n\r\n\r\nconst AddRecord = async (e) => {\r\n    e.preventDefault(); // Prevent form from reloading the page\r\n    try {\r\n        const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/userData/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                organisation: userDetails.organisation,\r\n                name: userDetails.name,\r\n                phoneNumber: userDetails.phoneNumber,\r\n                email: userDetails.emailId,\r\n                password: userDetails.password,\r\n                category: userDetails.categories,\r\n            }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorMessage = await response.text();\r\n            throw new Error(errorMessage || 'Failed to register. Please try again.');\r\n        }\r\n\r\n        const contentType = response.headers.get('Content-Type');\r\n        if (contentType && contentType.includes('application/json')) {\r\n            const data = await response.json();\r\n            console.log('Registration successful:', data);\r\n            navigate('/layout1')\r\n            window.location.reload();\r\n            alert('Data Successfully Saved');\r\n            setIsPopupOpen(false);  // Close the popup\r\n           \r\n        } else {\r\n            const textResponse = await response.text();\r\n            console.log('Response:', textResponse);\r\n            throw new Error(textResponse);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        // setError(error.message || 'Something went wrong, please try again.');\r\n    }\r\n};\r\n\r\n\r\n\r\nconst updateRecord = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    try {\r\n        const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/userData/${selectedRowData.newId}`, {\r\n            method: 'PUT', // Change to PUT for updating\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n\r\n\r\n        \r\n            body: JSON.stringify(selectedRowData),\r\n        });\r\n\r\n\r\n       \r\n        if (!response.ok) {\r\n            const errorMessage = await response.text();\r\n            throw new Error(errorMessage || 'Failed to update. Please try again.');\r\n        }\r\n\r\n        const updatedData = await response.json();\r\n        console.log('Update successful:', updatedData);\r\n        window.location.reload();\r\n        alert('Record updated successfully');\r\n        setIsPopupOpen1(false);  // Close the popup\r\n        // Optionally navigate or refresh data here\r\n      \r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        alert(error.message || 'Something went wrong, please try again.'); // Display error message\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n  const handlePopup= () => {\r\n    setIsPopupOpen(true);\r\n};\r\n\r\nconst handlePopup1= (rowData) => {\r\n    // alert(rowData)\r\n    setSelectedRowData(rowData);\r\n    setIsPopupOpen1(true);\r\n};\r\n\r\n\r\n  const exportToExcel = () => {\r\n    // Convert data to a worksheet\r\n    const worksheet = XLSX.utils.json_to_sheet(datasource);\r\n    \r\n    // Create a new workbook and append the worksheet\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n\r\n    // Generate a binary Excel file\r\n    XLSX.writeFile(workbook, 'exported_data.xlsx');\r\n};\r\n\r\n\r\n\r\n  const handleClick = (event, row) => {\r\n        const selectedIndex = selected.indexOf(row.candidateId);\r\n        let newSelected = [];\r\n    \r\n        if (selectedIndex === -1) {\r\n          newSelected = newSelected.concat(selected, row.candidateId);\r\n        } else if (selectedIndex === 0) {\r\n          newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n          newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n          newSelected = newSelected.concat(\r\n            selected.slice(0, selectedIndex),\r\n            selected.slice(selectedIndex + 1),\r\n          );\r\n        }\r\n    \r\n        setSelected(newSelected);\r\n      };\r\n\r\n\r\n      const handlePageChange = (event, newPage) => {\r\n            setPage(newPage);\r\n          };\r\n        \r\n          const handleRowsPerPageChange = (event) => {\r\n            setRowsPerPage(parseInt(event.target.value, 10));\r\n            setPage(0);\r\n          };\r\n\r\n\r\n\r\n  const handleFilterChange = (event) => {\r\n        setFilter(event.target.value);\r\n      };\r\n    \r\n      const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n          const newSelected = datasource.map((row) => row.candidateId);\r\n          setSelected(newSelected);\r\n        } else {\r\n          setSelected([]);\r\n        }\r\n      };\r\n    \r\n\r\n    return (\r\n        <Card style={{ marginLeft: 'auto', marginRight: '100px', width: 'fit-content', padding: '20px',marginTop:'20px' }}>\r\n      <CardHeader\r\n    style={{\r\n        backgroundColor: 'whitesmoke',\r\n        marginTop: '2%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    }}\r\n    title={\r\n        <TextField\r\n            placeholder=\"Filter\"\r\n            value={filter}\r\n            onChange={handleFilterChange}\r\n            className=\"filterAlignment\"\r\n            style={{ width: '30%', height: '32px', margin: 0 }} // Adjust height here\r\n            variant=\"outlined\" // Try using outlined or standard variant\r\n            InputProps={{\r\n                style: {\r\n                    padding: '4px 10px', // Adjust padding for height\r\n                    height: '38px', // Ensure this matches the height you want\r\n                },\r\n                inputProps: {\r\n                    style: { height: '38px' } // Set the height of the input element itself\r\n                }\r\n            }}\r\n        />\r\n    }\r\n    action={\r\n        <>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                style={{ display: 'none' }}\r\n                id=\"fileUpload\"\r\n            />\r\n            <label htmlFor=\"fileUpload\">\r\n                <Button variant=\"extendedFab\" component=\"span\" style={{ backgroundColor: 'blue', color: 'white', marginRight: '10px' }}>\r\n                    <CloudDownload style={{ marginRight: '8px' }} />\r\n                    Import\r\n                </Button>\r\n            </label>\r\n            <Button variant=\"extendedFab\" onClick={exportToExcel} style={{ backgroundColor: 'blue', color: 'white', marginRight: '10px' }}>\r\n                <CloudUpload style={{ marginRight: '8px' }} />\r\n                Export\r\n            </Button>\r\n            <Button variant=\"extendedFab\" onClick={handlePopup} style={{ backgroundColor: 'blue', color: 'white' }}>\r\n                + Add\r\n            </Button>\r\n        </>\r\n   \r\n    \r\n\r\n            }\r\n        />\r\n        <TableContainer style={{ marginTop: '20px', border: '1px solid rgba(0, 0, 0, 0.12)' }}>\r\n    <Table>\r\n        <TableHead style={{ backgroundColor: 'lightblue' }}>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>\r\n                    <Checkbox\r\n                        indeterminate={selected.length > 0 && selected.length < datasource.length}\r\n                        checked={datasource.length > 0 && selected.length === datasource.length}\r\n                        onChange={handleSelectAllClick}\r\n                    />\r\n                </TableCell>\r\n                {['S.No', 'Category', 'Organization', 'Name', 'Contact Number', 'Email Id', 'Role', 'Remarks','Action'].map((heading, index) => (\r\n                    <TableCell \r\n                        align=\"center\" \r\n                        key={index} \r\n                        style={{ borderRight: index !== 8 ? '1px solid rgba(0, 0, 0, 0.12)' : undefined }}\r\n                    >\r\n                        {heading}\r\n                    </TableCell>\r\n                ))}\r\n                {/* <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>Actions</TableCell> */}\r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n    {datasource\r\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n        .map((row, index) => (\r\n            <TableRow\r\n                hover\r\n                onClick={(event) => handleClick(event, row)}\r\n                role=\"checkbox\"\r\n                tabIndex={-1}\r\n                key={row.newId}\r\n            >\r\n                <TableCell padding=\"checkbox\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>\r\n                    <Checkbox\r\n                        checked={selected.indexOf(row.candidateId) !== -1}\r\n                        onChange={() => handleClick(null, row)}\r\n                    />\r\n                </TableCell>\r\n                <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>{row.newId}</TableCell>\r\n                <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>{row.category}</TableCell>\r\n                <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>{row.organisation}</TableCell>\r\n                <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>{row.name}</TableCell>\r\n                <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>{row.phoneNumber}</TableCell>\r\n                <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>{row.email}</TableCell>\r\n                <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>{row.role}</TableCell>\r\n                <TableCell align=\"center\" style={{ borderRight: '1px solid rgba(0, 0, 0, 0.12)' }}>{row.Remarks}</TableCell>\r\n                <TableCell align=\"center\">\r\n                    <IconButton onClick={() => console.log('View', row.candidateId)}>\r\n                        <RemoveRedEye style={{ color: 'green' }} />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handlePopup1(row)}>\r\n                        <Edit />\r\n                    </IconButton>\r\n                </TableCell>\r\n            </TableRow>\r\n        ))}\r\n</TableBody>\r\n    </Table>\r\n</TableContainer>\r\n\r\n\r\n{isPopupOpen && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content1\">\r\n                      \r\n                    <div className=\"header-row\">\r\n                <div className=\"serial-number\">S No-[0]</div>\r\n                <button className=\"close-button1\" onClick={() => setIsPopupOpen(false)}>&times;</button>\r\n            </div>\r\n                        <form className=\"form-grid\" onSubmit={AddRecord}>\r\n                        <div className=\"form-group\">\r\n            {loading ? (\r\n                <p>Loading categories...</p>\r\n            ) : (\r\n                <select\r\n                    className=\"form-control\"\r\n                    required\r\n                    value={userDetails.categories}\r\n                    onChange={handleCategoryChange}\r\n                >\r\n                    <option value=\"\" disabled>Select a category</option>\r\n                    {categories.map((category, index) => (\r\n                        <option key={index} value={category}>\r\n                            {category}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            )}\r\n        </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Organization\"\r\n                                    required\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, organisation: e.target.value })} // Handle input change\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Name\"\r\n                                    required\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, name: e.target.value })} // Handle input change\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"tel\" // Changed to 'tel' for better contact number validation\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contact Number\"\r\n                                    required\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, phoneNumber: e.target.value })} // Handle input change\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Email Id\"\r\n                                    required\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, emailId: e.target.value })} // Handle input change\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n            {loading ? (\r\n                <p>Loading roles...</p>\r\n            ) : (\r\n                <select\r\n                    className=\"form-control\"\r\n                    required\r\n                    value={userDetails.role}\r\n                    onChange={handleRoleChange}\r\n                >\r\n                    <option value=\"\" disabled>Select a role</option>\r\n                    {roles.map((role, index) => (\r\n                        <option key={index} value={role}>\r\n                            {role}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            )}\r\n        </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Remarks\"\r\n                                    required\r\n                                    onChange={(e) => setUserDetails({ ...userDetails, remarks: e.target.value })} // Handle input change\r\n                                />\r\n                            </div>\r\n                            <div className=\"button-group\">\r\n                                <button type=\"button\" className=\"btn btn-cancel\" onClick={() => setIsPopupOpen(false)}>Cancel</button>\r\n                                <button type=\"button\" className=\"btn btn-save\">Save</button>\r\n                                <button type=\"submit\" className=\"btn btn-submit\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n)}\r\n\r\n\r\n\r\n{isPopupOpen1  &&  selectedRowData && ( // Ensure itemData is defined before rendering\r\n             \r\n             <div className=\"modal-overlay\">\r\n  <div className=\"modal-content1\">\r\n                    \r\n                      \r\n  <div className=\"header-row\">\r\n                      <div class=\"serial-number\">S No-{selectedRowData.newId}</div>\r\n                      <button class=\"close-button1\" onClick={() => setIsPopupOpen1(false)}>&times;</button>\r\n                    </div>\r\n                      <form className=\"form-grid\" onSubmit={updateRecord}>\r\n                      <div className=\"form-group\">\r\n            {loading ? (\r\n                <p>Loading categories...</p>\r\n            ) : (\r\n                <select\r\n                    className=\"form-control\"\r\n                    required\r\n                    value={selectedRowData.category}\r\n                    onChange={handleCategoryChange1}\r\n                >\r\n                    <option value=\"\" disabled>Select a category</option>\r\n                    {categories.map((category, index) => (\r\n                        <option key={index} value={category}>\r\n                            {category}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            )}\r\n        </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" value={selectedRowData.organisation} placeholder=\"Organization\" required onChange={(e) => setSelectedRowData({ ...selectedRowData, organisation: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" value={selectedRowData.name} placeholder=\"Name\" required onChange={(e) => setSelectedRowData({ ...selectedRowData, name: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"number\" className=\"form-control\" value={selectedRowData.phoneNumber} placeholder=\"Contact Number\" required onChange={(e) => setSelectedRowData({ ...selectedRowData, phoneNumber: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"email\" className=\"form-control\" value={selectedRowData.email} placeholder=\"Email Id\" required onChange={(e) => setSelectedRowData({ ...selectedRowData, email: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n            {loading ? (\r\n                <p>Loading roles...</p>\r\n            ) : (\r\n                <select\r\n                    className=\"form-control\"\r\n                    required\r\n                    value={selectedRowData.role}\r\n                    onChange={handleRoleChange1}\r\n                >\r\n                    <option value=\"\" disabled>Select a role</option>\r\n                    {roles.map((role, index) => (\r\n                        <option key={index} value={role}>\r\n                            {role}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            )}\r\n        </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" value={selectedRowData.remarks} placeholder=\"Remarks\" required onChange={(e) => setSelectedRowData({ ...selectedRowData, remarks: e.target.value })} />\r\n                            </div>\r\n                            <div className=\"button-group\">\r\n                                <button type=\"button\" className=\"btn btn-cancel\" onClick={() => setIsPopupOpen1(false)}>Cancel</button>\r\n                                <button type=\"submit\" className=\"btn btn-save\">Save</button>\r\n                            </div>\r\n                        </form>\r\n                  </div>\r\n              </div>\r\n              \r\n            )}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <CardActions>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25, 100]}\r\n                component=\"div\"\r\n                count={datasource.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handlePageChange}\r\n                onRowsPerPageChange={handleRowsPerPageChange}\r\n            />\r\n        </CardActions>\r\n    </Card>  \r\n\r\n\r\n\r\n\r\n    )\r\n\r\n    \r\n}\r\nexport default Layout1;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}