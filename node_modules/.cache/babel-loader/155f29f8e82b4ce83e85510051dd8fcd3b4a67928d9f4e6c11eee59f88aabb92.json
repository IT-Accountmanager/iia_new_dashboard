{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhil.t.EIS\\\\Videos\\\\IIA_Final\\\\IIA_DASHBOARDS\\\\src\\\\Component\\\\ControllersTableData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = ({\n  users\n}) => {\n  _s();\n  const [data, setData] = useState([]); // Main navigation data\n  const [subNavData, setSubNavData] = useState({}); // Store sub-navigation data grouped by navId\n  const [loading, setLoading] = useState(true); // Loading state\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [posterImage, setPosterImage] = useState('');\n  const [imagePreview, setImagePreview] = useState(null);\n  const [image, setImage] = useState('');\n  const [name, setName] = useState('');\n  const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\n  const [apiData, setApiData] = useState([]);\n  const [navId, setNavId] = useState(1); // Initialize navId with a default value another data also \n  const navigate = useNavigate();\n  const [checkedItems, setCheckedItems] = useState({}); // State to track checked items\n\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  // Function to handle form submission for editing\n  // Function to handle form submission for editing data not \n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupNavId, setPopupNavId] = useState(null);\n  const [subNavId, setSubNavId] = useState(null);\n  const [selectedSubNavId, setSelectedSubNavId] = useState(null);\n  const [subName, setSubName] = useState('');\n  const [subPosterImage, setSubPosterImage] = useState('');\n  const [subPopupVisible, setSubPopupVisible] = useState(false);\n  const [itemData, setItemData] = useState(null); // New state for item data\n\n  const handleSubmitsssss = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${selectedSubNavId}`, {\n        name: name // Body with the new name\n      });\n      console.log('Edit response:', response.data); // Log response from the API\n      setIsPopupOpen(false); // Close the popup after successful edit\n      // Optionally, you can fetch the updated data again or update state directly\n    } catch (error) {\n      console.error('Error updating sub navigation data:', error);\n    }\n  };\n  const handleNameClicks = subNavId => {\n    console.log(\"Clicked SubNav ID:\", subNavId);\n    setSelectedSubNavId(subNavId);\n    setIsPopupOpen(true);\n  };\n  const fetchSubNavData = async subNavId => {\n    try {\n      const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/getbyidforview/${subNavId}`);\n      console.log(response.data); // Check the structure of the response\n      if (response.data) {\n        setItemData(response.data);\n        setName(response.data.name || ''); // Use empty string if name is undefined\n      }\n    } catch (error) {\n      console.error('Error fetching sub navigation data:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedSubNavId && isPopupOpen) {\n      fetchSubNavData(selectedSubNavId);\n    }\n  }, [selectedSubNavId, isPopupOpen]);\n  const handleSubNavSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission procedures of the ParentComponent.js,FeesCollections.js,EventManagement.js,CoursesTableData.js,AllWebinars.js code int the  \n    setLoading(true);\n    const editedData = {\n      subNavId,\n      name,\n      image: posterImage.split(',')[1] // Send image data without prefix\n    };\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${subNavId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editedData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Handle success (close popup, refresh data, etc.)\n      closeSubNavPopup(); // Close the subNav popup after submission\n      console.log('SubNav data updated successfully!');\n    } catch (error) {\n      console.error(\"Error updating subNav data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const closeSubNavPopup = () => {\n    setSubNavId(null);\n    setName('');\n    setPosterImage('');\n  };\n  const handleNameClick = navId => {\n    setPopupNavId(navId);\n    fetchUserData(navId); // Fetch data for this navId when the name is clicked\n  };\n  const closePopup = () => {\n    setPopupNavId(null); // Close the popup\n    setName(''); // Clear form data\n    setPosterImage(null); // Clear image preview\n  };\n  const fetchUserData = async navId => {\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${navId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const fetchedData = await response.json(); // Parse the JSON response\n\n      // Set the state with the fetched data\n      setName(fetchedData.name);\n\n      // Check if the image is not empty and prepend the base64 prefix\n      if (fetchedData.image) {\n        setPosterImage(`data:image/png;base64,${fetchedData.image}`); // Update according to the image format\n      } else {\n        setPosterImage(''); // Clear image state if no image\n      }\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n  const handleSubmitssss = async event => {\n    event.preventDefault(); // Prevent default form submission\n    setLoading(true);\n    const editedData = {\n      navId: popupNavId,\n      // Send the ID along with the data\n      name,\n      image: posterImage.split(',')[1] // Remove the prefix before sending\n    };\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${popupNavId}`, {\n        method: 'PUT',\n        // Use PUT for editing\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editedData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Optionally, handle success (e.g., close popup, refresh data, show message, etc.)\n      console.log('Data updated successfully!');\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //   const handleImageChangess = (e) => {\n  //     const file = e.target.files[0];\n  //     if (file) {\n  //       const reader = new FileReader();\n  //       reader.onloadend = () => {\n  //         setPosterImage(reader.result); // Preview the image\n  //       };\n  //       reader.readAsDataURL(file);\n  //     }\n  //   };\n\n  const handleSubmitsss = e => {\n    e.preventDefault();\n    // Submit form logic here (API call or update data)\n    console.log(\"Submitted data:\", {\n      navId: popupNavId,\n      name,\n      posterImage\n    });\n  };\n  // const handleUserNameClick = async (user) => {\n  //     try {\n  //         const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\n  //         setUserData(response.data); // Set the user data\n  //         setNavId(user.navId);\n  //         setIsEditModalOpen(true); // Open the edit modal\n  //     } catch (error) {\n  //         console.error(\"Error fetching user data:\", error);\n  //     }\n  // };\n\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Prepare the image as base64 (assuming image is handled as base64)\n      const cleanImage = editedImage ? editedImage.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '';\n      const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${selectedUser.navId}`, {\n        name: editedName,\n        // Send updated name\n        image: cleanImage // Send updated image (as base64)\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('User details updated successfully');\n        setIsEditModalOpen(false);\n        // Optionally, update the user details in the table without reloading\n        // e.g., by updating the state that stores users\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error updating user details:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Failed to update user details');\n    }\n  };\n  const handleEditButtonClick = async user => {\n    console.log('Editing user:', user); // Confirm this is being called\n    try {\n      const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\n      console.log('User data fetched:', response.data); // Log the response data\n      setUserData(response.data); // Assuming the response contains the user data\n      setNavId(user.navId);\n      setIsEditModalOpen(true); // Open the edit modal\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n    setUserData(null); // Reset userData on close\n  };\n  const handleSubmits = async event => {\n    event.preventDefault();\n    const cleanImage = image.replace(/^data:image\\/[a-zA-Z]+;base64,/, '');\n    const formData = {\n      name: name,\n      image: cleanImage\n    };\n    try {\n      const response = await axios.post('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/add', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Form submitted successfully:', response.data);\n      closeSubNavPopup();\n      alert('Data added successfully!');\n\n      // navigate('/login');\n    } catch (error) {\n      var _error$response2;\n      console.error('Error submitting form:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    }\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImage(reader.result);\n        setPosterImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  // Fetch initial data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/all');\n        console.log('API Response:', response.data); // Log response data\n        setData(response.data); // Set fetched data\n\n        // Fetch sub-navigation data for each navId\n        const initialSubNavData = {};\n        await Promise.all(response.data.map(async item => {\n          const subNavResponse = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${item.navId}`);\n          const subNavData = await subNavResponse.json();\n          initialSubNavData[item.navId] = subNavData; // Group data by navId\n        }));\n        setSubNavData(initialSubNavData); // Set grouped sub-navigation data\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // End loading state\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Form submission handler\n  const handleSubmitss = async e => {\n    e.preventDefault();\n\n    // Prepare the data to be sent to the API\n    const requestBody = {\n      navId,\n      // Use the navId from the selected course\n      name\n    };\n\n    // POST API call\n    try {\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit the form');\n      }\n      const data = await response.json();\n      console.log('Form submitted successfully:', data);\n\n      // Handle the success, close modal, or reset form\n      setIsSecondModalOpen(false);\n      setName('');\n    } catch (error) {\n      console.error('Error submitting the form:', error);\n    }\n  };\n  // Handle checkbox change for individual items\n  const handleCheckboxChange = subNavId => {\n    setCheckedItems(prev => ({\n      ...prev,\n      [subNavId]: !prev[subNavId] // Toggle the checked state\n    }));\n  };\n\n  // Handle header checkbox change to check/uncheck all corresponding subNav items\n  const handleHeaderCheckboxChange = navId => {\n    const subNavItems = subNavData[navId] || [];\n    const allChecked = subNavItems.every(item => !!checkedItems[item.subNavId]);\n\n    // Toggle checked state for all subNav items for the selected navId\n    const newCheckedItems = {\n      ...checkedItems\n    };\n    subNavItems.forEach(item => {\n      newCheckedItems[item.subNavId] = !allChecked; // Set to the opposite of current state\n    });\n    setCheckedItems(newCheckedItems);\n  };\n\n  // Function to delete a nav item by navId\n  const handleDelete = async navId => {\n    try {\n      // Replace with your API endpoint\n      await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/deletedata/${navId}`);\n\n      // Update local state to remove the deleted item\n      setData(prevData => prevData.filter(user => user.navId !== navId));\n      setSubNavData(prevSubNavData => {\n        const {\n          [navId]: _,\n          ...rest\n        } = prevSubNavData; // Remove subNavData for deleted navId\n        return rest;\n      });\n    } catch (error) {\n      console.error('Error deleting the item:', error);\n      // Handle error appropriately (e.g., show a notification)\n    }\n  };\n\n  // Function to delete a sub-navigation item by subNavId\n  const handleDeleteSubNav = async subNavId => {\n    try {\n      // Replace with your API endpoint\n      await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/deletesubsidenavbar/${subNavId}`);\n\n      // Update local state to remove the deleted item\n      setSubNavData(prevSubNavData => {\n        const updatedSubNavData = {\n          ...prevSubNavData\n        };\n        Object.keys(updatedSubNavData).forEach(navId => {\n          updatedSubNavData[navId] = updatedSubNavData[navId].filter(item => item.subNavId !== subNavId);\n        });\n        return updatedSubNavData;\n      });\n\n      // Optionally, you may want to remove the checked item from checkedItems\n      setCheckedItems(prev => {\n        const {\n          [subNavId]: _,\n          ...rest\n        } = prev; // Remove the checked state for deleted subNavId\n        return rest;\n      });\n    } catch (error) {\n      console.error('Error deleting the sub-navigation item:', error);\n      // Handle error appropriately (e.g., show a notification)\n    }\n  };\n\n  // State to track selected values of dropdowns\n  const [client, setClient] = useState('');\n  const [vendor, setVendor] = useState('');\n  const [employee, setEmployee] = useState('');\n  const [user, setUser] = useState('');\n\n  // Mock data for dropdowns\n  const clientOptions = [{\n    value: '_160_HR',\n    label: 'Client'\n  }, {\n    value: '_320_HR',\n    label: 'Vendor'\n  }];\n  const vendorOptions = [{\n    value: '_160_HR',\n    label: 'Employee'\n  }, {\n    value: '_320_HR',\n    label: 'Admin'\n  }];\n  const employeeOptions = [{\n    value: '_160_HR',\n    label: 'User'\n  }, {\n    value: '_320_HR',\n    label: 'Student'\n  }];\n  const userOptions = [{\n    value: '_160_HR',\n    label: 'Akhil'\n  }, {\n    value: '_320_HR',\n    label: 'Naresh'\n  }];\n\n  // Filter logic for dependent dropdowns (Example)\n  const filteredVendorOptions = vendorOptions.filter(option => client === '_160_HR' ? option.value !== '_320_HR' : option);\n  const filteredEmployeeOptions = employeeOptions.filter(option => vendor === '_160_HR' ? option.value !== '_320_HR' : option);\n  const filteredUserOptions = userOptions.filter(option => employee === '_160_HR' ? option.value !== '_320_HR' : option);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '200px',\n      marginTop: '180px'\n    },\n    children: [\"   \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: '-40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-1 col-md-6 col-sm-12\",\n        style: {\n          marginTop: '-4px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          className: \"btn btn-primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-2 col-md-6 col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: client,\n            onChange: e => setClient(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 29\n            }, this), clientOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-2 col-md-6 col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: vendor,\n            onChange: e => setVendor(e.target.value),\n            disabled: !client // Disable if client is not selected\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }, this), filteredVendorOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-2 col-md-6 col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: employee,\n            onChange: e => setEmployee(e.target.value),\n            disabled: !vendor // Disable if vendor is not selected\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 29\n            }, this), filteredEmployeeOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-2 col-md-6 col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: user,\n            onChange: e => setUser(e.target.value),\n            disabled: !employee // Disable if employee is not selected\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 29\n            }, this), filteredUserOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        borderCollapse: 'collapse',\n        marginLeft: '27px',\n        marginTop: '70px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: data.map(user => {\n            var _subNavData$user$navI;\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #000',\n                padding: '8px',\n                backgroundColor: '#f2f2f2'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: (_subNavData$user$navI = subNavData[user.navId]) === null || _subNavData$user$navI === void 0 ? void 0 : _subNavData$user$navI.every(item => !!checkedItems[item.subNavId]),\n                onChange: () => handleHeaderCheckboxChange(user.navId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => handleNameClick(user.navId),\n                children: user.name\n              }, user.navId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setIsSecondModalOpen(true);\n                  setNavId(user.navId);\n                },\n                className: \"btn btn-primary\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(user.navId),\n                className: \"btn btn-danger\",\n                style: {\n                  marginLeft: '8px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"la la-trash-o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 33\n              }, this)]\n            }, user.navId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: data.map(user => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '8px'\n            },\n            children: subNavData[user.navId] && subNavData[user.navId].length > 0 ? subNavData[user.navId].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: !!checkedItems[item.subNavId],\n                onChange: () => handleCheckboxChange(item.subNavId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => handleNameClicks(item.subNavId),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteSubNav(item.subNavId),\n                className: \"btn btn-danger\",\n                style: {\n                  marginLeft: '8px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"la la-trash-o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 45\n              }, this)]\n            }, item.subNavId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"No data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 37\n            }, this)\n          }, user.navId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 13\n    }, this), isPopupOpen && itemData &&\n    /*#__PURE__*/\n    // Ensure itemData is defined before rendering\n    _jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsPopupOpen(false) // Close the popup when clicked\n          ,\n          style: {\n            position: 'absolute',\n            top: '10px',\n            right: '10px',\n            background: 'none',\n            border: 'none',\n            fontSize: '20px',\n            cursor: 'pointer',\n            marginTop: '-10px'\n          },\n          children: \"\\xD7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitsssss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name // Controlled input using name state\n              ,\n              onChange: e => setName(e.target.value) // Update name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 17\n    }, this), isEditModalOpen && userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: closeEditModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userData.name || '' // Default to empty string if name is undefined\n              ,\n              onChange: e => setUserData({\n                ...userData,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userData.imageUrl || '' // Default to empty string if imageUrl is undefined\n              ,\n              onChange: e => setUserData({\n                ...userData,\n                imageUrl: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 33\n            }, this), userData.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: userData.imageUrl,\n              alt: \"User\",\n              style: {\n                width: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeEditModal,\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 17\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmits,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-12 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-choosen\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-blocks\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    id: \"imageInput\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange,\n                    style: {\n                      display: 'none'\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 733,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"imageInput\",\n                    className: \"image-uploads\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      \"data-feather\": \"plus-circle\",\n                      className: \"plus-down-add me-0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 742,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Add Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 743,\n                      columnNumber: 49\n                    }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: posterImage,\n                      alt: \"Preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 745,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Titl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value) // Update the name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 17\n    }, this), isSecondModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsSecondModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 17\n    }, this), popupNavId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closePopup,\n          className: \"close-button\",\n          style: {\n            float: 'right',\n            cursor: 'pointer'\n          },\n          children: \"\\xD7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitssss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-12 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-choosen\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-blocks\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-upload\",\n                  style: {\n                    marginRight: '100px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    id: \"imageInput\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange,\n                    style: {\n                      display: 'none'\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 811,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"imageInput\",\n                    className: \"image-uploads\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      \"data-feather\": \"plus-circle\",\n                      className: \"plus-down-add me-0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 820,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Add Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 821,\n                      columnNumber: 49\n                    }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: posterImage,\n                      alt: \"Preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 823,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 819,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value) // Update the name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 17\n    }, this), subNavId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeSubNavPopup,\n          className: \"close-button\",\n          style: {\n            float: 'right',\n            cursor: 'pointer'\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit SubNavId: \", subNavId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubNavSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"imageInput\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              style: {\n                display: 'none'\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"imageInput\",\n              className: \"image-uploads\",\n              style: {\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                \"data-feather\": \"plus-circle\",\n                className: \"plus-down-add me-0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Add Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 37\n              }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: posterImage,\n                alt: \"Preview\",\n                style: {\n                  maxWidth: '100px',\n                  maxHeight: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: loading,\n              children: loading ? 'Submitting...' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                .popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.popup-content {\n  text-align: center;\n}\n\nbutton {\n  margin-top: 10px;\n}\n\n  /* Modal Styles */\n  .modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    z-index: 1000;\n    width: 400px; /* Adjust as needed */\n  }\n\n  .modal-content {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .form-group {\n    margin-bottom: 15px;\n  }\n\n  .form-control {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ced4da;\n    border-radius: 4px;\n  }\n\n  .form-label {\n    margin-bottom: 5px;\n    font-weight: bold;\n  }\n\n  .btn {\n    padding: 8px 12px;\n    border-radius: 4px;\n    margin-right: 10px;\n    cursor: pointer;\n  }\n\n  .btn-primary {\n    background-color: #007bff;\n    color: white;\n    border: none;\n  }\n\n  .btn-primary:hover {\n    background-color: #0056b3;\n  }\n\n  .btn-secondary {\n    background-color: #6c757d;\n    color: white;\n    border: none;\n  }\n\n  .btn-secondary:hover {\n    background-color: #5a6268;\n  }\n\n  /* Optional: Backdrop for modal */\n  .modal-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 999;\n  }\n\n  /* Table Header Styles */\n  th {\n    text-align: left;\n    border: 1px solid #000;\n    padding: 8px;\n    background-color: #f2f2f2;\n  }\n\n  th span {\n    cursor: pointer;\n \n  }\n\n  th span:hover {\n    color: darkblue;\n  }\n\n  th .btn {\n    margin-left: 8px;\n  }\n`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 501,\n    columnNumber: 9\n  }, this);\n};\n_s(YourComponent, \"y2HPWRXlllih5t3+P17Mb8Pd84Q=\", false, function () {\n  return [useNavigate];\n});\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useNavigate","jsxDEV","_jsxDEV","YourComponent","users","_s","data","setData","subNavData","setSubNavData","loading","setLoading","isModalOpen","setIsModalOpen","posterImage","setPosterImage","imagePreview","setImagePreview","image","setImage","name","setName","isSecondModalOpen","setIsSecondModalOpen","apiData","setApiData","navId","setNavId","navigate","checkedItems","setCheckedItems","isEditModalOpen","setIsEditModalOpen","selectedUser","setSelectedUser","userData","setUserData","editedName","setEditedName","editedImage","setEditedImage","isPopupOpen","setIsPopupOpen","popupNavId","setPopupNavId","subNavId","setSubNavId","selectedSubNavId","setSelectedSubNavId","subName","setSubName","subPosterImage","setSubPosterImage","subPopupVisible","setSubPopupVisible","itemData","setItemData","handleSubmitsssss","e","preventDefault","response","put","console","log","error","handleNameClicks","fetchSubNavData","get","handleSubNavSubmit","event","editedData","split","fetch","method","headers","body","JSON","stringify","ok","Error","status","closeSubNavPopup","handleNameClick","fetchUserData","closePopup","fetchedData","json","handleSubmitssss","handleSubmitsss","handleEditSubmit","cleanImage","replace","alert","_error$response","message","handleEditButtonClick","user","closeEditModal","handleSubmits","formData","post","_error$response2","handleImageChange","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","fetchData","initialSubNavData","Promise","all","map","item","subNavResponse","handleSubmitss","requestBody","handleCheckboxChange","prev","handleHeaderCheckboxChange","subNavItems","allChecked","every","newCheckedItems","forEach","handleDelete","delete","prevData","filter","prevSubNavData","_","rest","handleDeleteSubNav","updatedSubNavData","Object","keys","client","setClient","vendor","setVendor","employee","setEmployee","setUser","clientOptions","value","label","vendorOptions","employeeOptions","userOptions","filteredVendorOptions","option","filteredEmployeeOptions","filteredUserOptions","style","marginLeft","marginTop","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","borderCollapse","_subNavData$user$navI","border","padding","backgroundColor","type","checked","cursor","length","display","alignItems","position","top","right","background","fontSize","onSubmit","required","imageUrl","src","alt","width","id","accept","htmlFor","float","marginRight","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["C:/Users/Akhil.t.EIS/Videos/IIA_Final/IIA_DASHBOARDS/src/Component/ControllersTableData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nconst YourComponent = ({ users }) => {\r\n    const [data, setData] = useState([]); // Main navigation data\r\n    const [subNavData, setSubNavData] = useState({}); // Store sub-navigation data grouped by navId\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [posterImage, setPosterImage] = useState('');\r\n    const [imagePreview, setImagePreview] = useState(null);\r\n    const [image, setImage] = useState('');\r\n    const [name, setName] = useState('');\r\n\r\n    const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\r\n    const [apiData, setApiData] = useState([]);\r\n    const [navId, setNavId] = useState(1); // Initialize navId with a default value another data also \r\n    const navigate = useNavigate();\r\n    const [checkedItems, setCheckedItems] = useState({}); // State to track checked items\r\n\r\n\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [userData, setUserData] = useState(null);\r\n    const [editedName, setEditedName] = useState('');\r\n    const [editedImage, setEditedImage] = useState('');\r\n    // Function to handle form submission for editing\r\n    // Function to handle form submission for editing data not \r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const [popupNavId, setPopupNavId] = useState(null);\r\n    const [subNavId, setSubNavId] = useState(null);\r\n    const [selectedSubNavId, setSelectedSubNavId] = useState(null);\r\n    const [subName, setSubName] = useState('');\r\n    const [subPosterImage, setSubPosterImage] = useState('');\r\n    const [subPopupVisible, setSubPopupVisible] = useState(false);\r\n    const [itemData, setItemData] = useState(null); // New state for item data\r\n\r\n\r\n    const handleSubmitsssss = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${selectedSubNavId}`, {\r\n                name: name // Body with the new name\r\n            });\r\n            console.log('Edit response:', response.data); // Log response from the API\r\n            setIsPopupOpen(false); // Close the popup after successful edit\r\n            // Optionally, you can fetch the updated data again or update state directly\r\n        } catch (error) {\r\n            console.error('Error updating sub navigation data:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n \r\n    const handleNameClicks = (subNavId) => {\r\n        console.log(\"Clicked SubNav ID:\", subNavId);\r\n        setSelectedSubNavId(subNavId);\r\n        setIsPopupOpen(true);\r\n    };\r\n\r\n    const fetchSubNavData = async (subNavId) => {\r\n        try {\r\n            const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/getbyidforview/${subNavId}`);\r\n            console.log(response.data); // Check the structure of the response\r\n            if (response.data) {\r\n                setItemData(response.data);\r\n                setName(response.data.name || ''); // Use empty string if name is undefined\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching sub navigation data:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        if (selectedSubNavId && isPopupOpen) {\r\n            fetchSubNavData(selectedSubNavId);\r\n        }\r\n    }, [selectedSubNavId, isPopupOpen]);\r\n\r\n    const handleSubNavSubmit = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission procedures of the ParentComponent.js,FeesCollections.js,EventManagement.js,CoursesTableData.js,AllWebinars.js code int the  \r\n        setLoading(true);\r\n\r\n        const editedData = {\r\n            subNavId,\r\n            name,\r\n            image: posterImage.split(',')[1] // Send image data without prefix\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${subNavId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editedData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            // Handle success (close popup, refresh data, etc.)\r\n            closeSubNavPopup(); // Close the subNav popup after submission\r\n            console.log('SubNav data updated successfully!');\r\n          \r\n        } catch (error) {\r\n            console.error(\"Error updating subNav data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const closeSubNavPopup = () => {\r\n        setSubNavId(null);\r\n        setName('');\r\n        setPosterImage('');\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleNameClick = (navId) => {\r\n        setPopupNavId(navId);\r\n        fetchUserData(navId); // Fetch data for this navId when the name is clicked\r\n    };\r\n\r\n    const closePopup = () => {\r\n        setPopupNavId(null); // Close the popup\r\n        setName(''); // Clear form data\r\n        setPosterImage(null); // Clear image preview\r\n    };\r\n\r\n    const fetchUserData = async (navId) => {\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${navId}`);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const fetchedData = await response.json(); // Parse the JSON response\r\n\r\n            // Set the state with the fetched data\r\n            setName(fetchedData.name);\r\n\r\n            // Check if the image is not empty and prepend the base64 prefix\r\n            if (fetchedData.image) {\r\n                setPosterImage(`data:image/png;base64,${fetchedData.image}`); // Update according to the image format\r\n            } else {\r\n                setPosterImage(''); // Clear image state if no image\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching user data:\", error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmitssss = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission\r\n        setLoading(true);\r\n\r\n        const editedData = {\r\n            navId: popupNavId, // Send the ID along with the data\r\n            name,\r\n            image: posterImage.split(',')[1] // Remove the prefix before sending\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${popupNavId}`, {\r\n                method: 'PUT', // Use PUT for editing\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editedData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            // Optionally, handle success (e.g., close popup, refresh data, show message, etc.)\r\n            console.log('Data updated successfully!');\r\n        } catch (error) {\r\n            console.error(\"Error updating data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    //   const handleImageChangess = (e) => {\r\n    //     const file = e.target.files[0];\r\n    //     if (file) {\r\n    //       const reader = new FileReader();\r\n    //       reader.onloadend = () => {\r\n    //         setPosterImage(reader.result); // Preview the image\r\n    //       };\r\n    //       reader.readAsDataURL(file);\r\n    //     }\r\n    //   };\r\n\r\n    const handleSubmitsss = (e) => {\r\n        e.preventDefault();\r\n        // Submit form logic here (API call or update data)\r\n        console.log(\"Submitted data:\", { navId: popupNavId, name, posterImage });\r\n    };\r\n    // const handleUserNameClick = async (user) => {\r\n    //     try {\r\n    //         const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\r\n    //         setUserData(response.data); // Set the user data\r\n    //         setNavId(user.navId);\r\n    //         setIsEditModalOpen(true); // Open the edit modal\r\n    //     } catch (error) {\r\n    //         console.error(\"Error fetching user data:\", error);\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Prepare the image as base64 (assuming image is handled as base64)\r\n            const cleanImage = editedImage ? editedImage.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '';\r\n\r\n            const response = await axios.put(\r\n                `http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${selectedUser.navId}`,\r\n                {\r\n                    name: editedName, // Send updated name\r\n                    image: cleanImage, // Send updated image (as base64)\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                alert('User details updated successfully');\r\n                setIsEditModalOpen(false);\r\n                // Optionally, update the user details in the table without reloading\r\n                // e.g., by updating the state that stores users\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating user details:', error.response?.data || error.message);\r\n            alert('Failed to update user details');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleEditButtonClick = async (user) => {\r\n        console.log('Editing user:', user); // Confirm this is being called\r\n        try {\r\n            const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\r\n            console.log('User data fetched:', response.data); // Log the response data\r\n            setUserData(response.data); // Assuming the response contains the user data\r\n            setNavId(user.navId);\r\n            setIsEditModalOpen(true); // Open the edit modal\r\n        } catch (error) {\r\n            console.error(\"Error fetching user data:\", error);\r\n        }\r\n    };\r\n\r\n    const closeEditModal = () => {\r\n        setIsEditModalOpen(false);\r\n        setUserData(null); // Reset userData on close\r\n    };\r\n\r\n\r\n    const handleSubmits = async (event) => {\r\n        event.preventDefault();\r\n        const cleanImage = image.replace(/^data:image\\/[a-zA-Z]+;base64,/, '');\r\n        const formData = {\r\n            name: name,\r\n            image: cleanImage,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                'http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/add',\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n            console.log('Form submitted successfully:', response.data);\r\n            closeSubNavPopup();\r\n            alert('Data added successfully!');\r\n          \r\n            // navigate('/login');\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error.response?.data || error.message);\r\n        }\r\n    };\r\n\r\n    const handleImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setImage(reader.result);\r\n                setPosterImage(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n    // Fetch initial data\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/all');\r\n                console.log('API Response:', response.data); // Log response data\r\n                setData(response.data); // Set fetched data\r\n\r\n                // Fetch sub-navigation data for each navId\r\n                const initialSubNavData = {};\r\n                await Promise.all(response.data.map(async (item) => {\r\n                    const subNavResponse = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${item.navId}`);\r\n                    const subNavData = await subNavResponse.json();\r\n                    initialSubNavData[item.navId] = subNavData; // Group data by navId\r\n                }));\r\n\r\n                setSubNavData(initialSubNavData); // Set grouped sub-navigation data\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setLoading(false); // End loading state\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Form submission handler\r\n    const handleSubmitss = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Prepare the data to be sent to the API\r\n        const requestBody = {\r\n            navId, // Use the navId from the selected course\r\n            name,\r\n        };\r\n\r\n        // POST API call\r\n        try {\r\n            const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to submit the form');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('Form submitted successfully:', data);\r\n\r\n            // Handle the success, close modal, or reset form\r\n            setIsSecondModalOpen(false);\r\n            setName('');\r\n        } catch (error) {\r\n            console.error('Error submitting the form:', error);\r\n        }\r\n    };\r\n    // Handle checkbox change for individual items\r\n    const handleCheckboxChange = (subNavId) => {\r\n        setCheckedItems((prev) => ({\r\n            ...prev,\r\n            [subNavId]: !prev[subNavId], // Toggle the checked state\r\n        }));\r\n    };\r\n\r\n    // Handle header checkbox change to check/uncheck all corresponding subNav items\r\n    const handleHeaderCheckboxChange = (navId) => {\r\n        const subNavItems = subNavData[navId] || [];\r\n        const allChecked = subNavItems.every(item => !!checkedItems[item.subNavId]);\r\n\r\n        // Toggle checked state for all subNav items for the selected navId\r\n        const newCheckedItems = { ...checkedItems };\r\n        subNavItems.forEach(item => {\r\n            newCheckedItems[item.subNavId] = !allChecked; // Set to the opposite of current state\r\n        });\r\n\r\n        setCheckedItems(newCheckedItems);\r\n    };\r\n\r\n    // Function to delete a nav item by navId\r\n    const handleDelete = async (navId) => {\r\n        try {\r\n            // Replace with your API endpoint\r\n            await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/deletedata/${navId}`);\r\n\r\n            // Update local state to remove the deleted item\r\n            setData(prevData => prevData.filter(user => user.navId !== navId));\r\n            setSubNavData(prevSubNavData => {\r\n                const { [navId]: _, ...rest } = prevSubNavData; // Remove subNavData for deleted navId\r\n                return rest;\r\n            });\r\n        } catch (error) {\r\n            console.error('Error deleting the item:', error);\r\n            // Handle error appropriately (e.g., show a notification)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // Function to delete a sub-navigation item by subNavId\r\n    const handleDeleteSubNav = async (subNavId) => {\r\n        try {\r\n            // Replace with your API endpoint\r\n            await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/deletesubsidenavbar/${subNavId}`);\r\n\r\n            // Update local state to remove the deleted item\r\n            setSubNavData(prevSubNavData => {\r\n                const updatedSubNavData = { ...prevSubNavData };\r\n                Object.keys(updatedSubNavData).forEach(navId => {\r\n                    updatedSubNavData[navId] = updatedSubNavData[navId].filter(item => item.subNavId !== subNavId);\r\n                });\r\n                return updatedSubNavData;\r\n            });\r\n\r\n            // Optionally, you may want to remove the checked item from checkedItems\r\n            setCheckedItems(prev => {\r\n                const { [subNavId]: _, ...rest } = prev; // Remove the checked state for deleted subNavId\r\n                return rest;\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error deleting the sub-navigation item:', error);\r\n            // Handle error appropriately (e.g., show a notification)\r\n        }\r\n    };\r\n\r\n\r\n    // State to track selected values of dropdowns\r\n    const [client, setClient] = useState('');\r\n    const [vendor, setVendor] = useState('');\r\n    const [employee, setEmployee] = useState('');\r\n    const [user, setUser] = useState('');\r\n\r\n    // Mock data for dropdowns\r\n    const clientOptions = [\r\n        { value: '_160_HR', label: 'Client' },\r\n        { value: '_320_HR', label: 'Vendor' },\r\n    ];\r\n\r\n    const vendorOptions = [\r\n        { value: '_160_HR', label: 'Employee' },\r\n        { value: '_320_HR', label: 'Admin' },\r\n    ];\r\n\r\n    const employeeOptions = [\r\n        { value: '_160_HR', label: 'User' },\r\n        { value: '_320_HR', label: 'Student' },\r\n    ];\r\n\r\n    const userOptions = [\r\n        { value: '_160_HR', label: 'Akhil' },\r\n        { value: '_320_HR', label: 'Naresh' },\r\n    ];\r\n\r\n    // Filter logic for dependent dropdowns (Example)\r\n    const filteredVendorOptions = vendorOptions.filter((option) =>\r\n        client === '_160_HR' ? option.value !== '_320_HR' : option\r\n    );\r\n\r\n    const filteredEmployeeOptions = employeeOptions.filter((option) =>\r\n        vendor === '_160_HR' ? option.value !== '_320_HR' : option\r\n    );\r\n\r\n    const filteredUserOptions = userOptions.filter((option) =>\r\n        employee === '_160_HR' ? option.value !== '_320_HR' : option\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div style={{ marginLeft: '200px', marginTop: '180px' }}>   {/* Modal for adding an image fething data not easy task to calculating the things as*/}\r\n            {/* <h2 className=\"d-flex \" style={{ marginLeft: '320px' }}>CONTROLLERS</h2> */}\r\n            {/* <div className=\"d-flex \" style={{ marginRight: '620px', marginTop: '-60px', marginBottom: '36px' }}>\r\n                <button onClick={() => setIsModalOpen(true)} className=\"btn btn-primary\">\r\n                    Add\r\n                </button>\r\n            </div> */}\r\n            <div className=\"row\" style={{ marginTop: '-40px' }}>\r\n                <div className=\"col-lg-1 col-md-6 col-sm-12\" style={{ marginTop: '-4px' }}>\r\n                    <button onClick={() => setIsModalOpen(true)} className=\"btn btn-primary\">\r\n                        Add\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Client Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={client}\r\n                            onChange={(e) => setClient(e.target.value)}\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {clientOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Vendor Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={vendor}\r\n                            onChange={(e) => setVendor(e.target.value)}\r\n                            disabled={!client} // Disable if client is not selected\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {filteredVendorOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Employee Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={employee}\r\n                            onChange={(e) => setEmployee(e.target.value)}\r\n                            disabled={!vendor} // Disable if vendor is not selected\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {filteredEmployeeOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* User Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={user}\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            disabled={!employee} // Disable if employee is not selected\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {filteredUserOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <table style={{ borderCollapse: 'collapse', marginLeft: '27px', marginTop: '70px' }}>\r\n                <thead>\r\n                    <tr>\r\n                        {data.map((user) => (\r\n                            <th\r\n                                key={user.navId}\r\n                                style={{ border: '1px solid #000', padding: '8px', backgroundColor: '#f2f2f2' }}\r\n                            >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={subNavData[user.navId]?.every(item => !!checkedItems[item.subNavId])}\r\n                                    onChange={() => handleHeaderCheckboxChange(user.navId)}\r\n                                />\r\n                                <span\r\n                                    key={user.navId}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    onClick={() => handleNameClick(user.navId)}\r\n                                >\r\n                                    {user.name}\r\n                                </span>\r\n                                <button onClick={() => { setIsSecondModalOpen(true); setNavId(user.navId); }} className=\"btn btn-primary\">\r\n                                    Add\r\n                                </button>\r\n                                <button onClick={() => handleDelete(user.navId)} className=\"btn btn-danger\" style={{ marginLeft: '8px' }}>\r\n                                    <i className=\"la la-trash-o\"></i>\r\n                                </button>\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {data.map((user) => (\r\n                            <td key={user.navId} style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                                {subNavData[user.navId] && subNavData[user.navId].length > 0 ? (\r\n                                    subNavData[user.navId].map((item) => (\r\n                                        <div key={item.subNavId} style={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={!!checkedItems[item.subNavId]}\r\n                                                onChange={() => handleCheckboxChange(item.subNavId)}\r\n                                            />\r\n                                            <span onClick={() => handleNameClicks(item.subNavId)} style={{ cursor: 'pointer' }}>\r\n                                                {item.name}\r\n                                            </span>\r\n                                            <button onClick={() => handleDeleteSubNav(item.subNavId)} className=\"btn btn-danger\" style={{ marginLeft: '8px' }}>\r\n                                                <i className=\"la la-trash-o\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    ))\r\n                                ) : (\r\n                                    <span>No data available</span>\r\n                                )}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            {isPopupOpen && itemData && ( // Ensure itemData is defined before rendering\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        {/* <h2>Edit Details for {selectedSubNavId}</h2> */}\r\n                        {/* Close button */}\r\n                        <button\r\n                            className=\"close-button\"\r\n                            onClick={() => setIsPopupOpen(false)} // Close the popup when clicked\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: '10px',\r\n                                right: '10px',\r\n                                background: 'none',\r\n                                border: 'none',\r\n                                fontSize: '20px',\r\n                                cursor: 'pointer',\r\n                                marginTop:'-10px'\r\n                            }}\r\n                        >\r\n                            &times; {/* This represents the \"X\" symbol */}\r\n                        </button>\r\n                        <form onSubmit={handleSubmitsssss}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name} // Controlled input using name state\r\n                                    onChange={(e) => setName(e.target.value)} // Update name state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isEditModalOpen && userData && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={closeEditModal}>&times;</span>\r\n                        {/* <h2>Edit User</h2> */}\r\n                        <form>\r\n                            <div>\r\n                                <label>Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={userData.name || ''} // Default to empty string if name is undefined\r\n                                    onChange={(e) => setUserData({ ...userData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Image:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={userData.imageUrl || ''} // Default to empty string if imageUrl is undefined\r\n                                    onChange={(e) => setUserData({ ...userData, imageUrl: e.target.value })}\r\n                                />\r\n                                {userData.imageUrl && <img src={userData.imageUrl} alt=\"User\" style={{ width: '100px' }} />}\r\n                            </div>\r\n                            <button type=\"button\" onClick={closeEditModal} className=\"btn btn-primary\">Save</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isModalOpen && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <button className=\"close-button\" onClick={() => setIsModalOpen(false)}>\r\n                            &times;\r\n                        </button>\r\n                        <form onSubmit={handleSubmits}>\r\n                            <div className=\"col-lg-2 col-md-12 col-sm-12\">\r\n                                <div className=\"add-choosen\">\r\n                                    <div className=\"input-blocks\">\r\n                                        <div className=\"image-upload\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                id=\"imageInput\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={handleImageChange}\r\n                                                style={{ display: 'none' }}\r\n                                                required\r\n                                            />\r\n                                            <label htmlFor=\"imageInput\" className=\"image-uploads\">\r\n                                                <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                                                <h4>Add Image</h4>\r\n                                                {posterImage && (\r\n                                                    <img\r\n                                                        src={posterImage}\r\n                                                        alt=\"Preview\"\r\n                                                    />\r\n                                                )}\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Titl</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)} // Update the name state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isSecondModalOpen && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <button className=\"close-button\" onClick={() => setIsSecondModalOpen(false)}>\r\n                            &times;\r\n                        </button>\r\n                        <form onSubmit={handleSubmitss}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {popupNavId && (\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        <button onClick={closePopup} className=\"close-button\" style={{ float: 'right', cursor: 'pointer' }}>\r\n                            &times; {/* X symbol */}\r\n                        </button>\r\n                        {/* <h2>Details for NavId: {popupNavId}</h2> */}\r\n                        <form onSubmit={handleSubmitssss}>\r\n                            <div className=\"col-lg-2 col-md-12 col-sm-12\">\r\n                                <div className=\"add-choosen\">\r\n                                    <div className=\"input-blocks\">\r\n                                        <div className=\"image-upload\" style={{ marginRight: '100px' }}>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                id=\"imageInput\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={handleImageChange}\r\n                                                style={{ display: 'none' }}\r\n                                                required\r\n                                            />\r\n                                            <label htmlFor=\"imageInput\" className=\"image-uploads\">\r\n                                                <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                                                <h4>Add Image</h4>\r\n                                                {posterImage && (\r\n                                                    <img\r\n                                                        src={posterImage}\r\n                                                        alt=\"Preview\"\r\n                                                    />\r\n                                                )}\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)} // Update the name state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {/* SubNav Popup */}\r\n            {subNavId && (\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        <button onClick={closeSubNavPopup} className=\"close-button\" style={{ float: 'right', cursor: 'pointer' }}>\r\n                            &times;\r\n                        </button>\r\n                        <h2>Edit SubNavId: {subNavId}</h2>\r\n                        <form onSubmit={handleSubNavSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Image</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"imageInput\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleImageChange}\r\n                                    style={{ display: 'none' }}\r\n                                    required\r\n                                />\r\n                                <label htmlFor=\"imageInput\" className=\"image-uploads\" style={{ cursor: 'pointer' }}>\r\n                                    <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                                    <h4>Add Image</h4>\r\n                                    {posterImage && (\r\n                                        <img src={posterImage} alt=\"Preview\" style={{ maxWidth: '100px', maxHeight: '100px' }} />\r\n                                    )}\r\n                                </label>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                                    {loading ? 'Submitting...' : 'Submit'}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <style>\r\n                {`\r\n                .popup {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.popup-content {\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  margin-top: 10px;\r\n}\r\n\r\n  /* Modal Styles */\r\n  .modal {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    z-index: 1000;\r\n    width: 400px; /* Adjust as needed */\r\n  }\r\n\r\n  .modal-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .form-control {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .form-label {\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .btn {\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn-primary {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n  }\r\n\r\n  .btn-primary:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  .btn-secondary {\r\n    background-color: #6c757d;\r\n    color: white;\r\n    border: none;\r\n  }\r\n\r\n  .btn-secondary:hover {\r\n    background-color: #5a6268;\r\n  }\r\n\r\n  /* Optional: Backdrop for modal */\r\n  .modal-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 999;\r\n  }\r\n\r\n  /* Table Header Styles */\r\n  th {\r\n    text-align: left;\r\n    border: 1px solid #000;\r\n    padding: 8px;\r\n    background-color: #f2f2f2;\r\n  }\r\n\r\n  th span {\r\n    cursor: pointer;\r\n \r\n  }\r\n\r\n  th span:hover {\r\n    color: darkblue;\r\n  }\r\n\r\n  th .btn {\r\n    margin-left: 8px;\r\n  }\r\n`}\r\n            </style>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YourComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}