{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhil.t.EIS\\\\Videos\\\\IIA_Final\\\\IIA_DASHBOARDS\\\\src\\\\Component\\\\NavBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Sidenav from './Sidenav';\nimport uploadIcon from '../images/edit-icon-removebg-preview.png';\nimport Compress from 'compress.js'; // Ensure correct import\nimport dummyImage from '../images/upload-icon.PNG';\nimport { IconButton, Tooltip, Menu, MenuItem } from '@mui/material';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport Badge from \"@mui/material/Badge\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const [isSidenavHidden, setSidenavHidden] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [image, setImage] = useState('');\n  const [posterImage, setPosterImage] = useState(null);\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [companyName, setCompanyName] = useState('');\n  const [clock, setClock] = useState('Clock In');\n  const imageInputRef = useRef(null);\n  const [time, setTime] = useState({\n    hours: '00',\n    minutes: '00',\n    seconds: '00'\n  });\n  const [countcl, setCountcl] = useState(0);\n  const navigate = useNavigate();\n  let timer;\n  const iconButtonStyle = {\n    backgroundColor: \"white\",\n    // Set background color to white\n    borderRadius: \"50%\",\n    // Make the button circular\n    padding: \"10px\",\n    // Add padding inside the button\n    boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\" // Add a subtle shadow for depth\n  };\n\n  // Fetch logo from the backend or localStorage when the component mounts\n  const fetchLogo = async () => {\n    const storedImage = localStorage.getItem('posterImage'); // Retrieve from localStorage\n    if (storedImage) {\n      setPosterImage(storedImage); // Use stored image if it exists\n    } else {\n      try {\n        const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/logo/getlogoandcompanyname', {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch logo: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setPosterImage(data.logoUrl || dummyImage); // Set the fetched logo or dummy image\n      } catch (error) {\n        console.error('Error fetching logo:', error);\n        setPosterImage(dummyImage); // Use dummy image on error\n      }\n    }\n  };\n  const start = () => {\n    setCountcl(1);\n    setClock('Clock Out');\n    let totalSeconds = 0;\n    timer = setInterval(() => {\n      totalSeconds++;\n      const hours = String(Math.floor(totalSeconds / 3600)).padStart(2, '0');\n      const minutes = String(Math.floor(totalSeconds % 3600 / 60)).padStart(2, '0');\n      const seconds = String(totalSeconds % 60).padStart(2, '0');\n      setTime({\n        hours,\n        minutes,\n        seconds\n      });\n    }, 1000);\n  };\n  const stop = () => {\n    setCountcl(0);\n    setClock('Clock In');\n    clearInterval(timer);\n  };\n  useEffect(() => {\n    // Cleanup on component unmount\n    return () => clearInterval(timer);\n  }, []);\n\n  // Call fetchLogo when the component mounts\n  useEffect(() => {\n    fetchLogo();\n  }, []);\n\n  // File input change handler\n  const onFileChange = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n        const base64Image = reader.result; // Base64 string\n\n        // Display the image in UI\n        setPosterImage(base64Image);\n        localStorage.setItem('posterImage', base64Image); // Store in localStorage to persist after refresh\n\n        try {\n          if (file.size > 1e6) {\n            const compress = new Compress();\n            const compressedFiles = await compress.compress([file], {\n              size: 1,\n              quality: 0.75,\n              maxWidth: 800,\n              maxHeight: 800,\n              resize: true\n            });\n            const compressedBase64Image = compressedFiles[0].data;\n            await handleImageUpload(compressedBase64Image); // Upload the compressed image\n          } else {\n            await handleImageUpload(base64Image); // Upload the original image\n          }\n        } catch (err) {\n          console.error('Error uploading image:', err);\n        }\n      };\n      reader.readAsDataURL(file); // Convert image to base64\n    } else {\n      console.log('No file selected');\n    }\n  };\n  const handleImageUpload = async base64Image => {\n    setLoading(true);\n    try {\n      const cleanBase64Image = base64Image.replace(/^data:image\\/[a-z]+;base64,/, '');\n      console.log('Base64 Image Size:', cleanBase64Image.length); // Log the size\n\n      // Check if image size exceeds 1MB (1,000,000 bytes)\n      if (cleanBase64Image.length > 100000000000) {\n        setError('Image size exceeds limit');\n        return;\n      }\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/logo/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          logoId: 20,\n          // Assuming 'logoId' is a required field\n          image: cleanBase64Image // Send the cleaned base64 image in the 'image' field\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Image upload failed');\n      }\n      console.log('Image uploaded successfully');\n      await fetchLogo(); // Re-fetch logo to ensure the UI is updated\n    } catch (error) {\n      setError('Failed to upload image');\n      console.error('Error uploading image:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleSidenav = () => {\n    setSidenavHidden(!isSidenavHidden);\n  };\n\n  // Fetch company data\n  const fetchCompanyData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/companyname/getlatest');\n      console.log('Response Data:', response.data);\n      if (response.data && response.data.companyName) {\n        setCompanyName(response.data.companyName);\n      } else {\n        throw new Error('Company name not found in response');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError(error.response ? error.response.data : error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCompanyData(); // Fetch company data when component mounts\n  }, []);\n\n  // Handle image submission\n  const handleSubmits = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setError(null); // Reset any previous errors\n\n    const formData = {\n      logoId: 2,\n      companyName: name\n    };\n    try {\n      const response = await axios.post('http://10.10.20.9:7071/IIA-Website-1.0.0/companyname/add', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Form submitted successfully:', response.data);\n      alert('Data added successfully!');\n      setIsModalOpen(false);\n      setName('');\n      setImage('');\n      setPosterImage(null);\n    } catch (error) {\n      console.error('Error submitting form:', error.response ? error.response.data : error.message);\n      setError('Error submitting form. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    navigate(\"/logout\");\n    setAnchorEl(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .nav-header {\n            display: flex;\n            align-items: center;\n             justify-content: space-between; \n            padding: 10px;\n            background-color: #333; /* Set the background color */\n          }\n          \n          .nav-header img {\n            margin-right: 20px; /* Space between logo and upload icon */\n          }\n\n          .upload-icon {\n            width: 40px;\n            height: 40px;\n            border-radius: 50%; /* Round shape */\n            object-fit: cover; /* Maintain aspect ratio */\n          }\n\n          .error-message {\n            color: red;\n            margin-top: 10px; /* Space above the error message */\n          }\n\n          .loading-message {\n            color: #fff; /* Change color to white for visibility */\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-header\",\n          style: {\n            position: 'fixed'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              marginLeft: '34px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'relative',\n                display: 'inline-block'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: posterImage || dummyImage // Use posterImage or fallback to dummyImage\n                ,\n                alt: \"Selected\",\n                style: {\n                  width: '60px',\n                  height: '60px',\n                  borderRadius: '50%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => imageInputRef.current.click(),\n                style: {\n                  position: 'absolute',\n                  top: '0',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                  background: 'none',\n                  border: 'none',\n                  cursor: 'pointer'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: uploadIcon,\n                  style: {\n                    width: '20px',\n                    height: '20px',\n                    marginTop: '37px',\n                    marginLeft: '41px'\n                  },\n                  alt: \"Upload Icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                ref: imageInputRef,\n                onChange: onFileChange,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 29\n              }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error-message\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 27\n              }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"btn\",\n                onClick: () => setIsModalOpen(true) // Set modal to open on click\n                ,\n                style: {\n                  marginTop: '20px',\n                  width: '560px',\n                  cursor: 'pointer',\n                  // Change to pointer to indicate clickable\n                  zIndex: 1,\n                  display: 'inline-block',\n                  padding: '10px',\n                  fontSize: '24px',\n                  color: '#fff',\n                  textAlign: 'center',\n                  borderRadius: '5px'\n                },\n                children: companyName || 'No company name available'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clock-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clock-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"clock-text\",\n                children: \"Clock In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `time-display ${countcl === 1 ? \"green-text\" : \"\"}`,\n                children: [time.hours, \":\", time.minutes, \":\", time.seconds]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"View\",\n              arrow: true,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: countcl === 0 ? start : stop,\n                className: \"icon-btn\",\n                children: /*#__PURE__*/_jsxDEV(AccessTimeIcon, {\n                  style: {\n                    color: countcl === 0 ? \"red\" : \"green\",\n                    fontSize: \"30px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-container\",\n            title: \"Notifications\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-icon\",\n              children: \"\\uD83D\\uDD14 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-badge\",\n              children: \"15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tooltip\",\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              alignItems: 'center',\n              marginLeft: '30px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleMenuOpen,\n              children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n                style: {\n                  color: '#FFF',\n                  fontSize: '36px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              anchorEl: anchorEl,\n              open: Boolean(anchorEl),\n              onClose: handleMenuClose,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleMenuClose,\n                children: \"Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleMenuClose,\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          style: {\n            position: 'fixed',\n            top: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmits,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \" Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value) // Update the name state data not fetching in all \n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(NavBar, \"aravEm5ye8CwxYxbg4ZZ574ifug=\", false, function () {\n  return [useNavigate];\n});\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Sidenav","uploadIcon","Compress","dummyImage","IconButton","Tooltip","Menu","MenuItem","AccountCircleIcon","AccessTimeIcon","Badge","NotificationsIcon","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","NavBar","_s","isSidenavHidden","setSidenavHidden","isModalOpen","setIsModalOpen","image","setImage","posterImage","setPosterImage","name","setName","loading","setLoading","error","setError","companyName","setCompanyName","clock","setClock","imageInputRef","time","setTime","hours","minutes","seconds","countcl","setCountcl","navigate","timer","iconButtonStyle","backgroundColor","borderRadius","padding","boxShadow","fetchLogo","storedImage","localStorage","getItem","response","fetch","method","headers","ok","Error","statusText","data","json","logoUrl","console","start","totalSeconds","setInterval","String","Math","floor","padStart","stop","clearInterval","onFileChange","e","file","target","files","reader","FileReader","onloadend","base64Image","result","setItem","size","compress","compressedFiles","quality","maxWidth","maxHeight","resize","compressedBase64Image","handleImageUpload","err","readAsDataURL","log","cleanBase64Image","replace","length","body","JSON","stringify","logoId","message","toggleSidenav","fetchCompanyData","get","handleSubmits","event","preventDefault","formData","post","alert","anchorEl","setAnchorEl","handleMenuOpen","currentTarget","handleMenuClose","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","position","display","alignItems","marginLeft","src","alt","width","height","onClick","current","click","top","left","transform","background","border","cursor","marginTop","type","accept","ref","onChange","zIndex","fontSize","color","textAlign","title","arrow","justifyContent","open","Boolean","onClose","onSubmit","value","required","_c","$RefreshReg$"],"sources":["C:/Users/Akhil.t.EIS/Videos/IIA_Final/IIA_DASHBOARDS/src/Component/NavBar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Sidenav from './Sidenav';\r\nimport uploadIcon from '../images/edit-icon-removebg-preview.png';\r\nimport Compress from 'compress.js'; // Ensure correct import\r\nimport dummyImage from '../images/upload-icon.PNG';\r\nimport { IconButton, Tooltip, Menu, MenuItem } from '@mui/material';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport Badge from \"@mui/material/Badge\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n  const [isSidenavHidden, setSidenavHidden] = useState(true);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [image, setImage] = useState('');\r\n  const [posterImage, setPosterImage] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [clock, setClock] = useState('Clock In');\r\n  const imageInputRef = useRef(null);\r\n  const [time, setTime] = useState({ hours: '00', minutes: '00', seconds: '00' });\r\n  const [countcl, setCountcl] = useState(0);\r\n  const navigate = useNavigate(); \r\n  let timer;\r\n\r\n  const iconButtonStyle = {\r\n    backgroundColor: \"white\", // Set background color to white\r\n    borderRadius: \"50%\", // Make the button circular\r\n    padding: \"10px\", // Add padding inside the button\r\n    boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\", // Add a subtle shadow for depth\r\n  };\r\n\r\n\r\n  // Fetch logo from the backend or localStorage when the component mounts\r\n  const fetchLogo = async () => {\r\n    const storedImage = localStorage.getItem('posterImage'); // Retrieve from localStorage\r\n    if (storedImage) {\r\n      setPosterImage(storedImage); // Use stored image if it exists\r\n    } else {\r\n      try {\r\n        const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/logo/getlogoandcompanyname', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch logo: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setPosterImage(data.logoUrl || dummyImage); // Set the fetched logo or dummy image\r\n      } catch (error) {\r\n        console.error('Error fetching logo:', error);\r\n        setPosterImage(dummyImage); // Use dummy image on error\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const start = () => {\r\n    setCountcl(1);\r\n    setClock('Clock Out');\r\n\r\n    let totalSeconds = 0;\r\n\r\n    timer = setInterval(() => {\r\n      totalSeconds++;\r\n      const hours = String(Math.floor(totalSeconds / 3600)).padStart(2, '0');\r\n      const minutes = String(Math.floor((totalSeconds % 3600) / 60)).padStart(2, '0');\r\n      const seconds = String(totalSeconds % 60).padStart(2, '0');\r\n\r\n      setTime({ hours, minutes, seconds });\r\n    }, 1000);\r\n  };\r\n\r\n  const stop = () => {\r\n    setCountcl(0);\r\n    setClock('Clock In');\r\n    clearInterval(timer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Cleanup on component unmount\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Call fetchLogo when the component mounts\r\n  useEffect(() => {\r\n    fetchLogo();\r\n  }, []);\r\n\r\n  // File input change handler\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = async () => {\r\n        const base64Image = reader.result; // Base64 string\r\n\r\n        // Display the image in UI\r\n        setPosterImage(base64Image);\r\n        localStorage.setItem('posterImage', base64Image); // Store in localStorage to persist after refresh\r\n\r\n        try {\r\n          if (file.size > 1e6) {\r\n            const compress = new Compress();\r\n            const compressedFiles = await compress.compress([file], {\r\n              size: 1,\r\n              quality: 0.75,\r\n              maxWidth: 800,\r\n              maxHeight: 800,\r\n              resize: true,\r\n            });\r\n\r\n            const compressedBase64Image = compressedFiles[0].data;\r\n            await handleImageUpload(compressedBase64Image); // Upload the compressed image\r\n          } else {\r\n            await handleImageUpload(base64Image); // Upload the original image\r\n          }\r\n        } catch (err) {\r\n          console.error('Error uploading image:', err);\r\n        }\r\n      };\r\n      reader.readAsDataURL(file); // Convert image to base64\r\n    } else {\r\n      console.log('No file selected');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleImageUpload = async (base64Image) => {\r\n    setLoading(true);\r\n    try {\r\n      const cleanBase64Image = base64Image.replace(/^data:image\\/[a-z]+;base64,/, '');\r\n      console.log('Base64 Image Size:', cleanBase64Image.length); // Log the size\r\n\r\n      // Check if image size exceeds 1MB (1,000,000 bytes)\r\n      if (cleanBase64Image.length > 100000000000) {\r\n        setError('Image size exceeds limit');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/logo/add', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          logoId: 20, // Assuming 'logoId' is a required field\r\n          image: cleanBase64Image, // Send the cleaned base64 image in the 'image' field\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Image upload failed');\r\n      }\r\n\r\n      console.log('Image uploaded successfully');\r\n      await fetchLogo(); // Re-fetch logo to ensure the UI is updated\r\n    } catch (error) {\r\n      setError('Failed to upload image');\r\n      console.error('Error uploading image:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const toggleSidenav = () => {\r\n    setSidenavHidden(!isSidenavHidden);\r\n  };\r\n\r\n  // Fetch company data\r\n  const fetchCompanyData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/companyname/getlatest');\r\n      console.log('Response Data:', response.data);\r\n\r\n      if (response.data && response.data.companyName) {\r\n        setCompanyName(response.data.companyName);\r\n      } else {\r\n        throw new Error('Company name not found in response');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError(error.response ? error.response.data : error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCompanyData(); // Fetch company data when component mounts\r\n  }, []);\r\n\r\n  // Handle image submission\r\n  const handleSubmits = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null); // Reset any previous errors\r\n\r\n    const formData = {\r\n      logoId: 2,\r\n\r\n      companyName: name,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://10.10.20.9:7071/IIA-Website-1.0.0/companyname/add',\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n      console.log('Form submitted successfully:', response.data);\r\n      alert('Data added successfully!');\r\n      setIsModalOpen(false);\r\n      setName('');\r\n      setImage('');\r\n      setPosterImage(null);\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error.response ? error.response.data : error.message);\r\n      setError('Error submitting form. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n      navigate(\"/logout\"); \r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* Internal CSS */}\r\n      <style>\r\n        {`\r\n          .nav-header {\r\n            display: flex;\r\n            align-items: center;\r\n             justify-content: space-between; \r\n            padding: 10px;\r\n            background-color: #333; /* Set the background color */\r\n          }\r\n          \r\n          .nav-header img {\r\n            margin-right: 20px; /* Space between logo and upload icon */\r\n          }\r\n\r\n          .upload-icon {\r\n            width: 40px;\r\n            height: 40px;\r\n            border-radius: 50%; /* Round shape */\r\n            object-fit: cover; /* Maintain aspect ratio */\r\n          }\r\n\r\n          .error-message {\r\n            color: red;\r\n            margin-top: 10px; /* Space above the error message */\r\n          }\r\n\r\n          .loading-message {\r\n            color: #fff; /* Change color to white for visibility */\r\n          }\r\n        `}\r\n      </style>\r\n\r\n      {/* Nav Header */}\r\n      <div>\r\n        <div>\r\n          <div className=\"nav-header\" style={{ position: 'fixed' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', marginLeft: '34px' }}>\r\n              <div style={{ position: 'relative', display: 'inline-block' }}>\r\n                <img\r\n                  src={posterImage || dummyImage} // Use posterImage or fallback to dummyImage\r\n                  alt=\"Selected\"\r\n                  style={{ width: '60px', height: '60px', borderRadius: '50%' }}\r\n                />\r\n                <button\r\n                  onClick={() => imageInputRef.current.click()}\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: '0',\r\n                    left: '50%',\r\n                    transform: 'translateX(-50%)',\r\n                    background: 'none',\r\n                    border: 'none',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                   >\r\n                  <img\r\n                    src={uploadIcon}\r\n                    style={{ width: '20px', height: '20px', marginTop: '37px', marginLeft: '41px' }}\r\n                    alt=\"Upload Icon\"\r\n                  />\r\n                </button>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  ref={imageInputRef}\r\n                  onChange={onFileChange}\r\n                  style={{ display: 'none' }}\r\n                />\r\n              </div>\r\n\r\n\r\n              \r\n\r\n\r\n\r\n\r\n              <div>\r\n                {loading && <p>Loading...</p>}\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                {!loading && !error && (\r\n                  <p\r\n                    className=\"btn\"\r\n                    onClick={() => setIsModalOpen(true)} // Set modal to open on click\r\n                    style={{\r\n                      marginTop: '20px',\r\n                      width: '560px',\r\n               \r\n                      cursor: 'pointer', // Change to pointer to indicate clickable\r\n                      zIndex: 1,\r\n                      display: 'inline-block',\r\n                      padding: '10px',\r\n                      fontSize:'24px',\r\n                      color: '#fff',\r\n                      textAlign: 'center',\r\n                      borderRadius: '5px',\r\n                    }}\r\n                  >\r\n                    {companyName || 'No company name available'}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"clock-container\">\r\n      <div className=\"clock-info\">\r\n        <p className=\"clock-text\">Clock In</p>\r\n        <p className={`time-display ${countcl === 1 ? \"green-text\" : \"\"}`}>\r\n          {time.hours}:{time.minutes}:{time.seconds}\r\n        </p>\r\n      </div>\r\n      <Tooltip title=\"View\" arrow>\r\n        <button onClick={countcl === 0 ? start : stop} className=\"icon-btn\">\r\n          <AccessTimeIcon\r\n            style={{ color: countcl === 0 ? \"red\" : \"green\", fontSize: \"30px\" }}\r\n          />\r\n        </button>\r\n      </Tooltip>\r\n    </div>\r\n\r\n    <div className=\"notification-container\" title=\"Notifications\">\r\n      <div className=\"notification-icon\">\r\n        &#128276; {/* Notifications icon (bell emoji) */}\r\n      </div>\r\n      <div className=\"notification-badge\">15</div>\r\n      <div className=\"tooltip\">Notifications</div>\r\n    </div>\r\n\r\n\r\n    \r\n           \r\n\r\n\r\n    <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', marginLeft:'30px'}}>\r\n        <IconButton onClick={handleMenuOpen}>\r\n          <AccountCircleIcon style={{ color: '#FFF', fontSize: '36px' }} />\r\n        </IconButton>\r\n\r\n        {/* Profile Menu */}\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleMenuClose}\r\n        >\r\n          <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n          <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n        </Menu>\r\n      </div>\r\n\r\n\r\n            <div>\r\n              {/* Show loading message while fetching data fecting data not founding un the reality of the */}\r\n\r\n\r\n              {/* Display the fetched image and company name */}\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          {/* Header */}\r\n          <div className=\"header\" style={{ position: 'fixed', top: '0' }}>\r\n            <div >\r\n\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for adding an image */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-button\" onClick={() => setIsModalOpen(false)}>\r\n              &times;\r\n            </button>\r\n            <form onSubmit={handleSubmits}>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\"> Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)} // Update the name state data not fetching in all \r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}