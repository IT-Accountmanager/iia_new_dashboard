{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhil.t.EIS\\\\Videos\\\\IIA_Final\\\\IIA_DASHBOARDS\\\\src\\\\Component\\\\SideNavBar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n// Create the SidebarContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the Sidebar context\nexport const useSidebar = () => {\n  _s();\n  return useContext(SidebarContext);\n};\n_s(useSidebar, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst SideNavBar = ({\n  isHidden\n}) => {\n  _s2();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\n  const navigate = useNavigate();\n  const [imagePreview, setImagePreview] = useState(null);\n  const [image, setImage] = useState('');\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [posterImage, setPosterImage] = useState('');\n  const [apiData, setApiData] = useState([]);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // Sidebar toggle state\n  const [selectedCourse, setSelectedCourse] = useState(null); // Track selected course \n\n  const [navId, setNavId] = useState(1); // Initialize navId with a default value\n  const [subNavId, setSubNavId] = useState(1); // Initialize subNavId with a default value\n\n  const [selectedCourseId, setSelectedCourseId] = useState(null); // Track selected cour\n  const [subNavData, setSubNavData] = useState([]);\n  const toggleSidenav = () => {\n    setIsSidebarOpen(prev => !prev);\n  };\n  const handleCourseClick = course => {\n    if (selectedCourseId === course.navId) {\n      // Deselect the course if clicked again\n      setSelectedCourseId(null);\n      setSubNavData([]); // Clear subNavData when closing\n\n      // Remove the DIRECTORY navId from local storage if deselecting\n      // if (course.name === 'DIRECTORY') {\n      //   localStorage.removeItem('directoryNavId');\n      // }\n    } else {\n      // Set the selected course ID\n      setSelectedCourseId(course.navId);\n      fetchSubNavData(course.navId); // Fetch sub-navigation dat\n      // If the course is 'DIRECTORY', store its navId in localStorage\n\n      localStorage.setItem('directoryNavId', course.navId);\n      // Navigate to the onboarding page with the navId\n      navigate(`/topnav/${course.navId}`);\n\n      // Navigate to the general course page for other courses\n      // navigate(`/empty-page/${course.navId}`);\n    }\n  };\n\n  // Fetch sub-navigation data based on navId\n  const fetchSubNavData = async navId => {\n    if (!navId) {\n      console.error('navId is not set');\n      return; // Exit if navId is not defined\n    }\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${navId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch sub-navigation data: ' + response.statusText);\n      }\n      const data = await response.json();\n      console.log('Fetched sub-navigation data:', data); // Log fetched data for debugging\n      setSubNavData(data); // Set the fetched data to state\n    } catch (error) {\n      console.error('Error fetching sub-navigation data:', error);\n    }\n  };\n\n  // Handle course click, set the selected course id\n  // const handleCourseClick = (course) => {\n  //   if (selectedCourseId === course.navId) {\n  //     // Close the sidebar if the same course is clicked again\n  //     setSelectedCourseId(null);\n  //     setSubNavData([]); // Clear subNavData when closing\n  //   } else {\n  //     // Set selected course ID and fetch sub-navigation data\n  //     setSelectedCourseId(course.navId);\n  //     fetchSubNavData(course.navId); // Fetch sub-navigation data for the clicked course\n\n  //     // Determine the dynamic route based on the course name\n  //     const route = getCourseRoute(course.name);\n\n  //     // Navigate to the determined dynamic page\n  //     navigate(route);\n  //   }\n  // };\n\n  // Form submission handler\n  const handleSubmitss = async e => {\n    e.preventDefault();\n\n    // Prepare the data to be sent to the API\n    const requestBody = {\n      navId,\n      // Use the navId from the selected course\n      name\n    };\n\n    // POST API call\n    try {\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit the form');\n      }\n      const data = await response.json();\n      console.log('Form submitted successfully:', data);\n\n      // Handle the success, close modal, or reset form\n      setIsSecondModalOpen(false);\n      setName('');\n    } catch (error) {\n      console.error('Error submitting the form:', error);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (imagePreview) {\n        URL.revokeObjectURL(imagePreview);\n      }\n    };\n  }, [imagePreview]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/all');\n        console.log('API Response:', response.data); // Log the response data\n        setApiData(response.data); // Set the fetched data to state\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // Ensure loading is set to false regardless of success or error\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSubmits = async event => {\n    event.preventDefault();\n    const cleanImage = image.replace(/^data:image\\/[a-zA-Z]+;base64,/, '');\n    const formData = {\n      name: name,\n      image: cleanImage\n    };\n    try {\n      const response = await axios.post('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/add', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Form submitted successfully:', response.data);\n      alert('Data added successfully!');\n      navigate('/login');\n    } catch (error) {\n      var _error$response;\n      console.error('Error submitting form:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImage(reader.result);\n        setPosterImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const getCourseRoute = courseName => {\n    switch (courseName) {\n      case \"COURSES\":\n        return \"/COURSES\";\n      // Specify the route for Course A\n      case \"Course B\":\n        return \"/course-b\";\n      // Specify the route for Course B\n      case \"Course C\":\n        return \"/course-c\";\n      // Specify the route for Course C\n      // Add more cases as needed for different courses\n      default:\n        return \"\";\n      // Redirect to a not found page or a default route\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      isSidebarOpen,\n      toggleSidenav\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n      .hamburgers {\n  width: 40px; /* Adjust the width as needed */\n  height: 30px; /* Adjust the height as needed */\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between; /* Space the lines evenly */\n  cursor: pointer; /* Change cursor on hover */\n  background:#2a2a2a;\n}\n\n.line {\n  height: 3px; /* Thickness of the lines */\n  margin-bottom:7px;\n  width: 86%; /* Full width of the hamburger */\n  background-color: #fff; /* Color of the lines */\n  transition: background-color 0.3s ease; /* Smooth transition for hover effects */\n}\n\n/* Optional: Add hover effects */\n.hamburger:hover .line {\n  background-color: #ccc; /* Change color on hover */\n}\n  \n           \n        `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidenav ${isSidebarOpen ? 'open' : 'closed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `nav-control`,\n          onClick: toggleSidenav,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `hamburgers ${isSidebarOpen ? 'active' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `deznav ${isHidden ? 'hidden' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deznav-scroll\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"metismenu\",\n              id: \"menu\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"nav-label first\",\n                children: \"Main Menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/cntrollers-table-data\",\n                  style: {\n                    textAlign: 'center',\n                    cursor: 'pointer',\n                    color: '#fff',\n                    textDecoration: 'none' // No underline on the link\n                  },\n                  children: \"Controllers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this) // Show loading message while fetching data\n              : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: apiData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'center',\n                    position: 'relative',\n                    marginTop: '20px',\n                    marginLeft: '27px'\n                  },\n                  children: apiData.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      marginRight: '30px',\n                      marginBottom: '30px',\n                      position: 'relative'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"course-item\",\n                      onClick: () => handleCourseClick(course) // Open sidebar on click\n                      ,\n                      style: {\n                        textAlign: 'center',\n                        cursor: 'pointer',\n                        color: '#fff'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: getCourseRoute(course.name) // Use a function to get the route based on the course name\n                        ,\n                        style: {\n                          textAlign: 'center',\n                          cursor: 'pointer',\n                          color: '#fff',\n                          textDecoration: 'none' // No underline on the link\n                        },\n                        children: [course.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: `data:image/png;base64,${course.image}`,\n                          alt: course.name,\n                          style: {\n                            width: '35px',\n                            height: '35px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 345,\n                          columnNumber: 35\n                        }, this) : null, /*#__PURE__*/_jsxDEV(\"strong\", {\n                          style: {\n                            display: 'block',\n                            marginTop: '5px'\n                          },\n                          children: course.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 334,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 29\n                    }, this), selectedCourseId === course.navI && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"sidenav\",\n                      style: {\n                        position: 'absolute',\n                        left: '100%',\n                        marginLeft: '20px',\n                        width: '165px',\n                        height: '130px',\n                        transition: '0.3s',\n                        backgroundColor: '#2a2a2a',\n                        padding: '10px',\n                        marginTop: '-50px',\n                        overflowX: 'clip',\n                        color: '#fff',\n                        zIndex: 1\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                        style: {\n                          listStyle: 'none',\n                          padding: '0',\n                          color: '#fff',\n                          textAlign: 'center'\n                        },\n                        children: subNavData.map(subNavItem => {\n                          // Dynamic route logic\n                          const dynamicRoute = (() => {\n                            switch (subNavItem.name) {\n                              case \"add-courses\":\n                                return \"/add-courses\";\n                              case \"test1\":\n                                return \"/test1\";\n                              // Specify the route for \"test1\" \n                              case \"Students\":\n                                return \"/Students\";\n                              // Specify the route for \"Students\"\n                              case \"All Courses\":\n                                return \"/All Courses\";\n                              // Specify the route for \"Students\" \n                              case \"Add Courses\":\n                                return \"/Add Courses\";\n                              // Specify the route for \"Students\" \n                              case \"Enroll\":\n                                return \"/Enroll\";\n                              // Specify the route for \"Students\"  Controllers\n                              case \"All Students\":\n                                return \"/All Students\";\n                              // Specify the route for \"Students\" \n                              case \"Controllers\":\n                                return \"/Controllers\";\n                              // Specify the route for \"Students\" \n                              default:\n                                return `/courses/${subNavItem.name.toLowerCase().replace(/\\s+/g, '-')}`;\n                              // Default route mapping\n                            }\n                          })();\n                          return /*#__PURE__*/_jsxDEV(\"li\", {\n                            children: /*#__PURE__*/_jsxDEV(Link, {\n                              to: dynamicRoute // Use dynamicRoute to navigate to different pages\n                              ,\n                              style: {\n                                color: '#fff',\n                                textDecoration: 'none'\n                              } // Optional styling for Link\n                              ,\n                              children: subNavItem.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 406,\n                              columnNumber: 41\n                            }, this)\n                          }, subNavItem.subNavId, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 405,\n                            columnNumber: 39\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 375,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 31\n                    }, this)]\n                  }, course.navId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No data available.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), isSecondModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsSecondModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Banner Image Title 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmits,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-12 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-choosen\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-blocks\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    id: \"imageInput\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange,\n                    style: {\n                      display: 'none'\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"imageInput\",\n                    className: \"image-uploads\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      \"data-feather\": \"plus-circle\",\n                      className: \"plus-down-add me-0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Add Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 25\n                    }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: posterImage,\n                      alt: \"Preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Banner Image Title 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value) // Update the name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s2(SideNavBar, \"4jOilNhRbvKlT01OlY8Cea4PYH4=\", false, function () {\n  return [useNavigate];\n});\n_c = SideNavBar;\nexport default SideNavBar;\nvar _c;\n$RefreshReg$(_c, \"SideNavBar\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Link","useNavigate","axios","jsxDEV","_jsxDEV","SidebarContext","useSidebar","_s","SideNavBar","isHidden","_s2","isModalOpen","setIsModalOpen","isSecondModalOpen","setIsSecondModalOpen","navigate","imagePreview","setImagePreview","image","setImage","name","setName","loading","setLoading","posterImage","setPosterImage","apiData","setApiData","isSidebarOpen","setIsSidebarOpen","selectedCourse","setSelectedCourse","navId","setNavId","subNavId","setSubNavId","selectedCourseId","setSelectedCourseId","subNavData","setSubNavData","toggleSidenav","prev","handleCourseClick","course","fetchSubNavData","localStorage","setItem","console","error","response","fetch","ok","Error","statusText","data","json","log","handleSubmitss","e","preventDefault","requestBody","method","headers","body","JSON","stringify","URL","revokeObjectURL","fetchData","get","handleSubmits","event","cleanImage","replace","formData","post","alert","_error$response","message","handleImageChange","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","getCourseRoute","courseName","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","id","to","style","textAlign","cursor","color","textDecoration","length","display","flexWrap","justifyContent","position","marginTop","marginLeft","map","alignItems","marginRight","marginBottom","src","alt","width","height","navI","left","transition","backgroundColor","padding","overflowX","zIndex","listStyle","subNavItem","dynamicRoute","toLowerCase","onSubmit","type","onChange","required","accept","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Akhil.t.EIS/Videos/IIA_Final/IIA_DASHBOARDS/src/Component/SideNavBar.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n// Create the SidebarContext\r\nconst SidebarContext = createContext();\r\n\r\n// Custom hook to use the Sidebar context\r\nexport const useSidebar = () => {\r\n  return useContext(SidebarContext);\r\n};\r\nconst SideNavBar = ({ isHidden }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\r\n  const navigate = useNavigate();\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [image, setImage] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [posterImage, setPosterImage] = useState('');\r\n  const [apiData, setApiData] = useState([]);\r\n \r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // Sidebar toggle state\r\n  const [selectedCourse, setSelectedCourse] = useState(null); // Track selected course \r\n\r\n\r\n  const [navId, setNavId] = useState(1); // Initialize navId with a default value\r\n  const [subNavId, setSubNavId] = useState(1); // Initialize subNavId with a default value\r\n\r\n  const [selectedCourseId, setSelectedCourseId] = useState(null); // Track selected cour\r\n  const [subNavData, setSubNavData] = useState([]);\r\n\r\n\r\n\r\n  const toggleSidenav = () => {\r\n    setIsSidebarOpen((prev) => !prev);\r\n  };\r\n\r\n\r\n  const handleCourseClick = (course) => {\r\n    if (selectedCourseId === course.navId) {\r\n      // Deselect the course if clicked again\r\n      setSelectedCourseId(null);\r\n      setSubNavData([]); // Clear subNavData when closing\r\n      \r\n      // Remove the DIRECTORY navId from local storage if deselecting\r\n      // if (course.name === 'DIRECTORY') {\r\n      //   localStorage.removeItem('directoryNavId');\r\n      // }\r\n    } else {\r\n      // Set the selected course ID\r\n      setSelectedCourseId(course.navId);\r\n      fetchSubNavData(course.navId); // Fetch sub-navigation dat\r\n      // If the course is 'DIRECTORY', store its navId in localStorage\r\n     \r\n        localStorage.setItem('directoryNavId', course.navId);\r\n        // Navigate to the onboarding page with the navId\r\n        navigate(`/topnav/${course.navId}`);\r\n    \r\n        // Navigate to the general course page for other courses\r\n        // navigate(`/empty-page/${course.navId}`);\r\n    \r\n    }\r\n  };\r\n  \r\n  \r\n\r\n\r\n\r\n  // Fetch sub-navigation data based on navId\r\n  const fetchSubNavData = async (navId) => {\r\n    if (!navId) {\r\n      console.error('navId is not set');\r\n      return; // Exit if navId is not defined\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${navId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch sub-navigation data: ' + response.statusText);\r\n      }\r\n      const data = await response.json();\r\n      console.log('Fetched sub-navigation data:', data); // Log fetched data for debugging\r\n      setSubNavData(data); // Set the fetched data to state\r\n    } catch (error) {\r\n      console.error('Error fetching sub-navigation data:', error);\r\n    }\r\n  };\r\n\r\n  // Handle course click, set the selected course id\r\n  // const handleCourseClick = (course) => {\r\n  //   if (selectedCourseId === course.navId) {\r\n  //     // Close the sidebar if the same course is clicked again\r\n  //     setSelectedCourseId(null);\r\n  //     setSubNavData([]); // Clear subNavData when closing\r\n  //   } else {\r\n  //     // Set selected course ID and fetch sub-navigation data\r\n  //     setSelectedCourseId(course.navId);\r\n  //     fetchSubNavData(course.navId); // Fetch sub-navigation data for the clicked course\r\n  \r\n  //     // Determine the dynamic route based on the course name\r\n  //     const route = getCourseRoute(course.name);\r\n      \r\n  //     // Navigate to the determined dynamic page\r\n  //     navigate(route);\r\n  //   }\r\n  // };\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  // Form submission handler\r\n  const handleSubmitss = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the data to be sent to the API\r\n    const requestBody = {\r\n      navId, // Use the navId from the selected course\r\n      name,\r\n    };\r\n\r\n    // POST API call\r\n    try {\r\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to submit the form');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Form submitted successfully:', data);\r\n\r\n      // Handle the success, close modal, or reset form\r\n      setIsSecondModalOpen(false);\r\n      setName('');\r\n    } catch (error) {\r\n      console.error('Error submitting the form:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (imagePreview) {\r\n        URL.revokeObjectURL(imagePreview);\r\n      }\r\n    };\r\n  }, [imagePreview]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/all');\r\n        console.log('API Response:', response.data); // Log the response data\r\n        setApiData(response.data); // Set the fetched data to state\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setLoading(false); // Ensure loading is set to false regardless of success or error\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSubmits = async (event) => {\r\n    event.preventDefault();\r\n    const cleanImage = image.replace(/^data:image\\/[a-zA-Z]+;base64,/, '');\r\n    const formData = {\r\n      name: name,\r\n      image: cleanImage,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/add',\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n      console.log('Form submitted successfully:', response.data);\r\n      alert('Data added successfully!');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error.response?.data || error.message);\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImage(reader.result);\r\n        setPosterImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  \r\n  const getCourseRoute = (courseName) => {\r\n    switch (courseName) {\r\n      case \"COURSES\":\r\n        return \"/COURSES\"; // Specify the route for Course A\r\n      case \"Course B\":\r\n        return \"/course-b\"; // Specify the route for Course B\r\n      case \"Course C\":\r\n        return \"/course-c\"; // Specify the route for Course C\r\n      // Add more cases as needed for different courses\r\n      default:\r\n        return \"\"; // Redirect to a not found page or a default route\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <SidebarContext.Provider value={{ isSidebarOpen, toggleSidenav }}>\r\n      <div>\r\n        <style>\r\n          {`\r\n      .hamburgers {\r\n  width: 40px; /* Adjust the width as needed */\r\n  height: 30px; /* Adjust the height as needed */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between; /* Space the lines evenly */\r\n  cursor: pointer; /* Change cursor on hover */\r\n  background:#2a2a2a;\r\n}\r\n\r\n.line {\r\n  height: 3px; /* Thickness of the lines */\r\n  margin-bottom:7px;\r\n  width: 86%; /* Full width of the hamburger */\r\n  background-color: #fff; /* Color of the lines */\r\n  transition: background-color 0.3s ease; /* Smooth transition for hover effects */\r\n}\r\n\r\n/* Optional: Add hover effects */\r\n.hamburger:hover .line {\r\n  background-color: #ccc; /* Change color on hover */\r\n}\r\n  \r\n           \r\n        `}\r\n        </style>\r\n\r\n        <div className={`sidenav ${isSidebarOpen ? 'open' : 'closed'}`}>\r\n          <div className={`nav-control`} onClick={toggleSidenav}>\r\n            {/* Apply dynamic class based on isSidebarOpen */}\r\n            <div className={`hamburgers ${isSidebarOpen ? 'active' : ''}`}>\r\n\r\n            </div>\r\n          </div>\r\n          <div className={`deznav ${isHidden ? 'hidden' : ''}`}>\r\n            <div className=\"deznav-scroll\">\r\n              <ul className=\"metismenu\" id=\"menu\">\r\n                <li className=\"nav-label first\">Main Menu</li>\r\n                <li><Link to=\"/cntrollers-table-data\" style={{\r\n                  textAlign: 'center',\r\n                  cursor: 'pointer',\r\n                  color: '#fff',\r\n                  textDecoration: 'none', // No underline on the link\r\n                }}>Controllers</Link></li>\r\n\r\n{/* <li><Link to=\"/cntrollers-table-data\" style={{\r\n                  textAlign: 'center',\r\n                  cursor: 'pointer',\r\n                  color: '#fff',\r\n                  textDecoration: 'none', // No underline on the link\r\n                }}>JAVA</Link></li> */}\r\n                <li>\r\n\r\n                {/* <li><Link to=\"/cntrollers-table-data\" style={{\r\n                  textAlign: 'center',\r\n                  cursor: 'pointer',\r\n                  color: '#fff',\r\n                  textDecoration: 'none', // No underline on the link\r\n                }}>Flutter</Link></li> */}\r\n                <li></li>\r\n\r\n                  {/* <button onClick={() => setIsModalOpen(true)} className=\"btn btn-primary\">Add</button> */}\r\n                </li>\r\n              </ul>\r\n              <div>\r\n\r\n                {loading ? (\r\n                  <p>Loading...</p> // Show loading message while fetching data\r\n                ) : (\r\n                  <div>\r\n                    {apiData.length > 0 ? (\r\n                      <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', position: 'relative', marginTop: '20px', marginLeft: '27px' }}>\r\n                        {/* Course Items */}\r\n                        {apiData.map((course) => (\r\n                          <div key={course.navId} style={{ display: 'flex', alignItems: 'center', marginRight: '30px', marginBottom: '30px', position: 'relative' }}>\r\n                            {/* Course Item */}\r\n                            <div\r\n                              className=\"course-item\"\r\n                              onClick={() => handleCourseClick(course)} // Open sidebar on click\r\n                              style={{\r\n                                textAlign: 'center',\r\n                                cursor: 'pointer',\r\n                                color: '#fff',\r\n                              }}\r\n                              >\r\n                              <Link\r\n                                to={getCourseRoute(course.name)} // Use a function to get the route based on the course name\r\n                                style={{\r\n                                  textAlign: 'center',\r\n                                  cursor: 'pointer',\r\n                                  color: '#fff',\r\n                                  textDecoration: 'none', // No underline on the link\r\n                                }}\r\n                              >\r\n                                {/* Course image */}\r\n                                {course.image ? (\r\n                                  <img\r\n                                    src={`data:image/png;base64,${course.image}`}\r\n                                    alt={course.name}\r\n                                    style={{ width: '35px', height: '35px' }}\r\n                                  />\r\n                                ) : null}\r\n                                {/* Course name */}\r\n                                <strong style={{ display: 'block', marginTop: '5px' }}>{course.name}</strong>\r\n                              </Link>\r\n                            </div>\r\n\r\n                            {/* Sidebar next to the clicked course */}\r\n                            {selectedCourseId === course.navI && (\r\n                              <div\r\n                                className=\"sidenav\"\r\n                                style={{\r\n                                  position: 'absolute',\r\n                                  left: '100%',\r\n                                  marginLeft: '20px',\r\n                                  width: '165px',\r\n                                  height: '130px',\r\n                                  transition: '0.3s',\r\n                                  backgroundColor: '#2a2a2a',\r\n                                  padding: '10px',\r\n                                  marginTop: '-50px',\r\n                                  overflowX: 'clip',\r\n                                  color: '#fff',\r\n                                  zIndex: 1,\r\n                                }}\r\n                              >\r\n                                <ul style={{ listStyle: 'none', padding: '0', color: '#fff', textAlign: 'center' }}>\r\n                                  {/* <button onClick={() => { setIsSecondModalOpen(true); setNavId(course.navId); }} className=\"btn btn-primary\">\r\n                                    Add\r\n                                  </button> */}\r\n                                  {subNavData.map((subNavItem) => {\r\n                                    // Dynamic route logic\r\n                                    const dynamicRoute = (() => {\r\n                                      switch (subNavItem.name) {\r\n                                        case \"add-courses\":\r\n                                          return \"/add-courses\";\r\n                                        case \"test1\":\r\n                                          return \"/test1\"; // Specify the route for \"test1\" \r\n                                        case \"Students\":\r\n                                          return \"/Students\"; // Specify the route for \"Students\"\r\n                                        case \"All Courses\":\r\n                                          return \"/All Courses\"; // Specify the route for \"Students\" \r\n                                        case \"Add Courses\":\r\n                                          return \"/Add Courses\"; // Specify the route for \"Students\" \r\n                                        case \"Enroll\":\r\n                                          return \"/Enroll\"; // Specify the route for \"Students\"  Controllers\r\n                                        case \"All Students\":\r\n                                          return \"/All Students\"; // Specify the route for \"Students\" \r\n                                        case \"Controllers\":\r\n                                          return \"/Controllers\"; // Specify the route for \"Students\" \r\n                                        default:\r\n                                          return `/courses/${subNavItem.name.toLowerCase().replace(/\\s+/g, '-')}`; // Default route mapping\r\n                                      }\r\n                                    })();\r\n\r\n                                    return (\r\n                                      <li key={subNavItem.subNavId}>\r\n                                        <Link\r\n                                          to={dynamicRoute} // Use dynamicRoute to navigate to different pages\r\n                                          style={{ color: '#fff', textDecoration: 'none' }} // Optional styling for Link\r\n                                        >\r\n                                          {subNavItem.name}\r\n                                        </Link>\r\n                                      </li>\r\n                                    );\r\n                                  })}\r\n                                </ul>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <p>No data available.</p>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n      {/* Second Modal */}\r\n\r\n      {/* Second Modal */}\r\n      {isSecondModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-button\" onClick={() => setIsSecondModalOpen(false)}>\r\n              &times;\r\n            </button>\r\n            <form onSubmit={handleSubmitss}>\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Banner Image Title 1</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* Modal for adding an image */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-button\" onClick={() => setIsModalOpen(false)}>\r\n              &times;\r\n            </button>\r\n            <form onSubmit={handleSubmits}>\r\n              <div className=\"col-lg-2 col-md-12 col-sm-12\">\r\n                <div className=\"add-choosen\">\r\n                  <div className=\"input-blocks\">\r\n                    <div className=\"image-upload\">\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"imageInput\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleImageChange}\r\n                        style={{ display: 'none' }}\r\n                        required\r\n                      />\r\n                      <label htmlFor=\"imageInput\" className=\"image-uploads\">\r\n                        <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                        <h4>Add Image</h4>\r\n                        {posterImage && (\r\n                          <img\r\n                            src={posterImage}\r\n                            alt=\"Preview\"\r\n                          />\r\n                        )}\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Banner Image Title 1</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)} // Update the name state\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </SidebarContext.Provider>\r\n\r\n  );\r\n};\r\n\r\nexport default SideNavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}