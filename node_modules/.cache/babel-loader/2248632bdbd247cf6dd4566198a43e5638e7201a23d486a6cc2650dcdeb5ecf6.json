{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhil.t.EIS\\\\Videos\\\\IIA_Final\\\\IIA_DASHBOARDS\\\\src\\\\Component\\\\ControllersTableData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = ({\n  users\n}) => {\n  _s();\n  const [data, setData] = useState([]); // Main navigation data\n  const [subNavData, setSubNavData] = useState({}); // Store sub-navigation data grouped by navId\n  const [loading, setLoading] = useState(true); // Loading state\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [posterImage, setPosterImage] = useState('');\n  const [imagePreview, setImagePreview] = useState(null);\n  const [image, setImage] = useState('');\n  const [name, setName] = useState('');\n  const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\n  const [apiData, setApiData] = useState([]);\n  const [navId, setNavId] = useState(1); // Initialize navId with a default value another data also \n  const navigate = useNavigate();\n  const [checkedItems, setCheckedItems] = useState({}); // State to track checked items\n\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  // Function to handle form submission for editing\n  // Function to handle form submission for editing data not \n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupNavId, setPopupNavId] = useState(null);\n  const [subNavId, setSubNavId] = useState(null);\n  const [selectedSubNavId, setSelectedSubNavId] = useState(null);\n  const [subName, setSubName] = useState('');\n  const [subPosterImage, setSubPosterImage] = useState('');\n  const [subPopupVisible, setSubPopupVisible] = useState(false);\n  const [itemData, setItemData] = useState(null); // New state for item data\n\n  const handleSubmitsssss = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${selectedSubNavId}`, {\n        name: name // Body with the new name\n      });\n      console.log('Edit response:', response.data); // Log response from the API\n      setIsPopupOpen(false); // Close the popup after successful edit\n      // Optionally, you can fetch the updated data again or update state directly\n    } catch (error) {\n      console.error('Error updating sub navigation data:', error);\n    }\n  };\n  const handleEdit = () => {\n    // Logic for editing goes here\n    console.log('Edit button clicked');\n  };\n  const handleSave = () => {\n    // Logic for saving goes here\n    console.log('Save button clicked');\n  };\n  const handleNameClicks = subNavId => {\n    console.log(\"Clicked SubNav ID:\", subNavId);\n    setSelectedSubNavId(subNavId);\n    setIsPopupOpen(true);\n  };\n  const fetchSubNavData = async subNavId => {\n    try {\n      const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/getbyidforview/${subNavId}`);\n      console.log(response.data); // Check the structure of the response\n      if (response.data) {\n        setItemData(response.data);\n        setName(response.data.name || ''); // Use empty string if name is undefined\n      }\n    } catch (error) {\n      console.error('Error fetching sub navigation data:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedSubNavId && isPopupOpen) {\n      fetchSubNavData(selectedSubNavId);\n    }\n  }, [selectedSubNavId, isPopupOpen]);\n  const handleSubNavSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission procedures of the ParentComponent.js,FeesCollections.js,EventManagement.js,CoursesTableData.js,AllWebinars.js code int the  \n    setLoading(true);\n    const editedData = {\n      subNavId,\n      name,\n      image: posterImage.split(',')[1] // Send image data without prefix\n    };\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${subNavId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editedData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Handle success (close popup, refresh data, etc.)\n      closeSubNavPopup(); // Close the subNav popup after submission\n      console.log('SubNav data updated successfully!');\n    } catch (error) {\n      console.error(\"Error updating subNav data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const closeSubNavPopup = () => {\n    setSubNavId(null);\n    setName('');\n    setPosterImage('');\n  };\n  const handleNameClick = navId => {\n    setPopupNavId(navId);\n    fetchUserData(navId); // Fetch data for this navId when the name is clicked\n  };\n  const closePopup = () => {\n    setPopupNavId(null); // Close the popup\n    setName(''); // Clear form data\n    setPosterImage(null); // Clear image preview\n  };\n  const fetchUserData = async navId => {\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${navId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const fetchedData = await response.json(); // Parse the JSON response\n\n      // Set the state with the fetched data\n      setName(fetchedData.name);\n\n      // Check if the image is not empty and prepend the base64 prefix\n      if (fetchedData.image) {\n        setPosterImage(`data:image/png;base64,${fetchedData.image}`); // Update according to the image format\n      } else {\n        setPosterImage(''); // Clear image state if no image\n      }\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n  const handleSubmitssss = async event => {\n    event.preventDefault(); // Prevent default form submission\n    setLoading(true);\n    const editedData = {\n      navId: popupNavId,\n      // Send the ID along with the data\n      name,\n      image: posterImage.split(',')[1] // Remove the prefix before sending\n    };\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${popupNavId}`, {\n        method: 'PUT',\n        // Use PUT for editing\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editedData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Optionally, handle success (e.g., close popup, refresh data, show message, etc.)\n      console.log('Data updated successfully!');\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //   const handleImageChangess = (e) => {\n  //     const file = e.target.files[0];\n  //     if (file) {\n  //       const reader = new FileReader();\n  //       reader.onloadend = () => {\n  //         setPosterImage(reader.result); // Preview the image\n  //       };\n  //       reader.readAsDataURL(file);\n  //     }\n  //   };\n\n  const handleSubmitsss = e => {\n    e.preventDefault();\n    // Submit form logic here (API call or update data)\n    console.log(\"Submitted data:\", {\n      navId: popupNavId,\n      name,\n      posterImage\n    });\n  };\n  // const handleUserNameClick = async (user) => {\n  //     try {\n  //         const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\n  //         setUserData(response.data); // Set the user data\n  //         setNavId(user.navId);\n  //         setIsEditModalOpen(true); // Open the edit modal\n  //     } catch (error) {\n  //         console.error(\"Error fetching user data:\", error);\n  //     }\n  // };\n\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Prepare the image as base64 (assuming image is handled as base64)\n      const cleanImage = editedImage ? editedImage.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '';\n      const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${selectedUser.navId}`, {\n        name: editedName,\n        // Send updated name\n        image: cleanImage // Send updated image (as base64)\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('User details updated successfully');\n        setIsEditModalOpen(false);\n        // Optionally, update the user details in the table without reloading\n        // e.g., by updating the state that stores users\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error updating user details:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Failed to update user details');\n    }\n  };\n  const handleEditButtonClick = async user => {\n    console.log('Editing user:', user); // Confirm this is being called\n    try {\n      const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\n      console.log('User data fetched:', response.data); // Log the response data\n      setUserData(response.data); // Assuming the response contains the user data\n      setNavId(user.navId);\n      setIsEditModalOpen(true); // Open the edit modal\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n    setUserData(null); // Reset userData on close\n  };\n  const handleSubmits = async event => {\n    event.preventDefault();\n    const cleanImage = image.replace(/^data:image\\/[a-zA-Z]+;base64,/, '');\n    const formData = {\n      name: name,\n      image: cleanImage\n    };\n    try {\n      const response = await axios.post('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/add', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Form submitted successfully:', response.data);\n      closeSubNavPopup();\n      alert('Data added successfully!');\n\n      // navigate('/login');\n    } catch (error) {\n      var _error$response2;\n      console.error('Error submitting form:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    }\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImage(reader.result);\n        setPosterImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  // Fetch initial data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/all');\n        console.log('API Response:', response.data); // Log response data\n        setData(response.data); // Set fetched data\n\n        // Fetch sub-navigation data for each navId\n        const initialSubNavData = {};\n        await Promise.all(response.data.map(async item => {\n          const subNavResponse = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${item.navId}`);\n          const subNavData = await subNavResponse.json();\n          initialSubNavData[item.navId] = subNavData; // Group data by navId\n        }));\n        setSubNavData(initialSubNavData); // Set grouped sub-navigation data\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // End loading state\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Form submission handler\n  const handleSubmitss = async e => {\n    e.preventDefault();\n\n    // Prepare the data to be sent to the API\n    const requestBody = {\n      navId,\n      // Use the navId from the selected course\n      name\n    };\n\n    // POST API call\n    try {\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit the form');\n      }\n      const data = await response.json();\n      console.log('Form submitted successfully:', data);\n\n      // Handle the success, close modal, or reset form\n      setIsSecondModalOpen(false);\n      setName('');\n    } catch (error) {\n      console.error('Error submitting the form:', error);\n    }\n  };\n  // Handle checkbox change for individual items\n  const handleCheckboxChange = subNavId => {\n    setCheckedItems(prev => ({\n      ...prev,\n      [subNavId]: !prev[subNavId] // Toggle the checked state\n    }));\n  };\n\n  // Handle header checkbox change to check/uncheck all corresponding subNav items\n  const handleHeaderCheckboxChange = navId => {\n    const subNavItems = subNavData[navId] || [];\n    const allChecked = subNavItems.every(item => !!checkedItems[item.subNavId]);\n\n    // Toggle checked state for all subNav items for the selected navId\n    const newCheckedItems = {\n      ...checkedItems\n    };\n    subNavItems.forEach(item => {\n      newCheckedItems[item.subNavId] = !allChecked; // Set to the opposite of current state\n    });\n    setCheckedItems(newCheckedItems);\n  };\n\n  // Function to delete a nav item by navId\n  const handleDelete = async navId => {\n    try {\n      // Replace with your API endpoint\n      await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/deletedata/${navId}`);\n\n      // Update local state to remove the deleted item\n      setData(prevData => prevData.filter(user => user.navId !== navId));\n      setSubNavData(prevSubNavData => {\n        const {\n          [navId]: _,\n          ...rest\n        } = prevSubNavData; // Remove subNavData for deleted navId\n        return rest;\n      });\n    } catch (error) {\n      console.error('Error deleting the item:', error);\n      // Handle error appropriately (e.g., show a notification)\n    }\n  };\n\n  // Function to delete a sub-navigation item by subNavId\n  const handleDeleteSubNav = async subNavId => {\n    try {\n      // Replace with your API endpoint\n      await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/deletesubsidenavbar/${subNavId}`);\n\n      // Update local state to remove the deleted item\n      setSubNavData(prevSubNavData => {\n        const updatedSubNavData = {\n          ...prevSubNavData\n        };\n        Object.keys(updatedSubNavData).forEach(navId => {\n          updatedSubNavData[navId] = updatedSubNavData[navId].filter(item => item.subNavId !== subNavId);\n        });\n        return updatedSubNavData;\n      });\n\n      // Optionally, you may want to remove the checked item from checkedItems\n      setCheckedItems(prev => {\n        const {\n          [subNavId]: _,\n          ...rest\n        } = prev; // Remove the checked state for deleted subNavId\n        return rest;\n      });\n    } catch (error) {\n      console.error('Error deleting the sub-navigation item:', error);\n      // Handle error appropriately (e.g., show a notification)\n    }\n  };\n\n  // State to track selected values of dropdowns\n  const [client, setClient] = useState('');\n  const [vendor, setVendor] = useState('');\n  const [employee, setEmployee] = useState('');\n  const [user, setUser] = useState('');\n\n  // Mock data for dropdowns\n  const clientOptions = [{\n    value: '_160_HR',\n    label: 'Client'\n  }, {\n    value: '_320_HR',\n    label: 'Vendor'\n  }];\n  const vendorOptions = [{\n    value: '_160_HR',\n    label: 'Employee'\n  }, {\n    value: '_320_HR',\n    label: 'Admin'\n  }];\n  const employeeOptions = [{\n    value: '_160_HR',\n    label: 'User'\n  }, {\n    value: '_320_HR',\n    label: 'Student'\n  }];\n  const userOptions = [{\n    value: '_160_HR',\n    label: 'Akhil'\n  }, {\n    value: '_320_HR',\n    label: 'Naresh'\n  }];\n\n  // Filter logic for dependent dropdowns (Example)\n  const filteredVendorOptions = vendorOptions.filter(option => client === '_160_HR' ? option.value !== '_320_HR' : option);\n  const filteredEmployeeOptions = employeeOptions.filter(option => vendor === '_160_HR' ? option.value !== '_320_HR' : option);\n  const filteredUserOptions = userOptions.filter(option => employee === '_160_HR' ? option.value !== '_320_HR' : option);\n  const [textFields, setTextFields] = useState(['']);\n  const [imageFields, setImageFields] = useState([null]);\n  const [videoFields, setVideoFields] = useState([null]);\n  const imageInputRef = useRef(null);\n  const videoInputRef = useRef(null);\n  const addField = type => {\n    if (type === 'text') {\n      setTextFields([...textFields, '']);\n    } else if (type === 'image') {\n      // Programmatically click the hidden file input for image\n      imageInputRef.current.click();\n    } else if (type === 'video') {\n      // Programmatically click the hidden file input for video\n      videoInputRef.current.click();\n    }\n  };\n  const handleFileChange = (type, event) => {\n    const file = event.target.files[0];\n    const fileURL = URL.createObjectURL(file);\n    if (type === 'image') {\n      setImageFields([...imageFields, fileURL]);\n    } else if (type === 'video') {\n      setVideoFields([...videoFields, fileURL]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '200px',\n      marginTop: '180px'\n    },\n    children: [\"   \", /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-1 col-md-6 col-sm-12\",\n          style: {\n            marginTop: '4px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(true),\n            className: \"btn btn-primary\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-6 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: client,\n              onChange: e => setClient(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Any\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 29\n              }, this), clientOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-6 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: vendor,\n              onChange: e => setVendor(e.target.value),\n              disabled: !client // Disable if client is not selected\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Any\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 29\n              }, this), filteredVendorOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-6 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: employee,\n              onChange: e => setEmployee(e.target.value),\n              disabled: !vendor // Disable if vendor is not selected\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Any\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 29\n              }, this), filteredEmployeeOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-6 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: user,\n              onChange: e => setUser(e.target.value),\n              disabled: !employee // Disable if employee is not selected\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Any\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 29\n              }, this), filteredUserOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        borderCollapse: 'collapse',\n        marginLeft: '27px',\n        marginTop: '70px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: data.map(user => {\n            var _subNavData$user$navI;\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #000',\n                padding: '8px',\n                backgroundColor: '#f2f2f2'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: (_subNavData$user$navI = subNavData[user.navId]) === null || _subNavData$user$navI === void 0 ? void 0 : _subNavData$user$navI.every(item => !!checkedItems[item.subNavId]),\n                onChange: () => handleHeaderCheckboxChange(user.navId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => handleNameClick(user.navId),\n                children: user.name\n              }, user.navId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setIsSecondModalOpen(true);\n                  setNavId(user.navId);\n                },\n                className: \"btn btn-primary\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(user.navId),\n                className: \"btn btn-danger\",\n                style: {\n                  marginLeft: '8px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"la la-trash-o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 33\n              }, this)]\n            }, user.navId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: data.map(user => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '8px'\n            },\n            children: subNavData[user.navId] && subNavData[user.navId].length > 0 ? subNavData[user.navId].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: !!checkedItems[item.subNavId],\n                onChange: () => handleCheckboxChange(item.subNavId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => handleNameClicks(item.subNavId),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteSubNav(item.subNavId),\n                className: \"btn btn-danger\",\n                style: {\n                  marginLeft: '8px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"la la-trash-o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 45\n              }, this)]\n            }, item.subNavId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"No data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 37\n            }, this)\n          }, user.navId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 13\n    }, this), isPopupOpen && itemData &&\n    /*#__PURE__*/\n    // Ensure itemData is defined before rendering\n    _jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsPopupOpen(false) // Close the popup when clicked\n          ,\n          style: {\n            position: 'absolute',\n            top: '10px',\n            right: '10px',\n            background: 'none',\n            border: 'none',\n            fontSize: '20px',\n            cursor: 'pointer',\n            marginTop: '-10px'\n          },\n          children: \"\\xD7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitsssss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name // Controlled input using name state\n              ,\n              onChange: e => setName(e.target.value) // Update name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 17\n    }, this), isEditModalOpen && userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: closeEditModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userData.name || '' // Default to empty string if name is undefined\n              ,\n              onChange: e => setUserData({\n                ...userData,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userData.imageUrl || '' // Default to empty string if imageUrl is undefined\n              ,\n              onChange: e => setUserData({\n                ...userData,\n                imageUrl: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 33\n            }, this), userData.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: userData.imageUrl,\n              alt: \"User\",\n              style: {\n                width: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeEditModal,\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 17\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmits,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-12 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-choosen\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-blocks\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    id: \"imageInput\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange,\n                    style: {\n                      display: 'none'\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 772,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"imageInput\",\n                    className: \"image-uploads\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      \"data-feather\": \"plus-circle\",\n                      className: \"plus-down-add me-0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 781,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Add Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 49\n                    }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: posterImage,\n                      alt: \"Preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 784,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 780,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 771,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value) // Update the name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 17\n    }, this), isSecondModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsSecondModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitss,\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"form-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Text\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('text'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 826,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('image'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 832,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 829,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Upload Video\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('video'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 838,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 837,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 835,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: textFields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      value: field,\n                      onChange: e => setName(e.target.value),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 848,\n                      columnNumber: 35\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 847,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [imageFields.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-preview\",\n                    children: image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: image,\n                      alt: \"Uploaded\",\n                      className: \"file-image-preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 862,\n                      columnNumber: 39\n                    }, this) : null\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 860,\n                    columnNumber: 31\n                  }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/*\",\n                    ref: imageInputRef,\n                    className: \"file-upload\",\n                    style: {\n                      display: 'none'\n                    },\n                    onChange: e => handleFileChange('image', e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [videoFields.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-preview\",\n                    children: video ? /*#__PURE__*/_jsxDEV(\"video\", {\n                      controls: true,\n                      src: video,\n                      className: \"file-video-preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 879,\n                      columnNumber: 39\n                    }, this) : null\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 877,\n                    columnNumber: 31\n                  }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"video/*\",\n                    ref: videoInputRef,\n                    className: \"file-upload\",\n                    style: {\n                      display: 'none'\n                    },\n                    onChange: e => handleFileChange('video', e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 883,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 3\n    }, this), popupNavId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closePopup,\n          className: \"close-button\",\n          style: {\n            float: 'right',\n            cursor: 'pointer'\n          },\n          children: \"\\xD7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitssss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-12 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-choosen\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-blocks\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-upload\",\n                  style: {\n                    marginRight: '100px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    id: \"imageInput\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange,\n                    style: {\n                      display: 'none'\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 925,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"imageInput\",\n                    className: \"image-uploads\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      \"data-feather\": \"plus-circle\",\n                      className: \"plus-down-add me-0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 934,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Add Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 935,\n                      columnNumber: 49\n                    }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: posterImage,\n                      alt: \"Preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 937,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 933,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value) // Update the name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 17\n    }, this), subNavId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeSubNavPopup,\n          className: \"close-button\",\n          style: {\n            float: 'right',\n            cursor: 'pointer'\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit SubNavId: \", subNavId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubNavSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"imageInput\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              style: {\n                display: 'none'\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"imageInput\",\n              className: \"image-uploads\",\n              style: {\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                \"data-feather\": \"plus-circle\",\n                className: \"plus-down-add me-0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Add Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 37\n              }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: posterImage,\n                alt: \"Preview\",\n                style: {\n                  maxWidth: '100px',\n                  maxHeight: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: loading,\n              children: loading ? 'Submitting...' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                .popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.popup-content {\n  text-align: center;\n}\n\nbutton {\n  margin-top: 10px;\n}\n\n  /* Modal Styles */\n  .modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    z-index: 1000;\n    width: 1000px; /* Adjust as needed */\n  }\n\n  .modal-content {\n    display: flex;\n    max-width:1000px;\n    flex-direction: column;\n  }\n\n  .form-group {\n    margin-bottom: 15px;\n  }\n\n  .form-control {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ced4da;\n    border-radius: 4px;\n  }\n\n  .form-label {\n    margin-bottom: 5px;\n    font-weight: bold;\n  }\n\n  .btn {\n    padding: 8px 12px;\n    border-radius: 4px;\n    margin-right: 10px;\n    cursor: pointer;\n  }\n\n  .btn-primary {\n    background-color: #007bff;\n    color: white;\n    border: none;\n  }\n\n  .btn-primary:hover {\n    background-color: #0056b3;\n  }\n\n  .btn-secondary {\n    background-color: #6c757d;\n    color: white;\n    border: none;\n  }\n\n  .btn-secondary:hover {\n    background-color: #5a6268;\n  }\n\n  /* Optional: Backdrop for modal */\n  .modal-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 999;\n  }\n\n  /* Table Header Styles */\n  th {\n    text-align: left;\n    border: 1px solid #000;\n    padding: 8px;\n    background-color: #f2f2f2;\n  }\n\n  th span {\n    cursor: pointer;\n \n  }\n\n  th span:hover {\n    color: darkblue;\n  }\n\n  th .btn {\n    margin-left: 8px;\n  }\n`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 9\n  }, this);\n};\n_s(YourComponent, \"LhuaaDq73VR7ENDLM4JS8oqbJaw=\", false, function () {\n  return [useNavigate];\n});\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Link","useNavigate","jsxDEV","_jsxDEV","YourComponent","users","_s","data","setData","subNavData","setSubNavData","loading","setLoading","isModalOpen","setIsModalOpen","posterImage","setPosterImage","imagePreview","setImagePreview","image","setImage","name","setName","isSecondModalOpen","setIsSecondModalOpen","apiData","setApiData","navId","setNavId","navigate","checkedItems","setCheckedItems","isEditModalOpen","setIsEditModalOpen","selectedUser","setSelectedUser","userData","setUserData","editedName","setEditedName","editedImage","setEditedImage","isPopupOpen","setIsPopupOpen","popupNavId","setPopupNavId","subNavId","setSubNavId","selectedSubNavId","setSelectedSubNavId","subName","setSubName","subPosterImage","setSubPosterImage","subPopupVisible","setSubPopupVisible","itemData","setItemData","handleSubmitsssss","e","preventDefault","response","put","console","log","error","handleEdit","handleSave","handleNameClicks","fetchSubNavData","get","handleSubNavSubmit","event","editedData","split","fetch","method","headers","body","JSON","stringify","ok","Error","status","closeSubNavPopup","handleNameClick","fetchUserData","closePopup","fetchedData","json","handleSubmitssss","handleSubmitsss","handleEditSubmit","cleanImage","replace","alert","_error$response","message","handleEditButtonClick","user","closeEditModal","handleSubmits","formData","post","_error$response2","handleImageChange","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","fetchData","initialSubNavData","Promise","all","map","item","subNavResponse","handleSubmitss","requestBody","handleCheckboxChange","prev","handleHeaderCheckboxChange","subNavItems","allChecked","every","newCheckedItems","forEach","handleDelete","delete","prevData","filter","prevSubNavData","_","rest","handleDeleteSubNav","updatedSubNavData","Object","keys","client","setClient","vendor","setVendor","employee","setEmployee","setUser","clientOptions","value","label","vendorOptions","employeeOptions","userOptions","filteredVendorOptions","option","filteredEmployeeOptions","filteredUserOptions","textFields","setTextFields","imageFields","setImageFields","videoFields","setVideoFields","imageInputRef","videoInputRef","addField","type","current","click","handleFileChange","fileURL","URL","createObjectURL","style","marginLeft","marginTop","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","borderCollapse","_subNavData$user$navI","border","padding","backgroundColor","checked","cursor","length","display","alignItems","position","top","right","background","fontSize","onSubmit","required","imageUrl","src","alt","width","id","accept","htmlFor","field","index","ref","video","controls","float","marginRight","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["C:/Users/Akhil.t.EIS/Videos/IIA_Final/IIA_DASHBOARDS/src/Component/ControllersTableData.js"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nconst YourComponent = ({ users }) => {\r\n    const [data, setData] = useState([]); // Main navigation data\r\n    const [subNavData, setSubNavData] = useState({}); // Store sub-navigation data grouped by navId\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [posterImage, setPosterImage] = useState('');\r\n    const [imagePreview, setImagePreview] = useState(null);\r\n    const [image, setImage] = useState('');\r\n    const [name, setName] = useState('');\r\n\r\n    const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\r\n    const [apiData, setApiData] = useState([]);\r\n    const [navId, setNavId] = useState(1); // Initialize navId with a default value another data also \r\n    const navigate = useNavigate();\r\n    const [checkedItems, setCheckedItems] = useState({}); // State to track checked items\r\n\r\n\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [userData, setUserData] = useState(null);\r\n    const [editedName, setEditedName] = useState('');\r\n    const [editedImage, setEditedImage] = useState('');\r\n    // Function to handle form submission for editing\r\n    // Function to handle form submission for editing data not \r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const [popupNavId, setPopupNavId] = useState(null);\r\n    const [subNavId, setSubNavId] = useState(null);\r\n    const [selectedSubNavId, setSelectedSubNavId] = useState(null);\r\n    const [subName, setSubName] = useState('');\r\n    const [subPosterImage, setSubPosterImage] = useState('');\r\n    const [subPopupVisible, setSubPopupVisible] = useState(false);\r\n    const [itemData, setItemData] = useState(null); // New state for item data\r\n\r\n\r\n    const handleSubmitsssss = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${selectedSubNavId}`, {\r\n                name: name // Body with the new name\r\n            });\r\n            console.log('Edit response:', response.data); // Log response from the API\r\n            setIsPopupOpen(false); // Close the popup after successful edit\r\n            // Optionally, you can fetch the updated data again or update state directly\r\n        } catch (error) {\r\n            console.error('Error updating sub navigation data:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleEdit = () => {\r\n        // Logic for editing goes here\r\n        console.log('Edit button clicked');\r\n    };\r\n\r\n    const handleSave = () => {\r\n        // Logic for saving goes here\r\n        console.log('Save button clicked');\r\n    };\r\n\r\n\r\n \r\n    const handleNameClicks = (subNavId) => {\r\n        console.log(\"Clicked SubNav ID:\", subNavId);\r\n        setSelectedSubNavId(subNavId);\r\n        setIsPopupOpen(true);\r\n    };\r\n\r\n    const fetchSubNavData = async (subNavId) => {\r\n        try {\r\n            const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/getbyidforview/${subNavId}`);\r\n            console.log(response.data); // Check the structure of the response\r\n            if (response.data) {\r\n                setItemData(response.data);\r\n                setName(response.data.name || ''); // Use empty string if name is undefined\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching sub navigation data:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        if (selectedSubNavId && isPopupOpen) {\r\n            fetchSubNavData(selectedSubNavId);\r\n        }\r\n    }, [selectedSubNavId, isPopupOpen]);\r\n\r\n    const handleSubNavSubmit = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission procedures of the ParentComponent.js,FeesCollections.js,EventManagement.js,CoursesTableData.js,AllWebinars.js code int the  \r\n        setLoading(true);\r\n\r\n        const editedData = {\r\n            subNavId,\r\n            name,\r\n            image: posterImage.split(',')[1] // Send image data without prefix\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${subNavId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editedData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            // Handle success (close popup, refresh data, etc.)\r\n            closeSubNavPopup(); // Close the subNav popup after submission\r\n            console.log('SubNav data updated successfully!');\r\n          \r\n        } catch (error) {\r\n            console.error(\"Error updating subNav data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const closeSubNavPopup = () => {\r\n        setSubNavId(null);\r\n        setName('');\r\n        setPosterImage('');\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleNameClick = (navId) => {\r\n        setPopupNavId(navId);\r\n        fetchUserData(navId); // Fetch data for this navId when the name is clicked\r\n    };\r\n\r\n    const closePopup = () => {\r\n        setPopupNavId(null); // Close the popup\r\n        setName(''); // Clear form data\r\n        setPosterImage(null); // Clear image preview\r\n    };\r\n\r\n    const fetchUserData = async (navId) => {\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${navId}`);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const fetchedData = await response.json(); // Parse the JSON response\r\n\r\n            // Set the state with the fetched data\r\n            setName(fetchedData.name);\r\n\r\n            // Check if the image is not empty and prepend the base64 prefix\r\n            if (fetchedData.image) {\r\n                setPosterImage(`data:image/png;base64,${fetchedData.image}`); // Update according to the image format\r\n            } else {\r\n                setPosterImage(''); // Clear image state if no image\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching user data:\", error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmitssss = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission\r\n        setLoading(true);\r\n\r\n        const editedData = {\r\n            navId: popupNavId, // Send the ID along with the data\r\n            name,\r\n            image: posterImage.split(',')[1] // Remove the prefix before sending\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${popupNavId}`, {\r\n                method: 'PUT', // Use PUT for editing\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editedData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            // Optionally, handle success (e.g., close popup, refresh data, show message, etc.)\r\n            console.log('Data updated successfully!');\r\n        } catch (error) {\r\n            console.error(\"Error updating data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    //   const handleImageChangess = (e) => {\r\n    //     const file = e.target.files[0];\r\n    //     if (file) {\r\n    //       const reader = new FileReader();\r\n    //       reader.onloadend = () => {\r\n    //         setPosterImage(reader.result); // Preview the image\r\n    //       };\r\n    //       reader.readAsDataURL(file);\r\n    //     }\r\n    //   };\r\n\r\n    const handleSubmitsss = (e) => {\r\n        e.preventDefault();\r\n        // Submit form logic here (API call or update data)\r\n        console.log(\"Submitted data:\", { navId: popupNavId, name, posterImage });\r\n    };\r\n    // const handleUserNameClick = async (user) => {\r\n    //     try {\r\n    //         const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\r\n    //         setUserData(response.data); // Set the user data\r\n    //         setNavId(user.navId);\r\n    //         setIsEditModalOpen(true); // Open the edit modal\r\n    //     } catch (error) {\r\n    //         console.error(\"Error fetching user data:\", error);\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Prepare the image as base64 (assuming image is handled as base64)\r\n            const cleanImage = editedImage ? editedImage.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '';\r\n\r\n            const response = await axios.put(\r\n                `http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${selectedUser.navId}`,\r\n                {\r\n                    name: editedName, // Send updated name\r\n                    image: cleanImage, // Send updated image (as base64)\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                alert('User details updated successfully');\r\n                setIsEditModalOpen(false);\r\n                // Optionally, update the user details in the table without reloading\r\n                // e.g., by updating the state that stores users\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating user details:', error.response?.data || error.message);\r\n            alert('Failed to update user details');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleEditButtonClick = async (user) => {\r\n        console.log('Editing user:', user); // Confirm this is being called\r\n        try {\r\n            const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\r\n            console.log('User data fetched:', response.data); // Log the response data\r\n            setUserData(response.data); // Assuming the response contains the user data\r\n            setNavId(user.navId);\r\n            setIsEditModalOpen(true); // Open the edit modal\r\n        } catch (error) {\r\n            console.error(\"Error fetching user data:\", error);\r\n        }\r\n    };\r\n\r\n    const closeEditModal = () => {\r\n        setIsEditModalOpen(false);\r\n        setUserData(null); // Reset userData on close\r\n    };\r\n\r\n\r\n    const handleSubmits = async (event) => {\r\n        event.preventDefault();\r\n        const cleanImage = image.replace(/^data:image\\/[a-zA-Z]+;base64,/, '');\r\n        const formData = {\r\n            name: name,\r\n            image: cleanImage,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                'http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/add',\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n            console.log('Form submitted successfully:', response.data);\r\n            closeSubNavPopup();\r\n            alert('Data added successfully!');\r\n          \r\n            // navigate('/login');\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error.response?.data || error.message);\r\n        }\r\n    };\r\n\r\n    const handleImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setImage(reader.result);\r\n                setPosterImage(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n    // Fetch initial data\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/all');\r\n                console.log('API Response:', response.data); // Log response data\r\n                setData(response.data); // Set fetched data\r\n\r\n                // Fetch sub-navigation data for each navId\r\n                const initialSubNavData = {};\r\n                await Promise.all(response.data.map(async (item) => {\r\n                    const subNavResponse = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${item.navId}`);\r\n                    const subNavData = await subNavResponse.json();\r\n                    initialSubNavData[item.navId] = subNavData; // Group data by navId\r\n                }));\r\n\r\n                setSubNavData(initialSubNavData); // Set grouped sub-navigation data\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setLoading(false); // End loading state\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Form submission handler\r\n    const handleSubmitss = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Prepare the data to be sent to the API\r\n        const requestBody = {\r\n            navId, // Use the navId from the selected course\r\n            name,\r\n        };\r\n\r\n        // POST API call\r\n        try {\r\n            const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to submit the form');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('Form submitted successfully:', data);\r\n\r\n            // Handle the success, close modal, or reset form\r\n            setIsSecondModalOpen(false);\r\n            setName('');\r\n        } catch (error) {\r\n            console.error('Error submitting the form:', error);\r\n        }\r\n    };\r\n    // Handle checkbox change for individual items\r\n    const handleCheckboxChange = (subNavId) => {\r\n        setCheckedItems((prev) => ({\r\n            ...prev,\r\n            [subNavId]: !prev[subNavId], // Toggle the checked state\r\n        }));\r\n    };\r\n\r\n    // Handle header checkbox change to check/uncheck all corresponding subNav items\r\n    const handleHeaderCheckboxChange = (navId) => {\r\n        const subNavItems = subNavData[navId] || [];\r\n        const allChecked = subNavItems.every(item => !!checkedItems[item.subNavId]);\r\n\r\n        // Toggle checked state for all subNav items for the selected navId\r\n        const newCheckedItems = { ...checkedItems };\r\n        subNavItems.forEach(item => {\r\n            newCheckedItems[item.subNavId] = !allChecked; // Set to the opposite of current state\r\n        });\r\n\r\n        setCheckedItems(newCheckedItems);\r\n    };\r\n\r\n    // Function to delete a nav item by navId\r\n    const handleDelete = async (navId) => {\r\n        try {\r\n            // Replace with your API endpoint\r\n            await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/deletedata/${navId}`);\r\n\r\n            // Update local state to remove the deleted item\r\n            setData(prevData => prevData.filter(user => user.navId !== navId));\r\n            setSubNavData(prevSubNavData => {\r\n                const { [navId]: _, ...rest } = prevSubNavData; // Remove subNavData for deleted navId\r\n                return rest;\r\n            });\r\n        } catch (error) {\r\n            console.error('Error deleting the item:', error);\r\n            // Handle error appropriately (e.g., show a notification)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // Function to delete a sub-navigation item by subNavId\r\n    const handleDeleteSubNav = async (subNavId) => {\r\n        try {\r\n            // Replace with your API endpoint\r\n            await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/deletesubsidenavbar/${subNavId}`);\r\n\r\n            // Update local state to remove the deleted item\r\n            setSubNavData(prevSubNavData => {\r\n                const updatedSubNavData = { ...prevSubNavData };\r\n                Object.keys(updatedSubNavData).forEach(navId => {\r\n                    updatedSubNavData[navId] = updatedSubNavData[navId].filter(item => item.subNavId !== subNavId);\r\n                });\r\n                return updatedSubNavData;\r\n            });\r\n\r\n            // Optionally, you may want to remove the checked item from checkedItems\r\n            setCheckedItems(prev => {\r\n                const { [subNavId]: _, ...rest } = prev; // Remove the checked state for deleted subNavId\r\n                return rest;\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error deleting the sub-navigation item:', error);\r\n            // Handle error appropriately (e.g., show a notification)\r\n        }\r\n    };\r\n\r\n\r\n    // State to track selected values of dropdowns\r\n    const [client, setClient] = useState('');\r\n    const [vendor, setVendor] = useState('');\r\n    const [employee, setEmployee] = useState('');\r\n    const [user, setUser] = useState('');\r\n\r\n    // Mock data for dropdowns\r\n    const clientOptions = [\r\n        { value: '_160_HR', label: 'Client' },\r\n        { value: '_320_HR', label: 'Vendor' },\r\n    ];\r\n\r\n    const vendorOptions = [\r\n        { value: '_160_HR', label: 'Employee' },\r\n        { value: '_320_HR', label: 'Admin' },\r\n    ];\r\n\r\n    const employeeOptions = [\r\n        { value: '_160_HR', label: 'User' },\r\n        { value: '_320_HR', label: 'Student' },\r\n    ];\r\n\r\n    const userOptions = [\r\n        { value: '_160_HR', label: 'Akhil' },\r\n        { value: '_320_HR', label: 'Naresh' },\r\n    ];\r\n\r\n    // Filter logic for dependent dropdowns (Example)\r\n    const filteredVendorOptions = vendorOptions.filter((option) =>\r\n        client === '_160_HR' ? option.value !== '_320_HR' : option\r\n    );\r\n\r\n    const filteredEmployeeOptions = employeeOptions.filter((option) =>\r\n        vendor === '_160_HR' ? option.value !== '_320_HR' : option\r\n    );\r\n\r\n    const filteredUserOptions = userOptions.filter((option) =>\r\n        employee === '_160_HR' ? option.value !== '_320_HR' : option\r\n    );\r\n\r\n\r\n    const [textFields, setTextFields] = useState(['']);\r\n    const [imageFields, setImageFields] = useState([null]);\r\n    const [videoFields, setVideoFields] = useState([null]);\r\n\r\n    const imageInputRef = useRef(null);\r\n    const videoInputRef = useRef(null);\r\n\r\n    const addField = (type) => {\r\n        if (type === 'text') {\r\n            setTextFields([...textFields, '']);\r\n        } else if (type === 'image') {\r\n            // Programmatically click the hidden file input for image\r\n            imageInputRef.current.click();\r\n        } else if (type === 'video') {\r\n            // Programmatically click the hidden file input for video\r\n            videoInputRef.current.click();\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (type, event) => {\r\n        const file = event.target.files[0];\r\n        const fileURL = URL.createObjectURL(file);\r\n\r\n        if (type === 'image') {\r\n            setImageFields([...imageFields, fileURL]);\r\n        } else if (type === 'video') {\r\n            setVideoFields([...videoFields, fileURL]);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div style={{ marginLeft: '200px', marginTop: '180px' }}>   {/* Modal for adding an image fething data not easy task to calculating the things as*/}\r\n            {/* <h2 className=\"d-flex \" style={{ marginLeft: '320px' }}>CONTROLLERS</h2> */}\r\n            {/* <div className=\"d-flex \" style={{ marginRight: '620px', marginTop: '-60px', marginBottom: '36px' }}>\r\n                <button onClick={() => setIsModalOpen(true)} className=\"btn btn-primary\">\r\n                    Add\r\n                </button>\r\n            </div> */}\r\n               <nav className=\"navbar1\">\r\n            <div className=\"row\" style={{ marginTop: '0px' }}>\r\n                <div className=\"col-lg-1 col-md-6 col-sm-12\" style={{ marginTop: '4px' }}>\r\n                    <button onClick={() => setIsModalOpen(true)} className=\"btn btn-primary\">\r\n                        Add\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Client Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={client}\r\n                            onChange={(e) => setClient(e.target.value)}\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {clientOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Vendor Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={vendor}\r\n                            onChange={(e) => setVendor(e.target.value)}\r\n                            disabled={!client} // Disable if client is not selected\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {filteredVendorOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Employee Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={employee}\r\n                            onChange={(e) => setEmployee(e.target.value)}\r\n                            disabled={!vendor} // Disable if vendor is not selected\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {filteredEmployeeOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* User Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\">\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={user}\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            disabled={!employee} // Disable if employee is not selected\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {filteredUserOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </nav>\r\n\r\n\r\n            <table style={{ borderCollapse: 'collapse', marginLeft: '27px', marginTop: '70px' }}>\r\n                <thead>\r\n                    <tr>\r\n                        {data.map((user) => (\r\n                            <th\r\n                                key={user.navId}\r\n                                style={{ border: '1px solid #000', padding: '8px', backgroundColor: '#f2f2f2' }}\r\n                            >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={subNavData[user.navId]?.every(item => !!checkedItems[item.subNavId])}\r\n                                    onChange={() => handleHeaderCheckboxChange(user.navId)}\r\n                                />\r\n                                <span\r\n                                    key={user.navId}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    onClick={() => handleNameClick(user.navId)}\r\n                                >\r\n                                    {user.name}\r\n                                </span>\r\n                                <button onClick={() => { setIsSecondModalOpen(true); setNavId(user.navId); }} className=\"btn btn-primary\">\r\n                                    Add\r\n                                </button>\r\n                                <button onClick={() => handleDelete(user.navId)} className=\"btn btn-danger\" style={{ marginLeft: '8px' }}>\r\n                                    <i className=\"la la-trash-o\"></i>\r\n                                </button>\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {data.map((user) => (\r\n                            <td key={user.navId} style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                                {subNavData[user.navId] && subNavData[user.navId].length > 0 ? (\r\n                                    subNavData[user.navId].map((item) => (\r\n                                        <div key={item.subNavId} style={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={!!checkedItems[item.subNavId]}\r\n                                                onChange={() => handleCheckboxChange(item.subNavId)}\r\n                                            />\r\n                                            <span onClick={() => handleNameClicks(item.subNavId)} style={{ cursor: 'pointer' }}>\r\n                                                {item.name}\r\n                                            </span>\r\n                                            <button onClick={() => handleDeleteSubNav(item.subNavId)} className=\"btn btn-danger\" style={{ marginLeft: '8px' }}>\r\n                                                <i className=\"la la-trash-o\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    ))\r\n                                ) : (\r\n                                    <span>No data available</span>\r\n                                )}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            {isPopupOpen && itemData && ( // Ensure itemData is defined before rendering\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        {/* <h2>Edit Details for {selectedSubNavId}</h2> */}\r\n                        {/* Close button */}\r\n                        <button\r\n                            className=\"close-button\"\r\n                            onClick={() => setIsPopupOpen(false)} // Close the popup when clicked\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: '10px',\r\n                                right: '10px',\r\n                                background: 'none',\r\n                                border: 'none',\r\n                                fontSize: '20px',\r\n                                cursor: 'pointer',\r\n                                marginTop:'-10px'\r\n                            }}\r\n                        >\r\n                            &times; {/* This represents the \"X\" symbol */}\r\n                        </button>\r\n                        <form onSubmit={handleSubmitsssss}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name} // Controlled input using name state\r\n                                    onChange={(e) => setName(e.target.value)} // Update name state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isEditModalOpen && userData && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={closeEditModal}>&times;</span>\r\n                        {/* <h2>Edit User</h2> */}\r\n                        <form>\r\n                            <div>\r\n                                <label>Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={userData.name || ''} // Default to empty string if name is undefined\r\n                                    onChange={(e) => setUserData({ ...userData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Image:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={userData.imageUrl || ''} // Default to empty string if imageUrl is undefined\r\n                                    onChange={(e) => setUserData({ ...userData, imageUrl: e.target.value })}\r\n                                />\r\n                                {userData.imageUrl && <img src={userData.imageUrl} alt=\"User\" style={{ width: '100px' }} />}\r\n                            </div>\r\n                            <button type=\"button\" onClick={closeEditModal} className=\"btn btn-primary\">Save</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isModalOpen && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <button className=\"close-button\" onClick={() => setIsModalOpen(false)}>\r\n                            &times;\r\n                        </button>\r\n                        <form onSubmit={handleSubmits}>\r\n                            <div className=\"col-lg-2 col-md-12 col-sm-12\">\r\n                                <div className=\"add-choosen\">\r\n                                    <div className=\"input-blocks\">\r\n                                        <div className=\"image-upload\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                id=\"imageInput\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={handleImageChange}\r\n                                                style={{ display: 'none' }}\r\n                                                required\r\n                                            />\r\n                                            <label htmlFor=\"imageInput\" className=\"image-uploads\">\r\n                                                <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                                                <h4>Add Image</h4>\r\n                                                {posterImage && (\r\n                                                    <img\r\n                                                        src={posterImage}\r\n                                                        alt=\"Preview\"\r\n                                                    />\r\n                                                )}\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)} // Update the name state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n{isSecondModalOpen && (\r\n  <div className=\"modal-overlay\">\r\n  <div className=\"modal-content\">\r\n      <button className=\"close-button\" onClick={() => setIsSecondModalOpen(false)}>\r\n          &times;\r\n      </button>\r\n      <form onSubmit={handleSubmitss} className=\"modal-form\">\r\n          <table className=\"form-table\">\r\n              <thead>\r\n                  <tr>\r\n                      <th>\r\n                          Text\r\n                          <button type=\"button\" className=\"add-icon\" onClick={() => addField('text')}>\r\n                              <i className=\"fas fa-plus\"></i>\r\n                          </button>\r\n                      </th>\r\n                      <th>\r\n                          Upload Image\r\n                          <button type=\"button\" className=\"add-icon\" onClick={() => addField('image')}>\r\n                              <i className=\"fas fa-plus\"></i>\r\n                          </button>\r\n                      </th>\r\n                      <th>\r\n                          Upload Video\r\n                          <button type=\"button\" className=\"add-icon\" onClick={() => addField('video')}>\r\n                              <i className=\"fas fa-plus\"></i>\r\n                          </button>\r\n                      </th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr>\r\n                      <td>\r\n                          {textFields.map((field, index) => (\r\n                              <div className=\"input-group\" key={index}>\r\n                                  <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control\"\r\n                                      value={field}\r\n                                      onChange={(e) => setName(e.target.value)}\r\n                                      required\r\n                                  />\r\n                              </div>\r\n                          ))}\r\n                      </td>\r\n                      <td>\r\n                          {imageFields.map((image, index) => (\r\n                              <div key={index} className=\"file-preview\">\r\n                                  {image ? (\r\n                                      <img src={image} alt=\"Uploaded\" className=\"file-image-preview\" />\r\n                                  ) : null}\r\n                              </div>\r\n                          ))}\r\n                          <input\r\n                              type=\"file\"\r\n                              accept=\"image/*\"\r\n                              ref={imageInputRef}\r\n                              className=\"file-upload\"\r\n                              style={{ display: 'none' }}\r\n                              onChange={(e) => handleFileChange('image', e)}\r\n                          />\r\n                      </td>\r\n                      <td>\r\n                          {videoFields.map((video, index) => (\r\n                              <div key={index} className=\"file-preview\">\r\n                                  {video ? (\r\n                                      <video controls src={video} className=\"file-video-preview\" />\r\n                                  ) : null}\r\n                              </div>\r\n                          ))}\r\n                          <input\r\n                              type=\"file\"\r\n                              accept=\"video/*\"\r\n                              ref={videoInputRef}\r\n                              className=\"file-upload\"\r\n                              style={{ display: 'none' }}\r\n                              onChange={(e) => handleFileChange('video', e)}\r\n                          />\r\n                      </td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n          <div className=\"button-group\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={handleEdit}>\r\n                            Edit\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-success\" onClick={handleSave}>\r\n                            Save\r\n                        </button>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n      </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n)}\r\n\r\n            {popupNavId && (\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        <button onClick={closePopup} className=\"close-button\" style={{ float: 'right', cursor: 'pointer' }}>\r\n                            &times; {/* X symbol */}\r\n                        </button>\r\n                        {/* <h2>Details for NavId: {popupNavId}</h2> */}\r\n                        <form onSubmit={handleSubmitssss}>\r\n                            <div className=\"col-lg-2 col-md-12 col-sm-12\">\r\n                                <div className=\"add-choosen\">\r\n                                    <div className=\"input-blocks\">\r\n                                        <div className=\"image-upload\" style={{ marginRight: '100px' }}>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                id=\"imageInput\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={handleImageChange}\r\n                                                style={{ display: 'none' }}\r\n                                                required\r\n                                            />\r\n                                            <label htmlFor=\"imageInput\" className=\"image-uploads\">\r\n                                                <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                                                <h4>Add Image</h4>\r\n                                                {posterImage && (\r\n                                                    <img\r\n                                                        src={posterImage}\r\n                                                        alt=\"Preview\"\r\n                                                    />\r\n                                                )}\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)} // Update the name state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {/* SubNav Popup */}\r\n            {subNavId && (\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        <button onClick={closeSubNavPopup} className=\"close-button\" style={{ float: 'right', cursor: 'pointer' }}>\r\n                            &times;\r\n                        </button>\r\n                        <h2>Edit SubNavId: {subNavId}</h2>\r\n                        <form onSubmit={handleSubNavSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Image</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"imageInput\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleImageChange}\r\n                                    style={{ display: 'none' }}\r\n                                    required\r\n                                />\r\n                                <label htmlFor=\"imageInput\" className=\"image-uploads\" style={{ cursor: 'pointer' }}>\r\n                                    <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                                    <h4>Add Image</h4>\r\n                                    {posterImage && (\r\n                                        <img src={posterImage} alt=\"Preview\" style={{ maxWidth: '100px', maxHeight: '100px' }} />\r\n                                    )}\r\n                                </label>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                                    {loading ? 'Submitting...' : 'Submit'}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <style>\r\n                {`\r\n                .popup {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.popup-content {\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  margin-top: 10px;\r\n}\r\n\r\n  /* Modal Styles */\r\n  .modal {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    z-index: 1000;\r\n    width: 1000px; /* Adjust as needed */\r\n  }\r\n\r\n  .modal-content {\r\n    display: flex;\r\n    max-width:1000px;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .form-control {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .form-label {\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .btn {\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn-primary {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n  }\r\n\r\n  .btn-primary:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  .btn-secondary {\r\n    background-color: #6c757d;\r\n    color: white;\r\n    border: none;\r\n  }\r\n\r\n  .btn-secondary:hover {\r\n    background-color: #5a6268;\r\n  }\r\n\r\n  /* Optional: Backdrop for modal */\r\n  .modal-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 999;\r\n  }\r\n\r\n  /* Table Header Styles */\r\n  th {\r\n    text-align: left;\r\n    border: 1px solid #000;\r\n    padding: 8px;\r\n    background-color: #f2f2f2;\r\n  }\r\n\r\n  th span {\r\n    cursor: pointer;\r\n \r\n  }\r\n\r\n  th span:hover {\r\n    color: darkblue;\r\n  }\r\n\r\n  th .btn {\r\n    margin-left: 8px;\r\n  }\r\n`}\r\n            </style>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YourComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}