{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhil.t.EIS\\\\Videos\\\\IIA_Final\\\\IIA_DASHBOARDS\\\\src\\\\Component\\\\OnBoarding.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useLocation } from 'react-router-dom';\nconst [directoryNavId, setDirectoryNavId] = useState(null);\nimport { CloudUpload, CloudDownload, CheckCircleOutline, RemoveRedEye, Edit } from '@mui/icons-material';\nimport { Card, CardHeader, CardContent, CardActions, Button, Checkbox, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, TextField, IconButton } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OnBoarding = () => {\n  _s();\n  const [subNavData, setSubNavData] = useState([]); // State to hold sub-navigation data\n  const [loading, setLoading] = useState(true); // State to manage loading status\n  const [error, setError] = useState(null); // State for error handling\n  const [name, setName] = useState('');\n  const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\n  const [user, setUser] = useState('');\n  const location = useLocation();\n  const [filter, setFilter] = useState('');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const {\n    navId: routeNavId\n  } = useParams(); // Get navId from route parameters\n  const [navId, setNavId] = useState(() => routeNavId ? Number(routeNavId) : undefined); // Initialize navId with routeNavId\n  const [isSelected, setIsSelected] = useState(false);\n  const datasource = [{\n    jobTitleDesignation: 'Junior_Engineer',\n    candidateId: 1,\n    candidateName: 'Kumar Ravi',\n    contactNumber: '9876543210',\n    emailId: 'rcreddy2222@gmail.com',\n    serviceCommitment: '3',\n    serviceBreakAmount: '200,000',\n    ctc: '240,000',\n    candidatesStatus: 'Pending'\n  }];\n  useEffect(() => {\n    // Retrieve the DIRECTORY navId from localStorage when the page loads\n    const storedNavId = localStorage.getItem('directoryNavId');\n    if (storedNavId) {\n      console.log('Retrieved DIRECTORY navId:', storedNavId);\n      setDirectoryNavId(storedNavId);\n    }\n  }, []);\n  useEffect(() => {\n    // Update navId whenever routeNavId changes\n    if (routeNavId) {\n      setNavId(Number(routeNavId));\n    }\n  }, [routeNavId]); // Runs when routeNavId changes\n\n  useEffect(() => {\n    const fetchSubNavData = async () => {\n      if (!navId) {\n        console.error('navId is not set');\n        setLoading(false);\n        return; // Exit if navId is not defined\n      }\n      try {\n        const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${navId}`);\n        console.log(\"Response status:\", response.status); // Log response status\n\n        if (!response.ok) {\n          console.error('Response not OK:', response);\n          throw new Error('Failed to fetch sub-navigation data: ' + response.statusText);\n        }\n        const data = await response.json();\n        console.log('Fetched sub-navigation data:', data); // Log fetched data for debugging\n\n        // Check if the response structure is as expected\n        if (Array.isArray(data)) {\n          setSubNavData(data.length > 0 ? data : []); // If it's an array, set it directly\n        } else if (data) {\n          setSubNavData([data]); // If it's a single object, wrap it in an array\n        } else {\n          console.log('No valid data returned from API');\n          setSubNavData([]); // Reset state if no valid data\n        }\n      } catch (error) {\n        console.error('Error fetching sub-navigation data:', error);\n        setError(error.message); // Set error message to state\n      } finally {\n        setLoading(false); // Stop loading regardless of success or failure\n      }\n    };\n    fetchSubNavData(); // Call the fetch function whenever navId changes\n  }, [navId]); // Fetch data whenever navId changes\n\n  // Define a mapping between subNav names and routes\n  // useEffect(() => {\n  //   // Fetch your subNavData (dynamic data)\n  //   // Example fetch call:\n  //   setSubNavData([\n  //     { subNavId: 1, name: \"OnBoarding\" },\n  //     { subNavId: 2, name: \"Profile\" },\n  //     { subNavId: 3, name: \"Hr Executive\" },\n  //     { subNavId: 4, name: \"Hr Manager\" }, // Ensure this matches\n  //     { subNavId: 5, name: \"Summary\" }, // Ensure this matches \n\n  //     // Add more dynamic data if necessary\n  //   ]);\n  // }, []);\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelected = datasource.map(row => row.candidateId);\n      setSelected(newSelected);\n    } else {\n      setSelected([]);\n    }\n  };\n  const handleClick = (event, row) => {\n    const selectedIndex = selected.indexOf(row.candidateId);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, row.candidateId);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleSubmitss = async e => {\n    e.preventDefault();\n\n    // Prepare the data to be sent to the API\n    const requestBody = {\n      navId,\n      // Use the navId from the selected course\n      name\n    };\n    console.log('Request Body:', requestBody); // Log the request body\n\n    // POST API call\n    try {\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorData = await response.json(); // Log error response\n        console.error('Error response from server:', errorData);\n        throw new Error('Failed to submit the form: ' + errorData.message);\n      }\n      const data = await response.json();\n      alert('Form submitted successfully');\n      console.log('Form submitted successfully:', data);\n\n      // Optionally, you might want to fetch the updated data here\n      // await fetchData(); // Assuming fetchData is a function to fetch data\n\n      // Handle the success, close modal, or reset form\n      setIsSecondModalOpen(false);\n      setName('');\n    } catch (error) {\n      console.error('Error submitting the form:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-body\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'row',\n      // This will make the children align horizontally\n      flexWrap: 'wrap',\n      // Allows wrapping to next line if the width is exceeded\n      marginTop: '90px',\n      backgroundColor: '#f8f9fa',\n      // Light background color for the navbar\n      padding: '10px 20px',\n      // Padding for the navbar\n      boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)',\n      // Subtle shadow for depth\n      borderRadius: '5px' // Optional: rounded corners\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsSecondModalOpen(true);\n        setNavId(user.navId);\n      },\n      className: \"btn btn-primary\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fetching data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }, this), \" \", !loading && !error && subNavData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 57\n    }, this), \" \", !loading && !error && subNavData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: subNavData.map(subNav => {\n        // Dynamic route logic\n        const dynamicRoute = (() => {\n          switch (subNav.name) {\n            case \"Profile\":\n              return `/Profile/${directoryNavId}`;\n            case \"test1\":\n              return \"/test1\";\n            // Specify the route for \"test1\"\n            case \"Students\":\n              return \"/Students\";\n            // Specify the route for \"test1\" \n            case \"All Courses\":\n              return \"/All Courses\";\n            // Specify the route for \"test1\"  \n            case \"Enroll\":\n              return \"/Enroll\";\n            // Specify the route for \"test1\"\n            case \"All Students\":\n              return \"/All Students\";\n            // Specify the route for \"test1\"\n            case \"Add Courses\":\n              return \"/Add Courses\";\n            // Specify the route for \"test1\"\n            default:\n              return ``;\n            // Default route mapping\n          }\n        })();\n        const isActive = location.pathname === dynamicRoute;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: dynamicRoute,\n          style: {\n            color: isActive ? '#fff' : '#000',\n            // Text color remains unchanged\n            backgroundColor: subNav.name === 'OnBoarding' ? isActive ? '#007bff' : '#007bff' // Blue background for 'OnBoarding' whether active or not\n            : isActive ? '#007bff' : 'transparent',\n            // Active links have blue, others are transparent\n            textDecoration: 'none',\n            padding: '10px 15px',\n            borderRadius: '4px',\n            transition: 'background-color 0.3s, color 0.3s' // Smooth transition for background color\n          },\n          children: subNav.name\n        }, subNav.subNavId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        style: {\n          backgroundColor: 'whitesmoke',\n          marginTop: '2%'\n        },\n        title: /*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Filter\",\n          value: filter,\n          onChange: handleFilterChange,\n          className: \"filterAlignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this),\n        action: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n            style: {\n              display: 'none'\n            },\n            id: \"fileUpload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileUpload\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"extendedFab\",\n              component: \"span\",\n              children: [/*#__PURE__*/_jsxDEV(CloudDownload, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), \"Import\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"extendedFab\",\n            onClick: () => console.log('Export'),\n            children: [/*#__PURE__*/_jsxDEV(CloudUpload, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), \"Export\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"extendedFab\",\n            onClick: () => console.log('Add'),\n            children: \"+Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  indeterminate: selected.length > 0 && selected.length < datasource.length,\n                  checked: datasource.length > 0 && selected.length === datasource.length,\n                  onChange: handleSelectAllClick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"S.No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Organization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Candidate Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Contact Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: datasource.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row),\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.jobTitleDesignation.replaceAll('_', ' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.candidateId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.candidateName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.contactNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.emailId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.serviceCommitment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.serviceBreakAmount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.ctc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.candidatesStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => console.log('View', row.candidateId),\n                    children: /*#__PURE__*/_jsxDEV(RemoveRedEye, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => console.log('Edit', row.candidateId),\n                    children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 21\n                }, this)]\n              }, row.candidateId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25, 100],\n          component: \"div\",\n          count: datasource.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handlePageChange,\n          onRowsPerPageChange: handleRowsPerPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 5\n    }, this), isSecondModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsSecondModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(OnBoarding, \"EmSJRrPxxOjRWx3tk3q8D71i8Eo=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = OnBoarding;\nexport default OnBoarding;\nvar _c;\n$RefreshReg$(_c, \"OnBoarding\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useLocation","directoryNavId","setDirectoryNavId","CloudUpload","CloudDownload","CheckCircleOutline","RemoveRedEye","Edit","Card","CardHeader","CardContent","CardActions","Button","Checkbox","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","TextField","IconButton","jsxDEV","_jsxDEV","Fragment","_Fragment","OnBoarding","_s","subNavData","setSubNavData","loading","setLoading","error","setError","name","setName","isSecondModalOpen","setIsSecondModalOpen","user","setUser","location","filter","setFilter","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","navId","routeNavId","setNavId","Number","undefined","isSelected","setIsSelected","datasource","jobTitleDesignation","candidateId","candidateName","contactNumber","emailId","serviceCommitment","serviceBreakAmount","ctc","candidatesStatus","storedNavId","localStorage","getItem","console","log","fetchSubNavData","response","fetch","status","ok","Error","statusText","data","json","Array","isArray","length","message","handleFilterChange","event","target","value","handleSelectAllClick","checked","newSelected","map","row","handleClick","selectedIndex","indexOf","concat","slice","handlePageChange","newPage","handleRowsPerPageChange","parseInt","handleSubmitss","e","preventDefault","requestBody","method","headers","body","JSON","stringify","errorData","alert","className","style","display","justifyContent","alignItems","flexDirection","flexWrap","marginTop","backgroundColor","padding","boxShadow","borderRadius","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","gap","subNav","dynamicRoute","isActive","pathname","to","color","textDecoration","transition","subNavId","title","placeholder","onChange","action","type","accept","id","htmlFor","variant","component","indeterminate","index","hover","role","tabIndex","replaceAll","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","onSubmit","required","_c","$RefreshReg$"],"sources":["C:/Users/Akhil.t.EIS/Videos/IIA_Final/IIA_DASHBOARDS/src/Component/OnBoarding.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link,useLocation  } from 'react-router-dom';\r\nconst [directoryNavId, setDirectoryNavId] = useState(null); \r\nimport { CloudUpload, CloudDownload, CheckCircleOutline, RemoveRedEye, Edit } from '@mui/icons-material';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  TextField,\r\n  IconButton,\r\n} from '@mui/material';\r\n\r\nconst OnBoarding = () => {\r\n\r\n  const [subNavData, setSubNavData] = useState([]); // State to hold sub-navigation data\r\n  const [loading, setLoading] = useState(true); // State to manage loading status\r\n  const [error, setError] = useState(null); // State for error handling\r\n  const [name, setName] = useState('');\r\n  const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\r\n  const [user, setUser] = useState('');\r\n  const location = useLocation(); \r\n  const [filter, setFilter] = useState('');\r\n  const [selected, setSelected] = useState([]); \r\n  const [page, setPage] = useState(0); \r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const { navId: routeNavId } = useParams(); // Get navId from route parameters\r\n  const [navId, setNavId] = useState(() => (routeNavId ? Number(routeNavId) : undefined)); // Initialize navId with routeNavId\r\n  const [isSelected, setIsSelected] = useState(false); \r\n\r\n\r\n  const datasource = [\r\n    {\r\n      jobTitleDesignation: 'Junior_Engineer',\r\n      candidateId: 1,\r\n      candidateName: 'Kumar Ravi',\r\n      contactNumber: '9876543210',\r\n      emailId: 'rcreddy2222@gmail.com',\r\n      serviceCommitment: '3',\r\n      serviceBreakAmount: '200,000',\r\n      ctc: '240,000',\r\n      candidatesStatus: 'Pending',\r\n    },\r\n   \r\n  ];\r\n\r\n\r\n  useEffect(() => {\r\n    // Retrieve the DIRECTORY navId from localStorage when the page loads\r\n    const storedNavId = localStorage.getItem('directoryNavId');\r\n    \r\n    if (storedNavId) {\r\n      console.log('Retrieved DIRECTORY navId:', storedNavId);\r\n      setDirectoryNavId(storedNavId);\r\n    }\r\n  }, []); \r\n\r\n  useEffect(() => {\r\n    // Update navId whenever routeNavId changes\r\n    if (routeNavId) {\r\n      setNavId(Number(routeNavId));\r\n    }\r\n  }, [routeNavId]); // Runs when routeNavId changes\r\n\r\n  useEffect(() => {\r\n    const fetchSubNavData = async () => {\r\n      if (!navId) {\r\n        console.error('navId is not set');\r\n        setLoading(false);\r\n        return; // Exit if navId is not defined\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${navId}`);\r\n        console.log(\"Response status:\", response.status); // Log response status\r\n\r\n        if (!response.ok) {\r\n          console.error('Response not OK:', response);\r\n          throw new Error('Failed to fetch sub-navigation data: ' + response.statusText);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('Fetched sub-navigation data:', data); // Log fetched data for debugging\r\n\r\n        // Check if the response structure is as expected\r\n        if (Array.isArray(data)) {\r\n          setSubNavData(data.length > 0 ? data : []); // If it's an array, set it directly\r\n        } else if (data) {\r\n          setSubNavData([data]); // If it's a single object, wrap it in an array\r\n        } else {\r\n          console.log('No valid data returned from API');\r\n          setSubNavData([]); // Reset state if no valid data\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching sub-navigation data:', error);\r\n        setError(error.message); // Set error message to state\r\n      } finally {\r\n        setLoading(false); // Stop loading regardless of success or failure\r\n      }\r\n    };\r\n\r\n    fetchSubNavData(); // Call the fetch function whenever navId changes\r\n  }, [navId]); // Fetch data whenever navId changes\r\n\r\n\r\n  // Define a mapping between subNav names and routes\r\n  // useEffect(() => {\r\n  //   // Fetch your subNavData (dynamic data)\r\n  //   // Example fetch call:\r\n  //   setSubNavData([\r\n  //     { subNavId: 1, name: \"OnBoarding\" },\r\n  //     { subNavId: 2, name: \"Profile\" },\r\n  //     { subNavId: 3, name: \"Hr Executive\" },\r\n  //     { subNavId: 4, name: \"Hr Manager\" }, // Ensure this matches\r\n  //     { subNavId: 5, name: \"Summary\" }, // Ensure this matches \r\n     \r\n  //     // Add more dynamic data if necessary\r\n  //   ]);\r\n  // }, []);\r\n\r\n\r\n  \r\n\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = datasource.map((row) => row.candidateId);\r\n      setSelected(newSelected);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const handleClick = (event, row) => {\r\n    const selectedIndex = selected.indexOf(row.candidateId);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, row.candidateId);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n  const handleSubmitss = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Prepare the data to be sent to the API\r\n    const requestBody = {\r\n      navId, // Use the navId from the selected course\r\n      name,\r\n    };\r\n\r\n    console.log('Request Body:', requestBody); // Log the request body\r\n\r\n    // POST API call\r\n    try {\r\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json(); // Log error response\r\n        console.error('Error response from server:', errorData);\r\n        throw new Error('Failed to submit the form: ' + errorData.message);\r\n      }\r\n\r\n      const data = await response.json();\r\n      alert('Form submitted successfully')\r\n      console.log('Form submitted successfully:', data);\r\n\r\n      // Optionally, you might want to fetch the updated data here\r\n      // await fetchData(); // Assuming fetchData is a function to fetch data\r\n\r\n      // Handle the success, close modal, or reset form\r\n      setIsSecondModalOpen(false);\r\n      setName('');\r\n    } catch (error) {\r\n      console.error('Error submitting the form:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div\r\n      className=\"content-body\"\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'row', // This will make the children align horizontally\r\n        flexWrap: 'wrap', // Allows wrapping to next line if the width is exceeded\r\n        marginTop: '90px',\r\n        backgroundColor: '#f8f9fa', // Light background color for the navbar\r\n        padding: '10px 20px', // Padding for the navbar\r\n        boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)', // Subtle shadow for depth\r\n        borderRadius: '5px', // Optional: rounded corners\r\n      }}\r\n    >\r\n\r\n      <button onClick={() => { setIsSecondModalOpen(true); setNavId(user.navId); }} className=\"btn btn-primary\">\r\n        Add\r\n      </button>\r\n      {loading && <p>Fetching data...</p>} {/* Show fetching message while loading */}\r\n      {error && <p>Error: {error}</p>} {/* Show error message if there's an error */}\r\n      {!loading && !error && subNavData.length === 0 && <p>No data available.</p>} {/* Message if no data */}\r\n      {!loading && !error && subNavData.length > 0 && (\r\n        <div style={{ display: 'flex', gap: '20px' }}>\r\n          {subNavData.map((subNav) => {\r\n            // Dynamic route logic\r\n            const dynamicRoute = (() => {\r\n              switch (subNav.name) {\r\n                case \"Profile\":\r\n                  return `/Profile/${directoryNavId}`; \r\n                case \"test1\":\r\n                  return \"/test1\"; // Specify the route for \"test1\"\r\n                case \"Students\":\r\n                  return \"/Students\"; // Specify the route for \"test1\" \r\n                case \"All Courses\":\r\n                  return \"/All Courses\"; // Specify the route for \"test1\"  \r\n                case \"Enroll\":\r\n                  return \"/Enroll\"; // Specify the route for \"test1\"\r\n                case \"All Students\":\r\n                  return \"/All Students\"; // Specify the route for \"test1\"\r\n                case \"Add Courses\":\r\n                  return \"/Add Courses\"; // Specify the route for \"test1\"\r\n                default:\r\n                  return ``; // Default route mapping\r\n              }\r\n            })();\r\n\r\n\r\n            const isActive = location.pathname === dynamicRoute;\r\n\r\n            return (\r\n                <Link\r\n                key={subNav.subNavId}\r\n                to={dynamicRoute}\r\n                style={{\r\n                  color: isActive ? '#fff' : '#000', // Text color remains unchanged\r\n                  backgroundColor: subNav.name === 'OnBoarding'\r\n                    ? (isActive ? '#007bff' : '#007bff')  // Blue background for 'OnBoarding' whether active or not\r\n                    : (isActive ? '#007bff' : 'transparent'),  // Active links have blue, others are transparent\r\n                  textDecoration: 'none',\r\n                  padding: '10px 15px',\r\n\r\n                  borderRadius: '4px',\r\n                  transition: 'background-color 0.3s, color 0.3s', // Smooth transition for background color\r\n                }}\r\n              >\r\n                {subNav.name}\r\n              </Link>\r\n              \r\n            \r\n            \r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n    <Card>\r\n      <CardHeader\r\n        style={{ backgroundColor: 'whitesmoke', marginTop: '2%' }}\r\n        title={\r\n          <TextField\r\n            placeholder=\"Filter\"\r\n            value={filter}\r\n            onChange={handleFilterChange}\r\n            className=\"filterAlignment\"\r\n          />\r\n        }\r\n        action={\r\n          <>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n              style={{ display: 'none' }}\r\n              id=\"fileUpload\"\r\n            />\r\n            <label htmlFor=\"fileUpload\">\r\n              <Button variant=\"extendedFab\" component=\"span\">\r\n                <CloudDownload />\r\n                Import\r\n              </Button>\r\n            </label>\r\n            <Button variant=\"extendedFab\" onClick={() => console.log('Export')}>\r\n              <CloudUpload />\r\n              Export\r\n            </Button>\r\n            <Button variant=\"extendedFab\" onClick={() => console.log('Add')}>\r\n              +Add\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  indeterminate={selected.length > 0 && selected.length < datasource.length}\r\n                  checked={datasource.length > 0 && selected.length === datasource.length}\r\n                  onChange={handleSelectAllClick}\r\n                />\r\n              </TableCell>\r\n              <TableCell>S.No</TableCell>\r\n              <TableCell>Category</TableCell>\r\n              <TableCell>Organization</TableCell>\r\n              <TableCell>Candidate Name</TableCell>\r\n              <TableCell>Email Id</TableCell>\r\n              <TableCell>Contact Number</TableCell>\r\n              <TableCell>Password</TableCell>\r\n              <TableCell>Role</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {datasource\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n              \r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row)}\r\n                    role=\"checkbox\"\r\n                \r\n                    tabIndex={-1}\r\n                    key={row.candidateId}\r\n                   \r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox />\r\n                    </TableCell>\r\n                    <TableCell>{index + 1}</TableCell>\r\n                    <TableCell>{row.jobTitleDesignation.replaceAll('_', ' ')}</TableCell>\r\n                    <TableCell>{row.candidateId}</TableCell>\r\n                    <TableCell>{row.candidateName}</TableCell>\r\n                    <TableCell>{row.contactNumber}</TableCell>\r\n                    <TableCell>{row.emailId}</TableCell>\r\n                    <TableCell>{row.serviceCommitment}</TableCell>\r\n                    <TableCell>{row.serviceBreakAmount}</TableCell>\r\n                    <TableCell>{row.ctc}</TableCell>\r\n                    <TableCell>{row.candidatesStatus}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton onClick={() => console.log('View', row.candidateId)}>\r\n                        <RemoveRedEye />\r\n                      </IconButton>\r\n                      <IconButton onClick={() => console.log('Edit', row.candidateId)}>\r\n                        <Edit />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <CardActions>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 100]}\r\n          component=\"div\"\r\n          count={datasource.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleRowsPerPageChange}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n      {isSecondModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button className=\"close-button\" onClick={() => setIsSecondModalOpen(false)}>\r\n              &times;\r\n            </button>\r\n            <form onSubmit={handleSubmitss}>\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default OnBoarding;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}