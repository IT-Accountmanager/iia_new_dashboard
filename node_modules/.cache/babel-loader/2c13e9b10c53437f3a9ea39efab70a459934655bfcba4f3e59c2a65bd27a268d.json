{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import NavBar from \"./Component/NavBar\";\n// import Footer from \"./Component/Footer\";\n// import Home from \"./Component/Home\";\n// import Logout from \"./Component/Logout\";\n// import Sidenav from \"./Component/Sidenav\";\n// import ControllersTableData from \"./Component/ControllersTableData\"\n// import LoginEmp from \"./Component/Login\";\n// import SignUpEmp from \"./Component/SignUp\";\n// import ForgotEmp from \"./Component/ForgotPassword\";\n// import OnBoarding from \"./Component/OnBoarding\";\n// import Profile from \"./Component/Profile\";\n// import EmptyPage from \"./Component/EmptyPage\";\n\n// const courseComponents = {\n\n//   // Add more mappings as needed\n// };\n\n// function App() {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   // Load auth status from localStorage once when the app starts\n//   // useEffect(() => {\n//   //   const storedAuth = localStorage.getItem(\"isAuthenticated\");\n//   //   setIsAuthenticated(storedAuth === \"true\");\n//   // }, []);\n\n//   const handleLogin = () => {\n//     setIsAuthenticated(true);\n//     localStorage.setItem(\"isAuthenticated\", \"true\");\n//   };\n\n//   const handleLogout = () => {\n//     setIsAuthenticated(false);\n//     localStorage.removeItem(\"isAuthenticated\");\n//   };\n\n//   return (\n//     <Router>\n//       {/* Render NavBar and Sidenav only if authenticated */}\n//       {isAuthenticated && <NavBar />}\n//       {isAuthenticated && <Sidenav />}\n\n//       <Routes>\n//         {/* Redirect to login if not authenticated various procedures  */}\n\n//         {/* <Route path=\"/\" element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" replace />} /> */}\n//         <Route path=\"/\" element={<Home />} />\n//         <Route path=\"/logout\" element={<Logout onLogout={handleLogout} />} />\n//         <Route path=\"/login\" element={<LoginEmp onLogin={handleLogin} />} />\n//         <Route path=\"/signup\" element={<SignUpEmp />} />\n//         <Route path=\"/forgot\" element={<ForgotEmp  />} />\n//         {isAuthenticated && (\n//           <>\n\n//            <Route path=\"/Profile/:navId\" element={<Profile />} />\n//            <Route path=\"/onboarding/:navId\" element={<OnBoarding />} />\n//            <Route path=\"/EmptyPage\" element={<EmptyPage />} />\n\n//             <Route path=\"/cntrollers-table-data\" element={<ControllersTableData />} />\n\n//             {Object.keys(courseComponents).map((id) => (\n//               <Route key={id} path={`/all-courses/${id}`} element={React.createElement(courseComponents[id])} />\n//             ))}\n\n//           </>\n//         )}\n//       </Routes>\n\n//       {/* {isAuthenticated && <Footer />} */}\n//     </Router>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Akhil.t.EIS/Videos/IIA_Final/IIA_DASHBOARDS/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\n// import NavBar from \"./Component/NavBar\";\r\n// import Footer from \"./Component/Footer\";\r\n// import Home from \"./Component/Home\";\r\n// import Logout from \"./Component/Logout\";\r\n// import Sidenav from \"./Component/Sidenav\";\r\n// import ControllersTableData from \"./Component/ControllersTableData\"\r\n// import LoginEmp from \"./Component/Login\";\r\n// import SignUpEmp from \"./Component/SignUp\";\r\n// import ForgotEmp from \"./Component/ForgotPassword\";\r\n// import OnBoarding from \"./Component/OnBoarding\";\r\n// import Profile from \"./Component/Profile\";\r\n// import EmptyPage from \"./Component/EmptyPage\";\r\n\r\n// const courseComponents = {\r\n\r\n\r\n//   // Add more mappings as needed\r\n// };\r\n\r\n// function App() {\r\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n//   // Load auth status from localStorage once when the app starts\r\n//   // useEffect(() => {\r\n//   //   const storedAuth = localStorage.getItem(\"isAuthenticated\");\r\n//   //   setIsAuthenticated(storedAuth === \"true\");\r\n//   // }, []);\r\n\r\n//   const handleLogin = () => {\r\n//     setIsAuthenticated(true);\r\n//     localStorage.setItem(\"isAuthenticated\", \"true\");\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     setIsAuthenticated(false);\r\n//     localStorage.removeItem(\"isAuthenticated\");\r\n//   };\r\n\r\n//   return (\r\n//     <Router>\r\n//       {/* Render NavBar and Sidenav only if authenticated */}\r\n//       {isAuthenticated && <NavBar />}\r\n//       {isAuthenticated && <Sidenav />}\r\n\r\n//       <Routes>\r\n//         {/* Redirect to login if not authenticated various procedures  */}\r\n        \r\n//         {/* <Route path=\"/\" element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" replace />} /> */}\r\n//         <Route path=\"/\" element={<Home />} />\r\n//         <Route path=\"/logout\" element={<Logout onLogout={handleLogout} />} />\r\n//         <Route path=\"/login\" element={<LoginEmp onLogin={handleLogin} />} />\r\n//         <Route path=\"/signup\" element={<SignUpEmp />} />\r\n//         <Route path=\"/forgot\" element={<ForgotEmp  />} />\r\n//         {isAuthenticated && (\r\n//           <>\r\n          \r\n//            <Route path=\"/Profile/:navId\" element={<Profile />} />\r\n//            <Route path=\"/onboarding/:navId\" element={<OnBoarding />} />\r\n//            <Route path=\"/EmptyPage\" element={<EmptyPage />} />\r\n\r\n//             <Route path=\"/cntrollers-table-data\" element={<ControllersTableData />} />\r\n\r\n//             {Object.keys(courseComponents).map((id) => (\r\n//               <Route key={id} path={`/all-courses/${id}`} element={React.createElement(courseComponents[id])} />\r\n//             ))}\r\n\r\n//           </>\r\n//         )}\r\n//       </Routes>\r\n\r\n//       {/* {isAuthenticated && <Footer />} */}\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}