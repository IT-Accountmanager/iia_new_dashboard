{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhil.t.EIS\\\\Videos\\\\IIA_Final\\\\IIA_DASHBOARDS\\\\src\\\\Component\\\\ControllersTableData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = ({\n  users\n}) => {\n  _s();\n  const [data, setData] = useState([]); // Main navigation data\n  const [subNavData, setSubNavData] = useState({}); // Store sub-navigation data grouped by navId\n  const [loading, setLoading] = useState(true); // Loading state\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [posterImage, setPosterImage] = useState('');\n  const [imagePreview, setImagePreview] = useState(null);\n  const [selectedOrganization, setSelectedOrganization] = useState('');\n  const [image, setImage] = useState('');\n  const [name, setName] = useState('');\n  const [organizationOptions, setOrganizationOptions] = useState([]);\n  const [organization, setOrganization] = useState('');\n  const [loadingOrganization, setLoadingOrganization] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [loadingOrganizations, setLoadingOrganizations] = useState(false);\n  const [organizations, setOrganizations] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\n  const [apiData, setApiData] = useState([]);\n  const [navId, setNavId] = useState(1); // Initialize navId with a default value another data also \n  const navigate = useNavigate();\n  const [checkedItems, setCheckedItems] = useState({}); // State to track checked items\n  const [filteredVendorOptions, setFilteredVendorOptions] = useState([]);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedImage, setEditedImage] = useState('');\n  // Function to handle form submission for editing\n  // Function to handle form submission for editing data not \n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [clientOptions, setClientOptions] = useState([]);\n  const [popupNavId, setPopupNavId] = useState(null);\n  const [subNavId, setSubNavId] = useState(null);\n  const [selectedSubNavId, setSelectedSubNavId] = useState(null);\n  const [subName, setSubName] = useState('');\n  const [subPosterImage, setSubPosterImage] = useState('');\n  const [subPopupVisible, setSubPopupVisible] = useState(false);\n  const [itemData, setItemData] = useState(null); // New state for item data\n\n  const handleSubmitsssss = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${selectedSubNavId}`, {\n        name: name // Body with the new name\n      });\n      console.log('Edit response:', response.data); // Log response from the API\n      setIsPopupOpen(false); // Close the popup after successful edit\n      // Optionally, you can fetch the updated data again or update state directly\n    } catch (error) {\n      console.error('Error updating sub navigation data:', error);\n    }\n  };\n  const handleEdit = () => {\n    // Logic for editing goes here\n    console.log('Edit button clicked');\n  };\n  const handleSave = () => {\n    // Logic for saving goes here\n    console.log('Save button clicked');\n  };\n  const handleNameClicks = subNavId => {\n    console.log(\"Clicked SubNav ID:\", subNavId);\n    setSelectedSubNavId(subNavId);\n    setIsPopupOpen(true);\n  };\n  const fetchSubNavData = async subNavId => {\n    try {\n      const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/getbyidforview/${subNavId}`);\n      console.log(response.data); // Check the structure of the response\n      if (response.data) {\n        setItemData(response.data);\n        setName(response.data.name || ''); // Use empty string if name is undefined\n      }\n    } catch (error) {\n      console.error('Error fetching sub navigation data:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchVendorOptions = async () => {\n      try {\n        const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/enum/roles');\n        if (!response.ok) {\n          throw new Error('Failed to fetch vendor options');\n        }\n        const data = await response.json();\n\n        // Map each role to an object with value and label for dropdown\n        const options = data.map(role => ({\n          value: role,\n          label: role\n        }));\n        setFilteredVendorOptions(options);\n      } catch (error) {\n        console.error('Error fetching vendor options:', error);\n      }\n    };\n    fetchVendorOptions();\n  }, []);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/enum/categoryies');\n        if (!response.ok) {\n          throw new Error('Failed to fetch categories');\n        }\n        const data = await response.json();\n\n        // Convert each category string into an object with value and label for the dropdown\n        const options = data.map(category => ({\n          value: category,\n          label: category\n        }));\n        setClientOptions(options);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (selectedCategory) {\n      const fetchOrganizations = async () => {\n        setLoadingOrganizations(true);\n        try {\n          const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/api/users/by-category/${selectedCategory}`);\n          const data = await response.json();\n          setOrganizations(data.map(org => ({\n            label: org,\n            value: org\n          })));\n          setLoadingOrganizations(false);\n        } catch (error) {\n          console.error(\"Error fetching organizations:\", error);\n          setLoadingOrganizations(false);\n        }\n      };\n      fetchOrganizations();\n    }\n  }, [selectedCategory]);\n  useEffect(() => {\n    if (selectedSubNavId && isPopupOpen) {\n      fetchSubNavData(selectedSubNavId);\n    }\n  }, [selectedSubNavId, isPopupOpen]);\n  const handleSubNavSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission procedures of the ParentComponent.js,FeesCollections.js,EventManagement.js,CoursesTableData.js,AllWebinars.js code int the  \n    setLoading(true);\n    const editedData = {\n      subNavId,\n      name,\n      image: posterImage.split(',')[1] // Send image data without prefix\n    };\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${subNavId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editedData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Handle success (close popup, refresh data, etc.)\n      closeSubNavPopup(); // Close the subNav popup after submission\n      console.log('SubNav data updated successfully!');\n    } catch (error) {\n      console.error(\"Error updating subNav data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const closeSubNavPopup = () => {\n    setSubNavId(null);\n    setName('');\n    setPosterImage('');\n  };\n  const handleNameClick = navId => {\n    setPopupNavId(navId);\n    fetchUserData(navId); // Fetch data for this navId when the name is clicked\n  };\n  const closePopup = () => {\n    setPopupNavId(null); // Close the popup\n    setName(''); // Clear form data\n    setPosterImage(null); // Clear image preview\n  };\n  const fetchUserData = async navId => {\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${navId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const fetchedData = await response.json(); // Parse the JSON response\n\n      // Set the state with the fetched data\n      setName(fetchedData.name);\n\n      // Check if the image is not empty and prepend the base64 prefix\n      if (fetchedData.image) {\n        setPosterImage(`data:image/png;base64,${fetchedData.image}`); // Update according to the image format\n      } else {\n        setPosterImage(''); // Clear image state if no image\n      }\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n  const handleSubmitssss = async event => {\n    event.preventDefault(); // Prevent default form submission\n    setLoading(true);\n    const editedData = {\n      navId: popupNavId,\n      // Send the ID along with the data\n      name,\n      image: posterImage.split(',')[1] // Remove the prefix before sending\n    };\n    try {\n      const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${popupNavId}`, {\n        method: 'PUT',\n        // Use PUT for editing\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editedData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Optionally, handle success (e.g., close popup, refresh data, show message, etc.)\n      console.log('Data updated successfully!');\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //   const handleImageChangess = (e) => {\n  //     const file = e.target.files[0];\n  //     if (file) {\n  //       const reader = new FileReader();\n  //       reader.onloadend = () => {\n  //         setPosterImage(reader.result); // Preview the image\n  //       };\n  //       reader.readAsDataURL(file);\n  //     }\n  //   };\n\n  const handleSubmitsss = e => {\n    e.preventDefault();\n    // Submit form logic here (API call or update data)\n    console.log(\"Submitted data:\", {\n      navId: popupNavId,\n      name,\n      posterImage\n    });\n  };\n  // const handleUserNameClick = async (user) => {\n  //     try {\n  //         const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\n  //         setUserData(response.data); // Set the user data\n  //         setNavId(user.navId);\n  //         setIsEditModalOpen(true); // Open the edit modal\n  //     } catch (error) {\n  //         console.error(\"Error fetching user data:\", error);\n  //     }\n  // };\n\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Prepare the image as base64 (assuming image is handled as base64)\n      const cleanImage = editedImage ? editedImage.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '';\n      const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${selectedUser.navId}`, {\n        name: editedName,\n        // Send updated name\n        image: cleanImage // Send updated image (as base64)\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('User details updated successfully');\n        setIsEditModalOpen(false);\n        // Optionally, update the user details in the table without reloading\n        // e.g., by updating the state that stores users\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Error updating user details:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Failed to update user details');\n    }\n  };\n  const handleEditButtonClick = async user => {\n    console.log('Editing user:', user); // Confirm this is being called\n    try {\n      const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\n      console.log('User data fetched:', response.data); // Log the response data\n      setUserData(response.data); // Assuming the response contains the user data\n      setNavId(user.navId);\n      setIsEditModalOpen(true); // Open the edit modal\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n    }\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n    setUserData(null); // Reset userData on close\n  };\n  const handleSubmits = async event => {\n    event.preventDefault();\n    const cleanImage = image.replace(/^data:image\\/[a-zA-Z]+;base64,/, '');\n    const formData = {\n      name: name,\n      image: cleanImage\n    };\n    try {\n      const response = await axios.post('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/add', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Form submitted successfully:', response.data);\n      closeSubNavPopup();\n      alert('Data added successfully!');\n      window.location.reload();\n\n      // navigate('/login');\n    } catch (error) {\n      var _error$response2;\n      console.error('Error submitting form:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    }\n  };\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImage(reader.result);\n        setPosterImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  // Fetch initial data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/all');\n        console.log('API Response:', response.data); // Log response data\n        setData(response.data); // Set fetched data\n\n        // Fetch sub-navigation data for each navId\n        const initialSubNavData = {};\n        await Promise.all(response.data.map(async item => {\n          const subNavResponse = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${item.navId}`);\n          const subNavData = await subNavResponse.json();\n          initialSubNavData[item.navId] = subNavData; // Group data by navId\n        }));\n        setSubNavData(initialSubNavData); // Set grouped sub-navigation data\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false); // End loading state\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Form submission handler\n  const handleSubmitss = async e => {\n    e.preventDefault();\n\n    //    alert(imageFields)\n    console.log(imageFields);\n\n    // Prepare the data to be sent to the API\n    const requestBody = {\n      navId,\n      // Use the navId from the selected course\n      name\n    };\n\n    // POST API call\n    try {\n      const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit the form');\n      }\n      const data = await response.json();\n      console.log('Form submitted successfully:', data);\n\n      // Handle the success, close modal, or reset form\n      setIsSecondModalOpen(false);\n      setName('');\n    } catch (error) {\n      console.error('Error submitting the form:', error);\n    }\n  };\n  // Handle checkbox change for individual items\n  const handleCheckboxChange = subNavId => {\n    setCheckedItems(prev => ({\n      ...prev,\n      [subNavId]: !prev[subNavId] // Toggle the checked state\n    }));\n  };\n\n  // Handle header checkbox change to check/uncheck all corresponding subNav items\n  const handleHeaderCheckboxChange = navId => {\n    const subNavItems = subNavData[navId] || [];\n    const allChecked = subNavItems.every(item => !!checkedItems[item.subNavId]);\n\n    // Toggle checked state for all subNav items for the selected navId\n    const newCheckedItems = {\n      ...checkedItems\n    };\n    subNavItems.forEach(item => {\n      newCheckedItems[item.subNavId] = !allChecked; // Set to the opposite of current state\n    });\n    setCheckedItems(newCheckedItems);\n  };\n\n  // Function to delete a nav item by navId\n  const handleDelete = async navId => {\n    try {\n      // Replace with your API endpoint\n      await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/deletedata/${navId}`);\n\n      // Update local state to remove the deleted item\n      setData(prevData => prevData.filter(user => user.navId !== navId));\n      setSubNavData(prevSubNavData => {\n        const {\n          [navId]: _,\n          ...rest\n        } = prevSubNavData; // Remove subNavData for deleted navId\n        return rest;\n      });\n    } catch (error) {\n      console.error('Error deleting the item:', error);\n      // Handle error appropriately (e.g., show a notification)\n    }\n  };\n\n  // Function to delete a sub-navigation item by subNavId\n  const handleDeleteSubNav = async subNavId => {\n    try {\n      // Replace with your API endpoint\n      await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/deletesubsidenavbar/${subNavId}`);\n\n      // Update local state to remove the deleted item\n      setSubNavData(prevSubNavData => {\n        const updatedSubNavData = {\n          ...prevSubNavData\n        };\n        Object.keys(updatedSubNavData).forEach(navId => {\n          updatedSubNavData[navId] = updatedSubNavData[navId].filter(item => item.subNavId !== subNavId);\n        });\n        return updatedSubNavData;\n      });\n\n      // Optionally, you may want to remove the checked item from checkedItems\n      setCheckedItems(prev => {\n        const {\n          [subNavId]: _,\n          ...rest\n        } = prev; // Remove the checked state for deleted subNavId\n        return rest;\n      });\n    } catch (error) {\n      console.error('Error deleting the sub-navigation item:', error);\n      // Handle error appropriately (e.g., show a notification)\n    }\n  };\n\n  // State to track selected values of dropdowns\n  const [client, setClient] = useState('');\n  const [vendor, setVendor] = useState('');\n  const [employee, setEmployee] = useState('');\n  const [user, setUser] = useState('');\n\n  // // Mock data for dropdowns\n  // const clientOptions = [\n  //     { value: '_160_HR', label: 'Client' },\n  //     { value: '_320_HR', label: 'Vendor' },\n  // ];\n\n  // const vendorOptions = [\n  //     { value: '_160_HR', label: 'Employee' },\n  //     { value: '_320_HR', label: 'Admin' },\n  // ];\n\n  // const employeeOptions = [\n  //     { value: '_160_HR', label: 'User' },\n  //     { value: '_320_HR', label: 'Student' },\n  // ];\n\n  // const userOptions = [\n  //     { value: '_160_HR', label: 'Akhil' },\n  //     { value: '_320_HR', label: 'Naresh' },\n  // ];\n\n  // Filter logic for dependent dropdowns (Example)\n  // const filteredVendorOptions = vendorOptions.filter((option) =>\n  //     client === '_160_HR' ? option.value !== '_320_HR' : option\n  // );\n\n  // const filteredEmployeeOptions = employeeOptions.filter((option) =>\n  //     vendor === '_160_HR' ? option.value !== '_320_HR' : option\n  // );\n\n  // const filteredUserOptions = userOptions.filter((option) =>\n  //     employee === '_160_HR' ? option.value !== '_320_HR' : option\n  // );\n\n  const [textFields, setTextFields] = useState(['']);\n  const [imageFields, setImageFields] = useState([null]);\n  const [videoFields, setVideoFields] = useState([null]);\n  const imageInputRef = useRef(null);\n  const videoInputRef = useRef(null);\n  const addField = type => {\n    if (type === 'text') {\n      setTextFields([...textFields, '']);\n    } else if (type === 'image') {\n      // Programmatically click the hidden file input for image\n      imageInputRef.current.click();\n    } else if (type === 'video') {\n      // Programmatically click the hidden file input for video\n      videoInputRef.current.click();\n    }\n  };\n  const handleFileChange = (type, event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result; // Base64 string\n        if (type === 'image') {\n          setImage(reader.result);\n          setPosterImage(reader.result);\n          setImageFields(prev => [...prev, base64String]);\n        } else if (type === 'video') {\n          setVideoFields(prev => [...prev, base64String]);\n        }\n      };\n\n      // Read the file as a Data URL (Base64 string)\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '200px',\n      marginTop: '180px'\n    },\n    children: [\"   \", /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-1 col-md-6 col-sm-12\",\n          style: {\n            marginTop: '4px',\n            marginRight: '22px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(true),\n            className: \"btn btn-primary\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-6 col-sm-12\",\n          style: {\n            marginRight: '22px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: client,\n              onChange: e => setClient(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 29\n              }, this), clientOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-6 col-sm-12\",\n          style: {\n            marginRight: '22px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: organization,\n              onChange: e => setOrganization(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Organization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 25\n              }, this), organizationOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 21\n            }, this), loadingOrganization && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading organizations...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-6 col-sm-12\",\n          style: {\n            marginRight: '22px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: vendor,\n              onChange: e => setVendor(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 29\n              }, this), filteredVendorOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-6 col-sm-12\",\n          style: {\n            marginRight: '22px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control\",\n              value: vendor,\n              onChange: e => setVendor(e.target.value),\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-1 col-md-6 col-sm-12\",\n          style: {\n            marginTop: '4px',\n            marginRight: '22px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        borderCollapse: 'collapse',\n        marginLeft: '27px',\n        marginTop: '70px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: data.map(user => {\n            var _subNavData$user$navI;\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid #000',\n                padding: '8px',\n                backgroundColor: '#f2f2f2'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: (_subNavData$user$navI = subNavData[user.navId]) === null || _subNavData$user$navI === void 0 ? void 0 : _subNavData$user$navI.every(item => !!checkedItems[item.subNavId]),\n                onChange: () => handleHeaderCheckboxChange(user.navId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => handleNameClick(user.navId),\n                children: user.name\n              }, user.navId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setIsSecondModalOpen(true);\n                  setNavId(user.navId);\n                },\n                className: \"btn btn-primary\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(user.navId),\n                className: \"btn btn-danger\",\n                style: {\n                  marginLeft: '8px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"la la-trash-o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 33\n              }, this)]\n            }, user.navId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: data.map(user => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '8px'\n            },\n            children: subNavData[user.navId] && subNavData[user.navId].length > 0 ? subNavData[user.navId].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: !!checkedItems[item.subNavId],\n                onChange: () => handleCheckboxChange(item.subNavId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => handleNameClicks(item.subNavId),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteSubNav(item.subNavId),\n                className: \"btn btn-danger\",\n                style: {\n                  marginLeft: '8px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"la la-trash-o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 45\n              }, this)]\n            }, item.subNavId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"No data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 37\n            }, this)\n          }, user.navId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 13\n    }, this), isPopupOpen && itemData &&\n    /*#__PURE__*/\n    // Ensure itemData is defined before rendering\n    _jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setIsPopupOpen(false) // Close the popup when clicked\n          ,\n          style: {\n            position: 'absolute',\n            top: '10px',\n            right: '10px',\n            background: 'none',\n            border: 'none',\n            fontSize: '20px',\n            cursor: 'pointer',\n            marginTop: '-10px'\n          },\n          children: \"\\xD7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitsssss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name // Controlled input using name state\n              ,\n              onChange: e => setName(e.target.value) // Update name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 17\n    }, this), isEditModalOpen && userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: closeEditModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userData.name || '' // Default to empty string if name is undefined\n              ,\n              onChange: e => setUserData({\n                ...userData,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userData.imageUrl || '' // Default to empty string if imageUrl is undefined\n              ,\n              onChange: e => setUserData({\n                ...userData,\n                imageUrl: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 33\n            }, this), userData.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: userData.imageUrl,\n              alt: \"User\",\n              style: {\n                width: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeEditModal,\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 17\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmits,\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"form-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Text\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('text'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 919,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 918,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('image'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 925,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 924,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Upload Video\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('video'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 931,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 930,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 928,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: textFields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control1\",\n                      value: field,\n                      onChange: e => {\n                        const updatedFields = [...textFields];\n                        updatedFields[index] = e.target.value;\n                        setTextFields(updatedFields);\n                        setName(e.target.value);\n                      },\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 941,\n                      columnNumber: 29\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 940,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [imageFields.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-preview\",\n                    children: image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: image,\n                      alt: \"Uploaded\",\n                      className: \"file-image-preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 960,\n                      columnNumber: 33\n                    }, this) : null\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 958,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/*\",\n                    ref: imageInputRef,\n                    className: \"file-upload\",\n                    style: {\n                      display: 'none'\n                    },\n                    onChange: e => handleFileChange('image', e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 964,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 956,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [videoFields.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-preview\",\n                    children: video ? /*#__PURE__*/_jsxDEV(\"video\", {\n                      controls: true,\n                      src: video,\n                      className: \"file-video-preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 977,\n                      columnNumber: 33\n                    }, this) : null\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 975,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"video/*\",\n                    ref: videoInputRef,\n                    className: \"file-upload\",\n                    style: {\n                      display: 'none'\n                    },\n                    onChange: e => handleFileChange('video', e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 981,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: () => setIsModalOpen(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 17\n    }, this), isSecondModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitss,\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"form-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Text\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('text'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1026,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1025,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1023,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('image'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1032,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1031,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1029,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [\"Upload Video\", /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"add-icon\",\n                    onClick: () => addField('video'),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1038,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: textFields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control1\",\n                      value: field,\n                      onChange: e => {\n                        const updatedFields = [...textFields];\n                        updatedFields[index] = e.target.value;\n                        setTextFields(updatedFields);\n                        setName(e.target.value);\n                      },\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1048,\n                      columnNumber: 29\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1047,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [imageFields.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-preview\",\n                    children: image ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: image,\n                      alt: \"Uploaded\",\n                      className: \"file-image-preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1067,\n                      columnNumber: 33\n                    }, this) : null\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1065,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/*\",\n                    ref: imageInputRef,\n                    className: \"file-upload\",\n                    style: {\n                      display: 'none'\n                    },\n                    onChange: e => handleFileChange('image', e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1071,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [videoFields.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-preview\",\n                    children: video ? /*#__PURE__*/_jsxDEV(\"video\", {\n                      controls: true,\n                      src: video,\n                      className: \"file-video-preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1084,\n                      columnNumber: 33\n                    }, this) : null\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1082,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"video/*\",\n                    ref: videoInputRef,\n                    className: \"file-upload\",\n                    style: {\n                      display: 'none'\n                    },\n                    onChange: e => handleFileChange('video', e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\",\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: () => setIsSecondModalOpen(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 3\n    }, this), popupNavId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closePopup,\n          className: \"close-button\",\n          style: {\n            float: 'right',\n            cursor: 'pointer'\n          },\n          children: \"\\xD7 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitssss,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-2 col-md-12 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-choosen\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-blocks\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-upload\",\n                  style: {\n                    marginRight: '100px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    id: \"imageInput\",\n                    accept: \"image/*\",\n                    onChange: handleImageChange,\n                    style: {\n                      display: 'none'\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1134,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"imageInput\",\n                    className: \"image-uploads\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      \"data-feather\": \"plus-circle\",\n                      className: \"plus-down-add me-0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1143,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Add Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1144,\n                      columnNumber: 49\n                    }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: posterImage,\n                      alt: \"Preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1146,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1142,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1133,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value) // Update the name state\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1123,\n      columnNumber: 17\n    }, this), subNavId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeSubNavPopup,\n          className: \"close-button\",\n          style: {\n            float: 'right',\n            cursor: 'pointer'\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit SubNavId: \", subNavId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubNavSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"imageInput\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              style: {\n                display: 'none'\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"imageInput\",\n              className: \"image-uploads\",\n              style: {\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                \"data-feather\": \"plus-circle\",\n                className: \"plus-down-add me-0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Add Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 37\n              }, this), posterImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: posterImage,\n                alt: \"Preview\",\n                style: {\n                  maxWidth: '100px',\n                  maxHeight: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1208,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: loading,\n              children: loading ? 'Submitting...' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1213,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                .popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.popup-content {\n  text-align: center;\n}\n\nbutton {\n  margin-top: 10px;\n}\n\n  /* Modal Styles */\n  .modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    z-index: 1000;\n    width: 1000px; /* Adjust as needed */\n  }\n\n  .modal-content {\n    display: flex;\n    max-width:1000px;\n    flex-direction: column;\n  }\n\n  .form-group {\n    margin-bottom: 15px;\n  }\n\n  .form-control {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ced4da;\n    border-radius: 4px;\n  }\n\n  .form-label {\n    margin-bottom: 5px;\n    font-weight: bold;\n  }\n\n  .btn {\n    padding: 8px 12px;\n    border-radius: 4px;\n    margin-right: 10px;\n    cursor: pointer;\n  }\n\n  .btn-primary {\n    background-color: #007bff;\n    color: white;\n    border: none;\n  }\n\n  .btn-primary:hover {\n    background-color: #0056b3;\n  }\n\n  .btn-secondary {\n    background-color: #6c757d;\n    color: white;\n    border: none;\n  }\n\n  .btn-secondary:hover {\n    background-color: #5a6268;\n  }\n\n  /* Optional: Backdrop for modal */\n  .modal-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 999;\n  }\n\n  /* Table Header Styles */\n  th {\n    text-align: left;\n    border: 1px solid #000;\n    padding: 8px;\n    background-color: #f2f2f2;\n  }\n\n  th span {\n    cursor: pointer;\n \n  }\n\n  th span:hover {\n    color: darkblue;\n  }\n\n  th .btn {\n    margin-left: 8px;\n  }\n`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 636,\n    columnNumber: 9\n  }, this);\n};\n_s(YourComponent, \"+bmUdgP1DKih+yeK0qHO6BX8a9E=\", false, function () {\n  return [useNavigate];\n});\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Link","useNavigate","jsxDEV","_jsxDEV","YourComponent","users","_s","data","setData","subNavData","setSubNavData","loading","setLoading","isModalOpen","setIsModalOpen","posterImage","setPosterImage","imagePreview","setImagePreview","selectedOrganization","setSelectedOrganization","image","setImage","name","setName","organizationOptions","setOrganizationOptions","organization","setOrganization","loadingOrganization","setLoadingOrganization","selectedCategory","setSelectedCategory","loadingOrganizations","setLoadingOrganizations","organizations","setOrganizations","categories","setCategories","isSecondModalOpen","setIsSecondModalOpen","apiData","setApiData","navId","setNavId","navigate","checkedItems","setCheckedItems","filteredVendorOptions","setFilteredVendorOptions","isEditModalOpen","setIsEditModalOpen","selectedUser","setSelectedUser","userData","setUserData","editedName","setEditedName","editedImage","setEditedImage","isPopupOpen","setIsPopupOpen","clientOptions","setClientOptions","popupNavId","setPopupNavId","subNavId","setSubNavId","selectedSubNavId","setSelectedSubNavId","subName","setSubName","subPosterImage","setSubPosterImage","subPopupVisible","setSubPopupVisible","itemData","setItemData","handleSubmitsssss","e","preventDefault","response","put","console","log","error","handleEdit","handleSave","handleNameClicks","fetchSubNavData","get","fetchVendorOptions","fetch","ok","Error","json","options","map","role","value","label","fetchCategories","category","fetchOrganizations","org","handleSubNavSubmit","event","editedData","split","method","headers","body","JSON","stringify","status","closeSubNavPopup","handleNameClick","fetchUserData","closePopup","fetchedData","handleSubmitssss","handleSubmitsss","handleEditSubmit","cleanImage","replace","alert","_error$response","message","handleEditButtonClick","user","closeEditModal","handleSubmits","formData","post","window","location","reload","_error$response2","handleImageChange","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","fetchData","initialSubNavData","Promise","all","item","subNavResponse","handleSubmitss","imageFields","requestBody","handleCheckboxChange","prev","handleHeaderCheckboxChange","subNavItems","allChecked","every","newCheckedItems","forEach","handleDelete","delete","prevData","filter","prevSubNavData","_","rest","handleDeleteSubNav","updatedSubNavData","Object","keys","client","setClient","vendor","setVendor","employee","setEmployee","setUser","textFields","setTextFields","setImageFields","videoFields","setVideoFields","imageInputRef","videoInputRef","addField","type","current","click","handleFileChange","base64String","style","marginLeft","marginTop","children","className","marginRight","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","option","borderCollapse","_subNavData$user$navI","border","padding","backgroundColor","checked","cursor","length","display","alignItems","position","top","right","background","fontSize","onSubmit","required","imageUrl","src","alt","width","field","index","updatedFields","accept","ref","video","controls","float","id","htmlFor","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["C:/Users/Akhil.t.EIS/Videos/IIA_Final/IIA_DASHBOARDS/src/Component/ControllersTableData.js"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nconst YourComponent = ({ users }) => {\r\n    const [data, setData] = useState([]); // Main navigation data\r\n    const [subNavData, setSubNavData] = useState({}); // Store sub-navigation data grouped by navId\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [posterImage, setPosterImage] = useState('');\r\n    const [imagePreview, setImagePreview] = useState(null);\r\n    const [selectedOrganization, setSelectedOrganization] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [organizationOptions, setOrganizationOptions] = useState([]);\r\n    const [organization, setOrganization] = useState('');\r\n    const [loadingOrganization, setLoadingOrganization] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [loadingOrganizations, setLoadingOrganizations] = useState(false);\r\n    const [organizations, setOrganizations] = useState([]);\r\n    const [categories, setCategories] = useState([]); \r\n    const [isSecondModalOpen, setIsSecondModalOpen] = useState(false); // Second modal state\r\n    const [apiData, setApiData] = useState([]);\r\n    const [navId, setNavId] = useState(1); // Initialize navId with a default value another data also \r\n    const navigate = useNavigate();\r\n    const [checkedItems, setCheckedItems] = useState({}); // State to track checked items\r\n    const [filteredVendorOptions, setFilteredVendorOptions] = useState([]);\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [userData, setUserData] = useState(null);\r\n    const [editedName, setEditedName] = useState('');\r\n    const [editedImage, setEditedImage] = useState('');\r\n    // Function to handle form submission for editing\r\n    // Function to handle form submission for editing data not \r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const [clientOptions, setClientOptions] = useState([]);\r\n    const [popupNavId, setPopupNavId] = useState(null);\r\n    const [subNavId, setSubNavId] = useState(null);\r\n    const [selectedSubNavId, setSelectedSubNavId] = useState(null);\r\n    const [subName, setSubName] = useState('');\r\n    const [subPosterImage, setSubPosterImage] = useState('');\r\n    const [subPopupVisible, setSubPopupVisible] = useState(false);\r\n    const [itemData, setItemData] = useState(null); // New state for item data\r\n\r\n\r\n    const handleSubmitsssss = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.put(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${selectedSubNavId}`, {\r\n                name: name // Body with the new name\r\n            });\r\n            console.log('Edit response:', response.data); // Log response from the API\r\n            setIsPopupOpen(false); // Close the popup after successful edit\r\n            // Optionally, you can fetch the updated data again or update state directly\r\n        } catch (error) {\r\n            console.error('Error updating sub navigation data:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleEdit = () => {\r\n        // Logic for editing goes here\r\n        console.log('Edit button clicked');\r\n    };\r\n\r\n    const handleSave = () => {\r\n        // Logic for saving goes here\r\n        console.log('Save button clicked');\r\n    };\r\n\r\n\r\n \r\n    const handleNameClicks = (subNavId) => {\r\n        console.log(\"Clicked SubNav ID:\", subNavId);\r\n        setSelectedSubNavId(subNavId);\r\n        setIsPopupOpen(true);\r\n    };\r\n\r\n    const fetchSubNavData = async (subNavId) => {\r\n        try {\r\n            const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/getbyidforview/${subNavId}`);\r\n            console.log(response.data); // Check the structure of the response\r\n            if (response.data) {\r\n                setItemData(response.data);\r\n                setName(response.data.name || ''); // Use empty string if name is undefined\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching sub navigation data:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchVendorOptions = async () => {\r\n          try {\r\n            const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/enum/roles');\r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch vendor options');\r\n            }\r\n            const data = await response.json();\r\n    \r\n            // Map each role to an object with value and label for dropdown\r\n            const options = data.map((role) => ({\r\n              value: role,\r\n              label: role,\r\n            }));\r\n    \r\n            setFilteredVendorOptions(options);\r\n          } catch (error) {\r\n            console.error('Error fetching vendor options:', error);\r\n          }\r\n        };\r\n    \r\n        fetchVendorOptions();\r\n      }, []);\r\n\r\n\r\n      useEffect(() => {\r\n        const fetchCategories = async () => {\r\n          try {\r\n            const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/enum/categoryies');\r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch categories');\r\n            }\r\n            const data = await response.json();\r\n    \r\n            // Convert each category string into an object with value and label for the dropdown\r\n            const options = data.map((category) => ({\r\n              value: category,\r\n              label: category,\r\n            }));\r\n    \r\n            setClientOptions(options);\r\n          } catch (error) {\r\n            console.error('Error fetching categories:', error);\r\n          } finally {\r\n            setLoading(false);\r\n          }\r\n        };\r\n    \r\n        fetchCategories();\r\n      }, []);\r\n\r\n\r\n      useEffect(() => {\r\n        if (selectedCategory) {\r\n            const fetchOrganizations = async () => {\r\n                setLoadingOrganizations(true);\r\n                try {\r\n                    const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/api/users/by-category/${selectedCategory}`);\r\n                    const data = await response.json();\r\n                    setOrganizations(data.map((org) => ({ label: org, value: org })));\r\n                    setLoadingOrganizations(false);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching organizations:\", error);\r\n                    setLoadingOrganizations(false);\r\n                }\r\n            };\r\n\r\n            fetchOrganizations();\r\n        }\r\n    }, [selectedCategory]);\r\n    \r\n\r\n    useEffect(() => {\r\n        if (selectedSubNavId && isPopupOpen) {\r\n            fetchSubNavData(selectedSubNavId);\r\n        }\r\n    }, [selectedSubNavId, isPopupOpen]);\r\n\r\n    const handleSubNavSubmit = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission procedures of the ParentComponent.js,FeesCollections.js,EventManagement.js,CoursesTableData.js,AllWebinars.js code int the  \r\n        setLoading(true);\r\n\r\n        const editedData = {\r\n            subNavId,\r\n            name,\r\n            image: posterImage.split(',')[1] // Send image data without prefix\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/editbyid/${subNavId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editedData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            // Handle success (close popup, refresh data, etc.)\r\n            closeSubNavPopup(); // Close the subNav popup after submission\r\n            console.log('SubNav data updated successfully!');\r\n          \r\n        } catch (error) {\r\n            console.error(\"Error updating subNav data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const closeSubNavPopup = () => {\r\n        setSubNavId(null);\r\n        setName('');\r\n        setPosterImage('');\r\n    };\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleNameClick = (navId) => {\r\n        setPopupNavId(navId);\r\n        fetchUserData(navId); // Fetch data for this navId when the name is clicked\r\n    };\r\n\r\n    const closePopup = () => {\r\n        setPopupNavId(null); // Close the popup\r\n        setName(''); // Clear form data\r\n        setPosterImage(null); // Clear image preview\r\n    };\r\n\r\n    const fetchUserData = async (navId) => {\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${navId}`);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const fetchedData = await response.json(); // Parse the JSON response\r\n\r\n            // Set the state with the fetched data\r\n            setName(fetchedData.name);\r\n\r\n            // Check if the image is not empty and prepend the base64 prefix\r\n            if (fetchedData.image) {\r\n                setPosterImage(`data:image/png;base64,${fetchedData.image}`); // Update according to the image format\r\n            } else {\r\n                setPosterImage(''); // Clear image state if no image\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching user data:\", error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSubmitssss = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission\r\n        setLoading(true);\r\n\r\n        const editedData = {\r\n            navId: popupNavId, // Send the ID along with the data\r\n            name,\r\n            image: posterImage.split(',')[1] // Remove the prefix before sending\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${popupNavId}`, {\r\n                method: 'PUT', // Use PUT for editing\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editedData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            // Optionally, handle success (e.g., close popup, refresh data, show message, etc.)\r\n            console.log('Data updated successfully!');\r\n        } catch (error) {\r\n            console.error(\"Error updating data:\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    //   const handleImageChangess = (e) => {\r\n    //     const file = e.target.files[0];\r\n    //     if (file) {\r\n    //       const reader = new FileReader();\r\n    //       reader.onloadend = () => {\r\n    //         setPosterImage(reader.result); // Preview the image\r\n    //       };\r\n    //       reader.readAsDataURL(file);\r\n    //     }\r\n    //   };\r\n\r\n    const handleSubmitsss = (e) => {\r\n        e.preventDefault();\r\n        // Submit form logic here (API call or update data)\r\n        console.log(\"Submitted data:\", { navId: popupNavId, name, posterImage });\r\n    };\r\n    // const handleUserNameClick = async (user) => {\r\n    //     try {\r\n    //         const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\r\n    //         setUserData(response.data); // Set the user data\r\n    //         setNavId(user.navId);\r\n    //         setIsEditModalOpen(true); // Open the edit modal\r\n    //     } catch (error) {\r\n    //         console.error(\"Error fetching user data:\", error);\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Prepare the image as base64 (assuming image is handled as base64)\r\n            const cleanImage = editedImage ? editedImage.replace(/^data:image\\/[a-zA-Z]+;base64,/, '') : '';\r\n\r\n            const response = await axios.put(\r\n                `http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/editbyid/${selectedUser.navId}`,\r\n                {\r\n                    name: editedName, // Send updated name\r\n                    image: cleanImage, // Send updated image (as base64)\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                alert('User details updated successfully');\r\n                setIsEditModalOpen(false);\r\n                // Optionally, update the user details in the table without reloading\r\n                // e.g., by updating the state that stores users\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating user details:', error.response?.data || error.message);\r\n            alert('Failed to update user details');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleEditButtonClick = async (user) => {\r\n        console.log('Editing user:', user); // Confirm this is being called\r\n        try {\r\n            const response = await axios.get(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/getbyid/${user.navId}`);\r\n            console.log('User data fetched:', response.data); // Log the response data\r\n            setUserData(response.data); // Assuming the response contains the user data\r\n            setNavId(user.navId);\r\n            setIsEditModalOpen(true); // Open the edit modal\r\n        } catch (error) {\r\n            console.error(\"Error fetching user data:\", error);\r\n        }\r\n    };\r\n\r\n    const closeEditModal = () => {\r\n        setIsEditModalOpen(false);\r\n        setUserData(null); // Reset userData on close\r\n    };\r\n\r\n\r\n    const handleSubmits = async (event) => {\r\n        event.preventDefault();\r\n        const cleanImage = image.replace(/^data:image\\/[a-zA-Z]+;base64,/, '');\r\n        const formData = {\r\n            name: name,\r\n            image: cleanImage,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                'http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/add',\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n            console.log('Form submitted successfully:', response.data);\r\n            closeSubNavPopup();\r\n            alert('Data added successfully!');\r\n            window.location.reload();\r\n          \r\n            // navigate('/login');\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error.response?.data || error.message);\r\n        }\r\n    };\r\n\r\n    const handleImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setImage(reader.result);\r\n                setPosterImage(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n    // Fetch initial data\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/all');\r\n                console.log('API Response:', response.data); // Log response data\r\n                setData(response.data); // Set fetched data\r\n\r\n                // Fetch sub-navigation data for each navId\r\n                const initialSubNavData = {};\r\n                await Promise.all(response.data.map(async (item) => {\r\n                    const subNavResponse = await fetch(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/subnav/${item.navId}`);\r\n                    const subNavData = await subNavResponse.json();\r\n                    initialSubNavData[item.navId] = subNavData; // Group data by navId\r\n                }));\r\n\r\n                setSubNavData(initialSubNavData); // Set grouped sub-navigation data\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setLoading(false); // End loading state\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Form submission handler\r\n    const handleSubmitss = async (e) => {\r\n        e.preventDefault();\r\n\r\n    //    alert(imageFields)\r\n       console.log(imageFields)\r\n        \r\n        // Prepare the data to be sent to the API\r\n        const requestBody = {\r\n            navId, // Use the navId from the selected course\r\n            name,\r\n\r\n        };\r\n\r\n        // POST API call\r\n        try {\r\n            const response = await fetch('http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/add', {\r\n                method: 'POST',\r\n                headers: {\r\n                     'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to submit the form');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('Form submitted successfully:', data);\r\n\r\n            // Handle the success, close modal, or reset form\r\n            setIsSecondModalOpen(false);\r\n            setName('');\r\n        } catch (error) {\r\n            console.error('Error submitting the form:', error);\r\n        }\r\n    };\r\n    // Handle checkbox change for individual items\r\n    const handleCheckboxChange = (subNavId) => {\r\n        setCheckedItems((prev) => ({\r\n            ...prev,\r\n            [subNavId]: !prev[subNavId], // Toggle the checked state\r\n        }));\r\n    };\r\n\r\n    // Handle header checkbox change to check/uncheck all corresponding subNav items\r\n    const handleHeaderCheckboxChange = (navId) => {\r\n        const subNavItems = subNavData[navId] || [];\r\n        const allChecked = subNavItems.every(item => !!checkedItems[item.subNavId]);\r\n\r\n        // Toggle checked state for all subNav items for the selected navId\r\n        const newCheckedItems = { ...checkedItems };\r\n        subNavItems.forEach(item => {\r\n            newCheckedItems[item.subNavId] = !allChecked; // Set to the opposite of current state\r\n        });\r\n\r\n        setCheckedItems(newCheckedItems);\r\n    };\r\n\r\n    // Function to delete a nav item by navId\r\n    const handleDelete = async (navId) => {\r\n        try {\r\n            // Replace with your API endpoint\r\n            await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/sidenav/deletedata/${navId}`);\r\n\r\n            // Update local state to remove the deleted item\r\n            setData(prevData => prevData.filter(user => user.navId !== navId));\r\n            setSubNavData(prevSubNavData => {\r\n                const { [navId]: _, ...rest } = prevSubNavData; // Remove subNavData for deleted navId\r\n                return rest;\r\n            });\r\n        } catch (error) {\r\n            console.error('Error deleting the item:', error);\r\n            // Handle error appropriately (e.g., show a notification)\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // Function to delete a sub-navigation item by subNavId\r\n    const handleDeleteSubNav = async (subNavId) => {\r\n        try {\r\n            // Replace with your API endpoint\r\n            await axios.delete(`http://10.10.20.9:7071/IIA-Website-1.0.0/subsidenavbar/deletesubsidenavbar/${subNavId}`);\r\n\r\n            // Update local state to remove the deleted item\r\n            setSubNavData(prevSubNavData => {\r\n                const updatedSubNavData = { ...prevSubNavData };\r\n                Object.keys(updatedSubNavData).forEach(navId => {\r\n                    updatedSubNavData[navId] = updatedSubNavData[navId].filter(item => item.subNavId !== subNavId);\r\n                });\r\n                return updatedSubNavData;\r\n            });\r\n\r\n            // Optionally, you may want to remove the checked item from checkedItems\r\n            setCheckedItems(prev => {\r\n                const { [subNavId]: _, ...rest } = prev; // Remove the checked state for deleted subNavId\r\n                return rest;\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error deleting the sub-navigation item:', error);\r\n            // Handle error appropriately (e.g., show a notification)\r\n        }\r\n    };\r\n\r\n\r\n    // State to track selected values of dropdowns\r\n    const [client, setClient] = useState('');\r\n    const [vendor, setVendor] = useState('');\r\n    const [employee, setEmployee] = useState('');\r\n    const [user, setUser] = useState('');\r\n\r\n    // // Mock data for dropdowns\r\n    // const clientOptions = [\r\n    //     { value: '_160_HR', label: 'Client' },\r\n    //     { value: '_320_HR', label: 'Vendor' },\r\n    // ];\r\n\r\n    // const vendorOptions = [\r\n    //     { value: '_160_HR', label: 'Employee' },\r\n    //     { value: '_320_HR', label: 'Admin' },\r\n    // ];\r\n\r\n    // const employeeOptions = [\r\n    //     { value: '_160_HR', label: 'User' },\r\n    //     { value: '_320_HR', label: 'Student' },\r\n    // ];\r\n\r\n    // const userOptions = [\r\n    //     { value: '_160_HR', label: 'Akhil' },\r\n    //     { value: '_320_HR', label: 'Naresh' },\r\n    // ];\r\n\r\n    // Filter logic for dependent dropdowns (Example)\r\n    // const filteredVendorOptions = vendorOptions.filter((option) =>\r\n    //     client === '_160_HR' ? option.value !== '_320_HR' : option\r\n    // );\r\n\r\n    // const filteredEmployeeOptions = employeeOptions.filter((option) =>\r\n    //     vendor === '_160_HR' ? option.value !== '_320_HR' : option\r\n    // );\r\n\r\n    // const filteredUserOptions = userOptions.filter((option) =>\r\n    //     employee === '_160_HR' ? option.value !== '_320_HR' : option\r\n    // );\r\n\r\n\r\n    const [textFields, setTextFields] = useState(['']);\r\n    const [imageFields, setImageFields] = useState([null]);\r\n    const [videoFields, setVideoFields] = useState([null]);\r\n\r\n    const imageInputRef = useRef(null);\r\n    const videoInputRef = useRef(null);\r\n\r\n    const addField = (type) => {\r\n        if (type === 'text') {\r\n            setTextFields([...textFields, '']);\r\n        } else if (type === 'image') {\r\n            // Programmatically click the hidden file input for image\r\n            imageInputRef.current.click();\r\n        } else if (type === 'video') {\r\n            // Programmatically click the hidden file input for video\r\n            videoInputRef.current.click();\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (type, event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n\r\n            reader.onloadend = () => {\r\n                const base64String = reader.result; // Base64 string\r\n                if (type === 'image') {\r\n                    setImage(reader.result);\r\n                    setPosterImage(reader.result);\r\n                    setImageFields((prev) => [...prev, base64String]);\r\n                } else if (type === 'video') {\r\n                    setVideoFields((prev) => [...prev, base64String]);\r\n                }\r\n            };\r\n\r\n            // Read the file as a Data URL (Base64 string)\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div style={{ marginLeft: '200px', marginTop: '180px' }}>   {/* Modal for adding an image fething data not easy task to calculating the things as*/}\r\n            {/* <h2 className=\"d-flex \" style={{ marginLeft: '320px' }}>CONTROLLERS</h2> */}\r\n            {/* <div className=\"d-flex \" style={{ marginRight: '620px', marginTop: '-60px', marginBottom: '36px' }}>\r\n                <button onClick={() => setIsModalOpen(true)} className=\"btn btn-primary\">\r\n                    Add\r\n                </button>\r\n            </div> */}\r\n               <nav className=\"navbar1\">\r\n            <div className=\"row\" style={{ marginTop: '0px' }}>\r\n                <div className=\"col-lg-1 col-md-6 col-sm-12\" style={{ marginTop: '4px',marginRight: '22px'  }}>\r\n                    <button onClick={() => setIsModalOpen(true)} className=\"btn btn-primary\">\r\n                        Add\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Client Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\" style={{ marginRight: '22px' }}>\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={client}\r\n                            onChange={(e) => setClient(e.target.value)}\r\n                        >\r\n                            <option value=\"\" disabled>Category</option>\r\n                            {clientOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\" style={{ marginRight: '22px' }}>\r\n                <div className=\"form-group\">\r\n                    <select\r\n                        className=\"form-control\"\r\n                        value={organization}\r\n                        onChange={(e) => setOrganization(e.target.value)}\r\n                      \r\n                    >\r\n                        <option value=\"\" disabled>Select Organization</option>\r\n                        {organizationOptions.map((option) => (\r\n                            <option key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    {loadingOrganization && <p>Loading organizations...</p>}\r\n                </div>\r\n                </div>\r\n\r\n                {/* Vendor Dropdown */}\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\" style={{ marginRight: '22px' }}>\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={vendor}\r\n                            onChange={(e) => setVendor(e.target.value)}\r\n                           \r\n                        >\r\n                            <option value=\"\" disabled>Roles</option>\r\n                            {filteredVendorOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-lg-2 col-md-6 col-sm-12\" style={{ marginRight: '22px' }}>\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={vendor}\r\n                            onChange={(e) => setVendor(e.target.value)}\r\n                          \r\n                        >\r\n                            <option value=\"\" disabled>Users</option>\r\n                            {/* {filteredVendorOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))} */}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-1 col-md-6 col-sm-12\" style={{ marginTop: '4px',marginRight: '22px'  }}>\r\n                    <button className=\"btn btn-primary\">\r\n                        Apply\r\n                    </button>\r\n                </div>\r\n\r\n\r\n\r\n                {/* Employee Dropdown */}\r\n                {/* <div className=\"col-lg-2 col-md-6 col-sm-12\" style={{ marginRight: '22px' }}>\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={employee}\r\n                            onChange={(e) => setEmployee(e.target.value)}\r\n                            disabled={!vendor} // Disable if vendor is not selected\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {filteredEmployeeOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div> */}\r\n\r\n                {/* User Dropdown */}\r\n                {/* <div className=\"col-lg-2 col-md-6 col-sm-12\" style={{ marginRight: '20px' }}>\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            value={user}\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            disabled={!employee} // Disable if employee is not selected\r\n                        >\r\n                            <option value=\"\" disabled>Select Any</option>\r\n                            {filteredUserOptions.map((option) => (\r\n                                <option key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            </nav>\r\n\r\n\r\n            <table style={{ borderCollapse: 'collapse', marginLeft: '27px', marginTop: '70px' }}>\r\n                <thead>\r\n                    <tr>\r\n                        {data.map((user) => (\r\n                            <th\r\n                                key={user.navId}\r\n                                style={{ border: '1px solid #000', padding: '8px', backgroundColor: '#f2f2f2' }}\r\n                                 >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={subNavData[user.navId]?.every(item => !!checkedItems[item.subNavId])}\r\n                                    onChange={() => handleHeaderCheckboxChange(user.navId)}\r\n                                />\r\n                                <span\r\n                                    key={user.navId}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    onClick={() => handleNameClick(user.navId)}\r\n                                >\r\n                                    {user.name}\r\n                                </span>\r\n                                <button onClick={() => { setIsSecondModalOpen(true); setNavId(user.navId); }} className=\"btn btn-primary\">\r\n                                    Add\r\n                                </button>\r\n                                <button onClick={() => handleDelete(user.navId)} className=\"btn btn-danger\" style={{ marginLeft: '8px' }}>\r\n                                    <i className=\"la la-trash-o\"></i>\r\n                                </button>\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {data.map((user) => (\r\n                            <td key={user.navId} style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                                {subNavData[user.navId] && subNavData[user.navId].length > 0 ? (\r\n                                    subNavData[user.navId].map((item) => (\r\n                                        <div key={item.subNavId} style={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={!!checkedItems[item.subNavId]}\r\n                                                onChange={() => handleCheckboxChange(item.subNavId)}\r\n                                            />\r\n                                            <span onClick={() => handleNameClicks(item.subNavId)} style={{ cursor: 'pointer' }}>\r\n                                                {item.name}\r\n                                            </span>\r\n                                            <button onClick={() => handleDeleteSubNav(item.subNavId)} className=\"btn btn-danger\" style={{ marginLeft: '8px' }}>\r\n                                                <i className=\"la la-trash-o\"></i>\r\n                                            </button>\r\n                                        </div>\r\n                                    ))\r\n                                ) : (\r\n                                    <span>No data available</span>\r\n                                )}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            {isPopupOpen && itemData && ( // Ensure itemData is defined before rendering\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        {/* <h2>Edit Details for {selectedSubNavId}</h2> */}\r\n                        {/* Close button */}\r\n                        <button\r\n                            className=\"close-button\"\r\n                            onClick={() => setIsPopupOpen(false)} // Close the popup when clicked\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: '10px',\r\n                                right: '10px',\r\n                                background: 'none',\r\n                                border: 'none',\r\n                                fontSize: '20px',\r\n                                cursor: 'pointer',\r\n                                marginTop:'-10px'\r\n                            }}\r\n                        >\r\n                            &times; {/* This represents the \"X\" symbol */}\r\n                        </button>\r\n                        <form onSubmit={handleSubmitsssss}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name} // Controlled input using name state\r\n                                    onChange={(e) => setName(e.target.value)} // Update name state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isEditModalOpen && userData && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={closeEditModal}>&times;</span>\r\n                        {/* <h2>Edit User</h2> */}\r\n                        <form>\r\n                            <div>\r\n                                <label>Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={userData.name || ''} // Default to empty string if name is undefined\r\n                                    onChange={(e) => setUserData({ ...userData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Image:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={userData.imageUrl || ''} // Default to empty string if imageUrl is undefined\r\n                                    onChange={(e) => setUserData({ ...userData, imageUrl: e.target.value })}\r\n                                />\r\n                                {userData.imageUrl && <img src={userData.imageUrl} alt=\"User\" style={{ width: '100px' }} />}\r\n                            </div>\r\n                            <button type=\"button\" onClick={closeEditModal} className=\"btn btn-primary\">Save</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isModalOpen && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        {/* <button className=\"close-button\" onClick={() => setIsModalOpen(false)}>\r\n                            &times;\r\n                        </button> */}\r\n                        <form onSubmit={handleSubmits}>\r\n                        <table className=\"form-table\">\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    Text\r\n                    <button type=\"button\" className=\"add-icon\" onClick={() => addField('text')}>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </button>\r\n                </th>\r\n                <th>\r\n                    Upload Image\r\n                    <button type=\"button\" className=\"add-icon\" onClick={() => addField('image')}>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </button>\r\n                </th>\r\n                <th>\r\n                    Upload Video\r\n                    <button type=\"button\" className=\"add-icon\" onClick={() => addField('video')}>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </button>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    {textFields.map((field, index) => (\r\n                        <div className=\"input-group\" key={index}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control1\"\r\n                                value={field}\r\n                                onChange={(e) => {\r\n                                    const updatedFields = [...textFields];\r\n                                    updatedFields[index] = e.target.value;\r\n                                    setTextFields(updatedFields);\r\n                                    setName(e.target.value);\r\n                                }}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </td>\r\n                <td>\r\n                    {imageFields.map((image, index) => (\r\n                        <div key={index} className=\"file-preview\">\r\n                            {image ? (\r\n                                <img src={image} alt=\"Uploaded\" className=\"file-image-preview\" />\r\n                            ) : null}\r\n                        </div>\r\n                    ))}\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        ref={imageInputRef}\r\n                        className=\"file-upload\"\r\n                        style={{ display: 'none' }}\r\n                        onChange={(e) => handleFileChange('image', e)}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    {videoFields.map((video, index) => (\r\n                        <div key={index} className=\"file-preview\">\r\n                            {video ? (\r\n                                <video controls src={video} className=\"file-video-preview\" />\r\n                            ) : null}\r\n                        </div>\r\n                    ))}\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"video/*\"\r\n                        ref={videoInputRef}\r\n                        className=\"file-upload\"\r\n                        style={{ display: 'none' }}\r\n                        onChange={(e) => handleFileChange('video', e)}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div className=\"button-group\">\r\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={handleEdit}>\r\n            Edit\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-success\" onClick={handleSave}>\r\n            Save\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn-primary\"  onClick={() => setIsModalOpen(false)}>\r\n            Close\r\n        </button>\r\n    </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n{isSecondModalOpen && (\r\n  <div className=\"modal-overlay\">\r\n  <div className=\"modal-content\">\r\n      {/* <button className=\"close-button\" onClick={() => setIsSecondModalOpen(false)}>\r\n          &times;\r\n      </button> */}\r\n      <form onSubmit={handleSubmitss} className=\"modal-form\">\r\n    <table className=\"form-table\">\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    Text\r\n                    <button type=\"button\" className=\"add-icon\" onClick={() => addField('text')}>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </button>\r\n                </th>\r\n                <th>\r\n                    Upload Image\r\n                    <button type=\"button\" className=\"add-icon\" onClick={() => addField('image')}>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </button>\r\n                </th>\r\n                <th>\r\n                    Upload Video\r\n                    <button type=\"button\" className=\"add-icon\" onClick={() => addField('video')}>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                    </button>\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    {textFields.map((field, index) => (\r\n                        <div className=\"input-group\" key={index}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control1\"\r\n                                value={field}\r\n                                onChange={(e) => {\r\n                                    const updatedFields = [...textFields];\r\n                                    updatedFields[index] = e.target.value;\r\n                                    setTextFields(updatedFields);\r\n                                    setName(e.target.value);\r\n                                }}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </td>\r\n                <td>\r\n                    {imageFields.map((image, index) => (\r\n                        <div key={index} className=\"file-preview\">\r\n                            {image ? (\r\n                                <img src={image} alt=\"Uploaded\" className=\"file-image-preview\" />\r\n                            ) : null}\r\n                        </div>\r\n                    ))}\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        ref={imageInputRef}\r\n                        className=\"file-upload\"\r\n                        style={{ display: 'none' }}\r\n                        onChange={(e) => handleFileChange('image', e)}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    {videoFields.map((video, index) => (\r\n                        <div key={index} className=\"file-preview\">\r\n                            {video ? (\r\n                                <video controls src={video} className=\"file-video-preview\" />\r\n                            ) : null}\r\n                        </div>\r\n                    ))}\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"video/*\"\r\n                        ref={videoInputRef}\r\n                        className=\"file-upload\"\r\n                        style={{ display: 'none' }}\r\n                        onChange={(e) => handleFileChange('video', e)}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <div className=\"button-group\">\r\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={handleEdit}>\r\n            Edit\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-success\" onClick={handleSave}>\r\n            Save\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn-primary\"  onClick={() => setIsSecondModalOpen(false)}>\r\n            Close\r\n        </button>\r\n    </div>\r\n</form>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n)}\r\n\r\n            {popupNavId && (\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        <button onClick={closePopup} className=\"close-button\" style={{ float: 'right', cursor: 'pointer' }}>\r\n                            &times; {/* X symbol */}\r\n                        </button>\r\n                        {/* <h2>Details for NavId: {popupNavId}</h2> */}\r\n                        <form onSubmit={handleSubmitssss}>\r\n                            <div className=\"col-lg-2 col-md-12 col-sm-12\">\r\n                                <div className=\"add-choosen\">\r\n                                    <div className=\"input-blocks\">\r\n                                        <div className=\"image-upload\" style={{ marginRight: '100px' }}>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                id=\"imageInput\"\r\n                                                accept=\"image/*\"\r\n                                                onChange={handleImageChange}\r\n                                                style={{ display: 'none' }}\r\n                                                required\r\n                                            />\r\n                                            <label htmlFor=\"imageInput\" className=\"image-uploads\">\r\n                                                <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                                                <h4>Add Image</h4>\r\n                                                {posterImage && (\r\n                                                    <img\r\n                                                        src={posterImage}\r\n                                                        alt=\"Preview\"\r\n                                                    />\r\n                                                )}\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)} // Update the name state\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            {/* SubNav Popup */}\r\n            {subNavId && (\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                        <button onClick={closeSubNavPopup} className=\"close-button\" style={{ float: 'right', cursor: 'pointer' }}>\r\n                            &times;\r\n                        </button>\r\n                        <h2>Edit SubNavId: {subNavId}</h2>\r\n                        <form onSubmit={handleSubNavSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"form-label\">Image</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"imageInput\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleImageChange}\r\n                                    style={{ display: 'none' }}\r\n                                    required\r\n                                />\r\n                                <label htmlFor=\"imageInput\" className=\"image-uploads\" style={{ cursor: 'pointer' }}>\r\n                                    <i data-feather=\"plus-circle\" className=\"plus-down-add me-0\"></i>\r\n                                    <h4>Add Image</h4>\r\n                                    {posterImage && (\r\n                                        <img src={posterImage} alt=\"Preview\" style={{ maxWidth: '100px', maxHeight: '100px' }} />\r\n                                    )}\r\n                                </label>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                                    {loading ? 'Submitting...' : 'Submit'}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <style>\r\n                {`\r\n                .popup {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.popup-content {\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  margin-top: 10px;\r\n}\r\n\r\n  /* Modal Styles */\r\n  .modal {\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    z-index: 1000;\r\n    width: 1000px; /* Adjust as needed */\r\n  }\r\n\r\n  .modal-content {\r\n    display: flex;\r\n    max-width:1000px;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .form-control {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .form-label {\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .btn {\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .btn-primary {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n  }\r\n\r\n  .btn-primary:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  .btn-secondary {\r\n    background-color: #6c757d;\r\n    color: white;\r\n    border: none;\r\n  }\r\n\r\n  .btn-secondary:hover {\r\n    background-color: #5a6268;\r\n  }\r\n\r\n  /* Optional: Backdrop for modal */\r\n  .modal-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 999;\r\n  }\r\n\r\n  /* Table Header Styles */\r\n  th {\r\n    text-align: left;\r\n    border: 1px solid #000;\r\n    padding: 8px;\r\n    background-color: #f2f2f2;\r\n  }\r\n\r\n  th span {\r\n    cursor: pointer;\r\n \r\n  }\r\n\r\n  th span:hover {\r\n    color: darkblue;\r\n  }\r\n\r\n  th .btn {\r\n    margin-left: 8px;\r\n  }\r\n`}\r\n            </style>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YourComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}